{"version":3,"file":"index.js","sources":["../src/lib/hooks/useCounter/index.ts","../src/lib/hooks/usePrevious/index.ts","../src/lib/hooks/useToggle/index.ts","../src/lib/hooks/useWindowSize/index.ts","../src/lib/hooks/useLocalStorage/index.ts","../src/lib/hooks/useDebounce/index.ts","../src/lib/hooks/useThrottle/index.ts","../src/lib/hooks/useClickAway/index.ts","../src/lib/hooks/useInView/index.ts","../src/lib/hooks/useTimeAgo/index.ts","../src/lib/hooks/useQueue/index.ts","../src/lib/hooks/usePolling/index.ts","../src/lib/hooks/useMouse/index.ts","../src/lib/hooks/useFullscreen/index.ts","../src/lib/hooks/useEventBus/index.ts","../src/lib/hooks/useElementSize/index.ts","../src/lib/hooks/useClipboard/index.ts","../src/lib/hooks/useHover/index.ts","../src/lib/hooks/useScrolling/index.ts","../src/lib/hooks/useUpdateEffect/index.ts","../src/lib/hooks/useWatermark/index.ts","../src/lib/components/Button/Button.tsx"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nexport interface UseCounterOptions {\r\n  initialValue?: number;\r\n  min?: number;\r\n  max?: number;\r\n  step?: number;\r\n}\r\n\r\nexport interface UseCounterReturn {\r\n  count: number;\r\n  increment: () => void;\r\n  decrement: () => void;\r\n  reset: () => void;\r\n  setCount: (value: number) => void;\r\n  isMin: boolean;\r\n  isMax: boolean;\r\n}\r\n\r\nexport const useCounter = (options: UseCounterOptions = {}): UseCounterReturn => {\r\n  const {\r\n    initialValue = 0,\r\n    min = -Infinity,\r\n    max = Infinity,\r\n    step = 1,\r\n  } = options;\r\n\r\n  const [count, setCountState] = useState(initialValue);\r\n\r\n  const setCount = useCallback((value: number) => {\r\n    const clampedValue = Math.min(Math.max(value, min), max);\r\n    setCountState(clampedValue);\r\n  }, [min, max]);\r\n\r\n  const increment = useCallback(() => {\r\n    setCount(count + step);\r\n  }, [count, step, setCount]);\r\n\r\n  const decrement = useCallback(() => {\r\n    setCount(count - step);\r\n  }, [count, step, setCount]);\r\n\r\n  const reset = useCallback(() => {\r\n    setCountState(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const isMin = count <= min;\r\n  const isMax = count >= max;\r\n\r\n  return {\r\n    count,\r\n    increment,\r\n    decrement,\r\n    reset,\r\n    setCount,\r\n    isMin,\r\n    isMax,\r\n  };\r\n}; ","import { useRef, useEffect } from 'react';\r\n\r\nexport const usePrevious = <T>(value: T): T | undefined => {\r\n  const ref = useRef<T | undefined>(undefined);\r\n  \r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  \r\n  return ref.current;\r\n}; \r\n ","import { useCallback, useState } from 'react';\r\n\r\nexport interface UseToggleOptions<T = boolean> {\r\n  initialValue?: T;\r\n  trueValue?: T;\r\n  falseValue?: T;\r\n}\r\n\r\nexport interface UseToggleReturn<T> {\r\n  value: T;\r\n  toggle: () => void;\r\n  setValue: (value: T) => void;\r\n  setTrue: () => void;\r\n  setFalse: () => void;\r\n}\r\n\r\nexport const useToggle = <T = boolean>(\r\n  options: UseToggleOptions<T> = {}\r\n): UseToggleReturn<T> => {\r\n  const {\r\n    initialValue = false as T,\r\n    trueValue = true as T,\r\n    falseValue = false as T,\r\n  } = options;\r\n\r\n  const [value, setValue] = useState<T>(initialValue);\r\n\r\n  const toggle = useCallback(() => {\r\n    setValue(prev => prev === trueValue ? falseValue : trueValue);\r\n  }, [trueValue, falseValue]);\r\n\r\n  const setTrue = useCallback(() => {\r\n    setValue(trueValue);\r\n  }, [trueValue]);\r\n\r\n  const setFalse = useCallback(() => {\r\n    setValue(falseValue);\r\n  }, [falseValue]);\r\n\r\n  return {\r\n    value,\r\n    toggle,\r\n    setValue,\r\n    setTrue,\r\n    setFalse,\r\n  };\r\n}; ","import { useEffect, useState } from 'react';\r\n\r\nexport interface WindowSize {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface UseWindowSizeOptions {\r\n  debounceMs?: number;\r\n  initialSize?: WindowSize;\r\n}\r\n\r\nexport const useWindowSize = (options: UseWindowSizeOptions = {}): WindowSize => {\r\n  const { debounceMs = 100, initialSize = { width: 0, height: 0 } } = options;\r\n  \r\n  const [size, setSize] = useState<WindowSize>(() => {\r\n    if (typeof window !== 'undefined') {\r\n      return {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      };\r\n    }\r\n    return initialSize;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    let timeoutId: NodeJS.Timeout;\r\n\r\n    const handleResize = () => {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => {\r\n        setSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }, debounceMs);\r\n    };\r\n\r\n    // 使用 ResizeObserver 监听文档根元素\r\n    const observer = new ResizeObserver((entries) => {\r\n      for (const entry of entries) {\r\n        if (entry.target === document.documentElement) {\r\n          handleResize();\r\n          break;\r\n        }\r\n      }\r\n    });\r\n\r\n    // 同时监听 window resize 事件作为备用\r\n    window.addEventListener('resize', handleResize);\r\n    observer.observe(document.documentElement);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n      window.removeEventListener('resize', handleResize);\r\n      observer.disconnect();\r\n    };\r\n  }, [debounceMs]);\r\n\r\n  return size;\r\n}; ","import { useCallback, useState } from 'react';\r\n\r\nexport interface Serializer<T> {\r\n  stringify: (value: T) => string;\r\n  parse: (value: string) => T;\r\n}\r\n\r\nexport interface UseLocalStorageOptions<T = unknown> {\r\n  serializer?: Serializer<T>;\r\n  onError?: (error: Error) => void;\r\n}\r\n\r\nexport interface UseLocalStorageReturn<T> {\r\n  value: T;\r\n  setValue: (value: T | ((prev: T) => T)) => void;\r\n  removeValue: () => void;\r\n  isStored: boolean;\r\n}\r\n\r\nexport const useLocalStorage = <T>(\r\n  key: string,\r\n  initialValue: T,\r\n  options: UseLocalStorageOptions<T> = {}\r\n): UseLocalStorageReturn<T> => {\r\n  const { \r\n    serializer = { \r\n      stringify: JSON.stringify as unknown as Serializer<T>['stringify'], \r\n      parse: JSON.parse as unknown as Serializer<T>['parse'] \r\n    },\r\n    onError = (error) => console.error('useLocalStorage error:', error)\r\n  } = options;\r\n\r\n  const [storedValue, setStoredValue] = useState<T>(() => {\r\n    try {\r\n      if (typeof window === 'undefined') {\r\n        return initialValue;\r\n      }\r\n      \r\n      const item = window.localStorage.getItem(key);\r\n      return item ? serializer.parse(item) : initialValue;\r\n    } catch (error) {\r\n      onError(error as Error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const [isStored, setIsStored] = useState(() => {\r\n    try {\r\n      if (typeof window === 'undefined') {\r\n        return false;\r\n      }\r\n      return window.localStorage.getItem(key) !== null;\r\n    } catch {\r\n      return false;\r\n    }\r\n  });\r\n\r\n  const setValue = useCallback((value: T | ((prev: T) => T)) => {\r\n    try {\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      setIsStored(true);\r\n      \r\n      if (typeof window !== 'undefined') {\r\n        window.localStorage.setItem(key, serializer.stringify(valueToStore));\r\n      }\r\n    } catch (error) {\r\n      onError(error as Error);\r\n    }\r\n  }, [key, storedValue, serializer, onError]);\r\n\r\n  const removeValue = useCallback(() => {\r\n    try {\r\n      setStoredValue(initialValue);\r\n      setIsStored(false);\r\n      \r\n      if (typeof window !== 'undefined') {\r\n        window.localStorage.removeItem(key);\r\n      }\r\n    } catch (error) {\r\n      onError(error as Error);\r\n    }\r\n  }, [key, initialValue, onError]);\r\n\r\n  return {\r\n    value: storedValue,\r\n    setValue,\r\n    removeValue,\r\n    isStored,\r\n  };\r\n}; ","import { useEffect, useState } from 'react';\r\n\r\nexport interface UseDebounceOptions {\r\n  delay?: number;\r\n  immediate?: boolean;\r\n}\r\n\r\nexport interface UseDebounceReturn<T> {\r\n  value: T;\r\n  setValue: (value: T) => void;\r\n  debouncedValue: T;\r\n  isPending: boolean;\r\n}\r\n\r\nexport const useDebounce = <T>(\r\n  initialValue: T,\r\n  options: UseDebounceOptions = {}\r\n): UseDebounceReturn<T> => {\r\n  const { delay = 500, immediate = false } = options;\r\n  \r\n  const [value, setValue] = useState<T>(initialValue);\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(initialValue);\r\n  const [isPending, setIsPending] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (immediate) {\r\n      setDebouncedValue(value);\r\n      setIsPending(false);\r\n      return;\r\n    }\r\n\r\n    setIsPending(true);\r\n    const timer = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n      setIsPending(false);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay, immediate]);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    debouncedValue,\r\n    isPending,\r\n  };\r\n}; ","import { useEffect, useState, useRef } from 'react';\r\n\r\nexport interface UseThrottleOptions {\r\n  leading?: boolean;\r\n  trailing?: boolean;\r\n}\r\n\r\nexport interface UseThrottleReturn<T> {\r\n  value: T;\r\n  setValue: (value: T) => void;\r\n  throttledValue: T;\r\n  isThrottled: boolean;\r\n}\r\n\r\nexport const useThrottle = <T>(\r\n  initialValue: T,\r\n  interval: number = 500,\r\n  options: UseThrottleOptions = {}\r\n): UseThrottleReturn<T> => {\r\n  const { leading = true, trailing = true } = options;\r\n  \r\n  const [value, setValue] = useState<T>(initialValue);\r\n  const [throttledValue, setThrottledValue] = useState<T>(initialValue);\r\n  const [isThrottled, setIsThrottled] = useState(false);\r\n  \r\n  const lastUpdated = useRef<number | null>(null);\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n    \r\n    // 如果是第一次调用且 leading 为 true，立即更新\r\n    if (leading && lastUpdated.current === null) {\r\n      lastUpdated.current = now;\r\n      setThrottledValue(value);\r\n      setIsThrottled(false);\r\n      return;\r\n    }\r\n\r\n    // 如果距离上次更新时间已经超过间隔时间\r\n    if (lastUpdated.current && now >= lastUpdated.current + interval) {\r\n      lastUpdated.current = now;\r\n      setThrottledValue(value);\r\n      setIsThrottled(false);\r\n      \r\n      // 清除之前的定时器\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n        timeoutRef.current = null;\r\n      }\r\n    } else if (trailing) {\r\n      // 设置定时器在间隔时间后更新值\r\n      setIsThrottled(true);\r\n      \r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n      \r\n      timeoutRef.current = setTimeout(() => {\r\n        lastUpdated.current = Date.now();\r\n        setThrottledValue(value);\r\n        setIsThrottled(false);\r\n        timeoutRef.current = null;\r\n      }, interval - (now - (lastUpdated.current || 0)));\r\n    }\r\n  }, [value, interval, leading, trailing]);\r\n\r\n  // 清理定时器\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    throttledValue,\r\n    isThrottled,\r\n  };\r\n}; ","import { useEffect, useLayoutEffect, useRef, RefObject } from 'react';\r\n\r\nexport interface UseClickAwayOptions {\r\n  /** 是否启用点击外部检测 */\r\n  enabled?: boolean;\r\n  /** 要监听的事件类型 */\r\n  events?: ('mousedown' | 'touchstart')[];\r\n  /** 点击外部时的回调函数 */\r\n  onClickAway?: (event: Event) => void;\r\n}\r\n\r\nexport interface UseClickAwayReturn<T extends HTMLElement = HTMLElement> {\r\n  /** 要检测点击外部的元素引用 */\r\n  ref: RefObject<T | null>;\r\n}\r\n\r\n/**\r\n * 点击外部检测 Hook\r\n * 用于检测用户是否点击了指定元素之外的区域\r\n * \r\n * @param options 配置选项\r\n * @returns 返回元素引用\r\n * \r\n * @example\r\n * ```tsx\r\n * const { ref } = useClickAway({\r\n *   onClickAway: () => console.log('点击了外部'),\r\n *   events: ['mousedown', 'touchstart']\r\n * });\r\n * \r\n * return <div ref={ref}>点击外部会触发回调</div>;\r\n * ```\r\n */\r\nexport const useClickAway = <T extends HTMLElement = HTMLElement>(\r\n  options: UseClickAwayOptions = {}\r\n): UseClickAwayReturn<T> => {\r\n  const {\r\n    enabled = true,\r\n    events = ['mousedown', 'touchstart'],\r\n    onClickAway\r\n  } = options;\r\n\r\n  const ref = useRef<T>(null);\r\n  const callbackRef = useRef(onClickAway);\r\n\r\n  useLayoutEffect(() => {\r\n    callbackRef.current = onClickAway;\r\n  }, [onClickAway]);\r\n\r\n  useEffect(() => {\r\n    if (!enabled || !callbackRef.current) return;\r\n\r\n    const handler = (event: Event) => {\r\n      if (ref.current && !ref.current.contains(event.target as Node)) {\r\n        callbackRef.current?.(event);\r\n      }\r\n    };\r\n\r\n    events.forEach(eventType => {\r\n      document.addEventListener(eventType, handler);\r\n    });\r\n\r\n    return () => {\r\n      events.forEach(eventType => {\r\n        document.removeEventListener(eventType, handler);\r\n      });\r\n    };\r\n  }, [enabled, events]);\r\n\r\n  return { ref };\r\n}; ","import { useEffect, useRef, useState, RefObject } from 'react';\r\n\r\nexport interface UseInViewOptions extends IntersectionObserverInit {\r\n  /** 是否在初始渲染时触发回调 */\r\n  triggerOnce?: boolean;\r\n  /** 元素进入视口时的回调 */\r\n  onEnter?: () => void;\r\n  /** 元素离开视口时的回调 */\r\n  onLeave?: () => void;\r\n}\r\n\r\nexport interface UseInViewReturn {\r\n  /** 要检测的元素引用 */\r\n  ref: RefObject<Element | null>;\r\n  /** 元素是否在视口中 */\r\n  inView: boolean;\r\n  /** 元素进入视口的次数 */\r\n  entryCount: number;\r\n  /** 元素是否已经进入过视口（仅在 triggerOnce 为 true 时有效） */\r\n  hasEntered: boolean;\r\n}\r\n\r\n/**\r\n * 视口检测 Hook\r\n * 用于检测元素是否进入或离开视口\r\n * \r\n * @param options 配置选项\r\n * @returns 返回元素引用和视口状态\r\n * \r\n * @example\r\n * ```tsx\r\n * const { ref, inView, entryCount } = useInView({\r\n *   threshold: 0.5,\r\n *   rootMargin: '0px 0px -100px 0px',\r\n *   onEnter: () => console.log('元素进入视口'),\r\n *   onLeave: () => console.log('元素离开视口')\r\n * });\r\n * \r\n * return <div ref={ref}>当前在视口中: {inView ? '是' : '否'}</div>;\r\n * ```\r\n */\r\nexport const useInView = (options: UseInViewOptions = {}): UseInViewReturn => {\r\n  const {\r\n    threshold = 0,\r\n    rootMargin = '0px',\r\n    root,\r\n    triggerOnce = false,\r\n    onEnter,\r\n    onLeave\r\n  } = options;\r\n\r\n  const ref = useRef<Element>(null);\r\n  const [inView, setInView] = useState(false);\r\n  const [entryCount, setEntryCount] = useState(0);\r\n  const [hasEntered, setHasEntered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (!element) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        const isIntersecting = entry.isIntersecting;\r\n        \r\n        if (isIntersecting) {\r\n          setInView(true);\r\n          setEntryCount(prev => prev + 1);\r\n          \r\n          if (!hasEntered) {\r\n            setHasEntered(true);\r\n            onEnter?.();\r\n          }\r\n        } else {\r\n          setInView(false);\r\n          if (!triggerOnce) {\r\n            onLeave?.();\r\n          }\r\n        }\r\n      },\r\n      {\r\n        threshold,\r\n        rootMargin,\r\n        root\r\n      }\r\n    );\r\n\r\n    observer.observe(element);\r\n\r\n    return () => {\r\n      observer.unobserve(element);\r\n      observer.disconnect();\r\n    };\r\n  }, [threshold, rootMargin, root, triggerOnce, onEnter, onLeave, hasEntered]);\r\n\r\n  return {\r\n    ref,\r\n    inView,\r\n    entryCount,\r\n    hasEntered\r\n  };\r\n}; ","import { useCallback, useEffect, useState } from 'react';\r\n\r\nexport type TimeUnit = 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\r\nexport type Locale = 'zh' | 'en';\r\n\r\nexport interface UseTimeAgoOptions {\r\n  /** 更新时间间隔（毫秒） */\r\n  interval?: number;\r\n  /** 语言 */\r\n  locale?: Locale;\r\n  /** 是否使用相对时间格式 */\r\n  relative?: boolean;\r\n  /** 最小时间单位 */\r\n  minUnit?: TimeUnit;\r\n  /** 是否自动更新 */\r\n  autoUpdate?: boolean;\r\n}\r\n\r\nexport interface UseTimeAgoReturn {\r\n  /** 格式化后的时间字符串 */\r\n  timeAgo: string;\r\n  /** 原始时间戳 */\r\n  timestamp: Date;\r\n  /** 时间差（毫秒） */\r\n  diffInMs: number;\r\n  /** 是否正在更新 */\r\n  isUpdating: boolean;\r\n}\r\n\r\n// 中文时间单位映射\r\nconst CHINESE_UNITS: Record<TimeUnit, string> = {\r\n  second: '秒',\r\n  minute: '分钟',\r\n  hour: '小时',\r\n  day: '天',\r\n  week: '周',\r\n  month: '个月',\r\n  year: '年'\r\n};\r\n\r\n// 英文时间单位映射\r\nconst ENGLISH_UNITS: Record<TimeUnit, string> = {\r\n  second: 'second',\r\n  minute: 'minute',\r\n  hour: 'hour',\r\n  day: 'day',\r\n  week: 'week',\r\n  month: 'month',\r\n  year: 'year'\r\n};\r\n\r\n/**\r\n * 自定义时间格式化 Hook\r\n * 将时间戳转换为相对时间格式（如\"3分钟前\"）\r\n * \r\n * @param timestamp 时间戳（数字、字符串或 Date 对象）\r\n * @param options 配置选项\r\n * @returns 返回格式化后的时间字符串和相关状态\r\n * \r\n * @example\r\n * ```tsx\r\n * const { timeAgo, diffInMs } = useTimeAgo(new Date('2023-01-01'), {\r\n *   interval: 60000,\r\n *   locale: 'zh',\r\n *   relative: true\r\n * });\r\n * \r\n * return <div>发布时间: {timeAgo}</div>;\r\n * ```\r\n */\r\nexport const useTimeAgo = (\r\n  timestamp: string | number | Date,\r\n  options: UseTimeAgoOptions = {}\r\n): UseTimeAgoReturn => {\r\n  const {\r\n    interval = 60000,\r\n    locale = 'zh',\r\n    relative = true,\r\n    minUnit = 'minute',\r\n    autoUpdate = true\r\n  } = options;\r\n\r\n  const [timeAgo, setTimeAgo] = useState<string>('');\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n  const calculateTimeAgo = useCallback(() => {\r\n    const now = Date.now();\r\n    const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\r\n    const diffInMs = now - date.getTime();\r\n\r\n    // 转换为秒、分钟、小时等\r\n    const diffInSeconds = Math.floor(diffInMs / 1000);\r\n    const diffInMinutes = Math.floor(diffInSeconds / 60);\r\n    const diffInHours = Math.floor(diffInMinutes / 60);\r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    const diffInWeeks = Math.floor(diffInDays / 7);\r\n    const diffInMonths = Math.floor(diffInDays / 30);\r\n    const diffInYears = Math.floor(diffInDays / 365);\r\n\r\n    // 自定义格式化函数\r\n    const formatCustom = (value: number, unit: TimeUnit): string => {\r\n      const units = locale === 'zh' ? CHINESE_UNITS : ENGLISH_UNITS;\r\n      \r\n      // 中文特殊处理\r\n      if (locale === 'zh') {\r\n        if (unit === 'second' && value === 0) return '刚刚';\r\n        if (unit === 'second') return `${value}秒前`;\r\n        if (unit === 'minute') return `${value}分钟前`;\r\n        if (unit === 'hour') return `${value}小时前`;\r\n        if (unit === 'day') return `${value}天前`;\r\n        if (unit === 'week') return `${value}周前`;\r\n        if (unit === 'month') return `${value}个月前`;\r\n        if (unit === 'year') return `${value}年前`;\r\n      }\r\n      \r\n      // 英文处理\r\n      if (locale === 'en') {\r\n        if (value === 1) return `1 ${units[unit]} ago`;\r\n        return `${value} ${units[unit]}s ago`;\r\n      }\r\n      \r\n      return `${value} ${units[unit]}${locale === 'zh' ? '前' : 's ago'}`;\r\n    };\r\n\r\n    // 使用 Intl.RelativeTimeFormat 格式化\r\n    const formatWithIntl = (value: number, unit: TimeUnit): string => {\r\n      try {\r\n        const rtf = new Intl.RelativeTimeFormat(locale, { numeric: 'auto' });\r\n        return rtf.format(-value, unit);\r\n      } catch (e) {\r\n        return formatCustom(value, unit);\r\n      }\r\n    };\r\n\r\n    // 根据最小单位限制\r\n    if (minUnit === 'year' || (diffInYears > 0 && minUnit !== 'second')) {\r\n      return relative \r\n        ? formatWithIntl(diffInYears, 'year')\r\n        : formatCustom(diffInYears, 'year');\r\n    } else if (minUnit === 'month' || (diffInMonths > 0 && minUnit !== 'second' && minUnit !== 'minute')) {\r\n      return relative \r\n        ? formatWithIntl(diffInMonths, 'month')\r\n        : formatCustom(diffInMonths, 'month');\r\n    } else if (minUnit === 'week' || (diffInWeeks > 0 && minUnit !== 'second' && minUnit !== 'minute' && minUnit !== 'hour')) {\r\n      return relative \r\n        ? formatWithIntl(diffInWeeks, 'week')\r\n        : formatCustom(diffInWeeks, 'week');\r\n    } else if (minUnit === 'day' || (diffInDays > 0 && minUnit !== 'second' && minUnit !== 'minute')) {\r\n      return relative \r\n        ? formatWithIntl(diffInDays, 'day')\r\n        : formatCustom(diffInDays, 'day');\r\n    } else if (minUnit === 'hour' || (diffInHours > 0 && minUnit !== 'second')) {\r\n      return relative \r\n        ? formatWithIntl(diffInHours, 'hour')\r\n        : formatCustom(diffInHours, 'hour');\r\n    } else if (minUnit === 'minute' || diffInMinutes > 0) {\r\n      return relative \r\n        ? formatWithIntl(diffInMinutes, 'minute')\r\n        : formatCustom(diffInMinutes, 'minute');\r\n    } else {\r\n      return relative \r\n        ? formatWithIntl(diffInSeconds, 'second')\r\n        : formatCustom(diffInSeconds, 'second');\r\n    }\r\n  }, [timestamp, locale, relative, minUnit]);\r\n\r\n  // 初始计算时间\r\n  useEffect(() => {\r\n    setTimeAgo(calculateTimeAgo());\r\n  }, [calculateTimeAgo]);\r\n\r\n  // 设置定时器定期更新\r\n  useEffect(() => {\r\n    if (!autoUpdate) return;\r\n\r\n    const intervalId = setInterval(() => {\r\n      setIsUpdating(true);\r\n      setTimeAgo(calculateTimeAgo());\r\n      setIsUpdating(false);\r\n    }, interval);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [interval, calculateTimeAgo, autoUpdate]);\r\n\r\n  const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\r\n  const diffInMs = Date.now() - date.getTime();\r\n\r\n  return {\r\n    timeAgo,\r\n    timestamp: date,\r\n    diffInMs,\r\n    isUpdating\r\n  };\r\n};\r\n","import { useState, useCallback, useMemo } from 'react';\r\n\r\nexport interface UseQueueOptions<T> {\r\n  /** 初始队列元素 */\r\n  initialItems?: T[];\r\n  /** 队列最大长度 */\r\n  maxSize?: number;\r\n  /** 队列满时的处理策略 */\r\n  overflowStrategy?: 'drop' | 'error' | 'shift';\r\n}\r\n\r\nexport interface UseQueueReturn<T> {\r\n  /** 当前队列 */\r\n  queue: T[];\r\n  /** 入队 - 添加元素到队列末尾 */\r\n  enqueue: (item: T) => void;\r\n  /** 批量入队 - 添加多个元素到队列末尾 */\r\n  enqueueMany: (items: T[]) => void;\r\n  /** 出队 - 移除并返回队列的第一个元素 */\r\n  dequeue: () => T | undefined;\r\n  /** 查看队列的第一个元素（不移除） */\r\n  peek: () => T | undefined;\r\n  /** 查看队列的最后一个元素 */\r\n  peekLast: () => T | undefined;\r\n  /** 清空队列 */\r\n  clear: () => void;\r\n  /** 检查队列是否为空 */\r\n  isEmpty: () => boolean;\r\n  /** 获取队列长度 */\r\n  size: () => number;\r\n  /** 检查队列是否已满 */\r\n  isFull: () => boolean;\r\n  /** 队列的字符串表示 */\r\n  queueString: string;\r\n  /** 队列是否已满 */\r\n  full: boolean;\r\n  /** 队列长度 */\r\n  length: number;\r\n}\r\n\r\n/**\r\n * 队列 Hook\r\n * 提供队列数据结构的操作功能\r\n * \r\n * @template T - 队列元素的类型\r\n * @param options 配置选项\r\n * @returns 返回队列操作方法和状态\r\n * \r\n * @example\r\n * ```tsx\r\n * const { queue, enqueue, dequeue, size, isEmpty } = useQueue<number>({\r\n *   initialItems: [1, 2, 3],\r\n *   maxSize: 10,\r\n *   overflowStrategy: 'drop'\r\n * });\r\n * \r\n * return (\r\n *   <div>\r\n *     <button onClick={() => enqueue(Math.random())}>入队</button>\r\n *     <button onClick={() => dequeue()}>出队</button>\r\n *     <p>队列长度: {size()}</p>\r\n *     <p>队列内容: {queue.join(', ')}</p>\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const useQueue = <T>(\r\n  options: UseQueueOptions<T> = {}\r\n): UseQueueReturn<T> => {\r\n  const {\r\n    initialItems = [],\r\n    maxSize,\r\n    overflowStrategy = 'drop'\r\n  } = options;\r\n\r\n  const [queue, setQueue] = useState<T[]>(initialItems);\r\n\r\n  // 入队 - 添加元素到队列末尾\r\n  const enqueue = useCallback((item: T) => {\r\n    setQueue(prevQueue => {\r\n      if (maxSize && prevQueue.length >= maxSize) {\r\n        switch (overflowStrategy) {\r\n          case 'error':\r\n            throw new Error('Queue is full');\r\n          case 'shift':\r\n            return [...prevQueue.slice(1), item];\r\n          case 'drop':\r\n          default:\r\n            return prevQueue;\r\n        }\r\n      }\r\n      return [...prevQueue, item];\r\n    });\r\n  }, [maxSize, overflowStrategy]);\r\n\r\n  // 批量入队 - 添加多个元素到队列末尾\r\n  const enqueueMany = useCallback((items: T[]) => {\r\n    setQueue(prevQueue => {\r\n      if (!maxSize) {\r\n        return [...prevQueue, ...items];\r\n      }\r\n\r\n      const availableSpace = maxSize - prevQueue.length;\r\n      if (availableSpace <= 0) {\r\n        switch (overflowStrategy) {\r\n          case 'error':\r\n            throw new Error('Queue is full');\r\n          case 'shift':\r\n            const itemsToAdd = items.slice(-maxSize);\r\n            return [...prevQueue.slice(items.length), ...itemsToAdd];\r\n          case 'drop':\r\n          default:\r\n            return prevQueue;\r\n        }\r\n      }\r\n\r\n      const itemsToAdd = items.slice(0, availableSpace);\r\n      return [...prevQueue, ...itemsToAdd];\r\n    });\r\n  }, [maxSize, overflowStrategy]);\r\n\r\n  // 出队 - 移除并返回队列的第一个元素\r\n  const dequeue = useCallback((): T | undefined => {\r\n    let dequeuedItem: T | undefined;\r\n    setQueue(prevQueue => {\r\n      if (prevQueue.length === 0) return prevQueue;\r\n      dequeuedItem = prevQueue[0];\r\n      return prevQueue.slice(1);\r\n    });\r\n    return dequeuedItem;\r\n  }, []);\r\n\r\n  // 查看队列的第一个元素（不移除）\r\n  const peek = useCallback((): T | undefined => {\r\n    return queue[0];\r\n  }, [queue]);\r\n\r\n  // 查看队列的最后一个元素\r\n  const peekLast = useCallback((): T | undefined => {\r\n    return queue[queue.length - 1];\r\n  }, [queue]);\r\n\r\n  // 清空队列\r\n  const clear = useCallback(() => {\r\n    setQueue([]);\r\n  }, []);\r\n\r\n  // 检查队列是否为空\r\n  const isEmpty = useCallback((): boolean => {\r\n    return queue.length === 0;\r\n  }, [queue]);\r\n\r\n  // 获取队列长度\r\n  const size = useCallback((): number => {\r\n    return queue.length;\r\n  }, [queue]);\r\n\r\n  // 检查队列是否已满\r\n  const isFull = useCallback((): boolean => {\r\n    return maxSize ? queue.length >= maxSize : false;\r\n  }, [queue, maxSize]);\r\n\r\n  // 使用 useMemo 优化队列的字符串表示\r\n  const queueString = useMemo(() => {\r\n    return JSON.stringify(queue);\r\n  }, [queue]);\r\n\r\n  return {\r\n    queue,\r\n    enqueue,\r\n    enqueueMany,\r\n    dequeue,\r\n    peek,\r\n    peekLast,\r\n    clear,\r\n    isEmpty,\r\n    size,\r\n    isFull,\r\n    queueString,\r\n    full: isFull(),\r\n    length: queue.length\r\n  };\r\n};\r\n","import { useEffect, useRef, useState, useCallback } from 'react';\r\n\r\nexport interface UsePollingOptions {\r\n  /** 轮询间隔（毫秒） */\r\n  interval: number;\r\n  /** 是否立即开始轮询 */\r\n  immediate?: boolean;\r\n  /** 是否启用轮询 */\r\n  enabled?: boolean;\r\n  /** 最大重试次数 */\r\n  maxRetries?: number;\r\n  /** 轮询失败时的回调 */\r\n  onError?: (error: Error) => void;\r\n  /** 轮询成功时的回调 */\r\n  onSuccess?: (data: any) => void;\r\n}\r\n\r\nexport interface UsePollingReturn {\r\n  /** 是否正在轮询 */\r\n  isPolling: boolean;\r\n  /** 开始轮询 */\r\n  start: () => void;\r\n  /** 停止轮询 */\r\n  stop: () => void;\r\n  /** 重启轮询 */\r\n  restart: () => void;\r\n  /** 当前重试次数 */\r\n  retryCount: number;\r\n  /** 最后执行的错误 */\r\n  error: Error | null;\r\n  /** 最后执行的结果 */\r\n  data: any;\r\n}\r\n\r\n/**\r\n * 轮询 Hook\r\n * 用于定期执行回调函数，常用于获取远程数据或检查任务状态\r\n * \r\n * @param callback 要执行的回调函数\r\n * @param options 配置选项\r\n * @returns 返回轮询控制方法和状态\r\n * \r\n * @example\r\n * ```tsx\r\n * const { isPolling, start, stop, error, data } = usePolling(\r\n *   async () => {\r\n *     const response = await fetch('/api/status');\r\n *     return response.json();\r\n *   },\r\n *   {\r\n *     interval: 5000,\r\n *     immediate: true,\r\n *     onSuccess: (data) => console.log('轮询成功:', data),\r\n *     onError: (error) => console.error('轮询失败:', error)\r\n *   }\r\n * );\r\n * \r\n * return (\r\n *   <div>\r\n *     <button onClick={start} disabled={isPolling}>开始轮询</button>\r\n *     <button onClick={stop} disabled={!isPolling}>停止轮询</button>\r\n *     <p>状态: {isPolling ? '轮询中' : '已停止'}</p>\r\n *     {error && <p>错误: {error.message}</p>}\r\n *     {data && <p>数据: {JSON.stringify(data)}</p>}\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const usePolling = (\r\n  callback: () => Promise<any> | void,\r\n  options: UsePollingOptions\r\n): UsePollingReturn => {\r\n  const {\r\n    interval,\r\n    immediate = false,\r\n    enabled = true,\r\n    maxRetries = -1,\r\n    onError,\r\n    onSuccess\r\n  } = options;\r\n\r\n  const [isPolling, setIsPolling] = useState(false);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  const [data, setData] = useState<any>(null);\r\n\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const callbackRef = useRef(callback);\r\n  const optionsRef = useRef({ maxRetries, onError, onSuccess });\r\n  const isPollingRef = useRef(false);\r\n\r\n  // 更新回调函数引用和选项引用\r\n  useEffect(() => {\r\n    callbackRef.current = callback;\r\n    optionsRef.current = { maxRetries, onError, onSuccess };\r\n  }, [callback, maxRetries, onError, onSuccess]);\r\n\r\n  // 执行回调函数\r\n  const executeCallback = useCallback(async () => {\r\n    if (!isPollingRef.current) return; // 使用 ref 检查轮询状态\r\n    \r\n    try {\r\n      setError(null);\r\n      const result = await callbackRef.current();\r\n      setData(result);\r\n      setRetryCount(0);\r\n      optionsRef.current.onSuccess?.(result);\r\n    } catch (err) {\r\n      const error = err instanceof Error ? err : new Error(String(err));\r\n      setError(error);\r\n      setRetryCount(prev => {\r\n        const newCount = prev + 1;\r\n        // 如果达到最大重试次数，停止轮询\r\n        if (optionsRef.current.maxRetries > 0 && newCount >= optionsRef.current.maxRetries) {\r\n          // 直接停止，避免依赖问题\r\n          if (intervalRef.current) {\r\n            clearInterval(intervalRef.current);\r\n            intervalRef.current = null;\r\n          }\r\n          setIsPolling(false);\r\n          isPollingRef.current = false;\r\n        }\r\n        return newCount;\r\n      });\r\n      optionsRef.current.onError?.(error);\r\n    }\r\n  }, []); // 移除所有依赖\r\n\r\n  // 停止轮询\r\n  const stop = useCallback(() => {\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n    setIsPolling(false);\r\n    isPollingRef.current = false;\r\n  }, []);\r\n\r\n  // 开始轮询\r\n  const start = useCallback(() => {\r\n    if (isPollingRef.current) return;\r\n\r\n    setIsPolling(true);\r\n    isPollingRef.current = true;\r\n    setRetryCount(0);\r\n    setError(null);\r\n\r\n    // 立即执行一次\r\n    executeCallback();\r\n\r\n    // 设置定时器\r\n    intervalRef.current = setInterval(() => {\r\n      executeCallback();\r\n    }, interval);\r\n  }, [interval, executeCallback]);\r\n\r\n  // 重启轮询\r\n  const restart = useCallback(() => {\r\n    stop();\r\n    setTimeout(() => start(), 0);\r\n  }, [stop, start]);\r\n\r\n  // 初始化 - 只有在 immediate=true 且 enabled=true 时才自动开始\r\n  useEffect(() => {\r\n    if (immediate && enabled) {\r\n      start();\r\n    }\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, []); // 只在组件挂载时执行一次\r\n\r\n  // 清理\r\n  useEffect(() => {\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isPolling,\r\n    start,\r\n    stop,\r\n    restart,\r\n    retryCount,\r\n    error,\r\n    data\r\n  };\r\n};\r\n","import { useEffect, useState, useCallback } from 'react';\r\n\r\nexport interface MousePosition {\r\n  /** 鼠标 X 坐标 */\r\n  x: number;\r\n  /** 鼠标 Y 坐标 */\r\n  y: number;\r\n  /** 鼠标相对于页面的 X 坐标 */\r\n  pageX: number;\r\n  /** 鼠标相对于页面的 Y 坐标 */\r\n  pageY: number;\r\n  /** 鼠标相对于屏幕的 X 坐标 */\r\n  screenX: number;\r\n  /** 鼠标相对于屏幕的 Y 坐标 */\r\n  screenY: number;\r\n  /** 鼠标相对于元素的 X 坐标 */\r\n  clientX: number;\r\n  /** 鼠标相对于元素的 Y 坐标 */\r\n  clientY: number;\r\n}\r\n\r\nexport interface UseMouseOptions {\r\n  /** 是否启用鼠标监听 */\r\n  enabled?: boolean;\r\n  /** 要监听的元素（默认为 window） */\r\n  target?: Element | null;\r\n  /** 鼠标移动时的回调 */\r\n  onMouseMove?: (position: MousePosition) => void;\r\n  /** 鼠标进入时的回调 */\r\n  onMouseEnter?: (position: MousePosition) => void;\r\n  /** 鼠标离开时的回调 */\r\n  onMouseLeave?: (position: MousePosition) => void;\r\n}\r\n\r\nexport interface UseMouseReturn {\r\n  /** 当前鼠标位置 */\r\n  position: MousePosition;\r\n  /** 鼠标是否在目标元素内 */\r\n  isInside: boolean;\r\n  /** 鼠标是否正在移动 */\r\n  isMoving: boolean;\r\n  /** 重置鼠标位置 */\r\n  reset: () => void;\r\n}\r\n\r\n/**\r\n * 鼠标监听 Hook\r\n * 用于获取和监听鼠标的位置信息\r\n * \r\n * @param options 配置选项\r\n * @returns 返回鼠标位置和状态\r\n * \r\n * @example\r\n * ```tsx\r\n * const { position, isInside, isMoving } = useMouse({\r\n *   target: document.body,\r\n *   onMouseMove: (pos) => console.log('鼠标位置:', pos),\r\n *   onMouseEnter: () => console.log('鼠标进入'),\r\n *   onMouseLeave: () => console.log('鼠标离开')\r\n * });\r\n * \r\n * return (\r\n *   <div>\r\n *     <p>鼠标位置: ({position.x}, {position.y})</p>\r\n *     <p>是否在元素内: {isInside ? '是' : '否'}</p>\r\n *     <p>是否在移动: {isMoving ? '是' : '否'}</p>\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const useMouse = (options: UseMouseOptions = {}): UseMouseReturn => {\r\n  const {\r\n    enabled = true,\r\n    target = typeof window !== 'undefined' ? window : null,\r\n    onMouseMove,\r\n    onMouseEnter,\r\n    onMouseLeave\r\n  } = options;\r\n\r\n  const [position, setPosition] = useState<MousePosition>({\r\n    x: 0,\r\n    y: 0,\r\n    pageX: 0,\r\n    pageY: 0,\r\n    screenX: 0,\r\n    screenY: 0,\r\n    clientX: 0,\r\n    clientY: 0\r\n  });\r\n\r\n  const [isInside, setIsInside] = useState(false);\r\n  const [isMoving, setIsMoving] = useState(false);\r\n\r\n  const updateMousePosition = useCallback((event: Event) => {\r\n    const mouseEvent = event as MouseEvent;\r\n    const newPosition: MousePosition = {\r\n      x: mouseEvent.clientX,\r\n      y: mouseEvent.clientY,\r\n      pageX: mouseEvent.pageX,\r\n      pageY: mouseEvent.pageY,\r\n      screenX: mouseEvent.screenX,\r\n      screenY: mouseEvent.screenY,\r\n      clientX: mouseEvent.clientX,\r\n      clientY: mouseEvent.clientY\r\n    };\r\n\r\n    setPosition(newPosition);\r\n    setIsMoving(true);\r\n    onMouseMove?.(newPosition);\r\n\r\n    // 重置移动状态\r\n    setTimeout(() => setIsMoving(false), 100);\r\n  }, [onMouseMove]);\r\n\r\n  const handleMouseEnter = useCallback((event: Event) => {\r\n    const mouseEvent = event as MouseEvent;\r\n    setIsInside(true);\r\n    const newPosition: MousePosition = {\r\n      x: mouseEvent.clientX,\r\n      y: mouseEvent.clientY,\r\n      pageX: mouseEvent.pageX,\r\n      pageY: mouseEvent.pageY,\r\n      screenX: mouseEvent.screenX,\r\n      screenY: mouseEvent.screenY,\r\n      clientX: mouseEvent.clientX,\r\n      clientY: mouseEvent.clientY\r\n    };\r\n    onMouseEnter?.(newPosition);\r\n  }, [onMouseEnter]);\r\n\r\n  const handleMouseLeave = useCallback((event: Event) => {\r\n    const mouseEvent = event as MouseEvent;\r\n    setIsInside(false);\r\n    const newPosition: MousePosition = {\r\n      x: mouseEvent.clientX,\r\n      y: mouseEvent.clientY,\r\n      pageX: mouseEvent.pageX,\r\n      pageY: mouseEvent.pageY,\r\n      screenX: mouseEvent.screenX,\r\n      screenY: mouseEvent.screenY,\r\n      clientX: mouseEvent.clientX,\r\n      clientY: mouseEvent.clientY\r\n    };\r\n    onMouseLeave?.(newPosition);\r\n  }, [onMouseLeave]);\r\n\r\n  const reset = useCallback(() => {\r\n    setPosition({\r\n      x: 0,\r\n      y: 0,\r\n      pageX: 0,\r\n      pageY: 0,\r\n      screenX: 0,\r\n      screenY: 0,\r\n      clientX: 0,\r\n      clientY: 0\r\n    });\r\n    setIsInside(false);\r\n    setIsMoving(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!enabled || !target) return;\r\n\r\n    target.addEventListener('mousemove', updateMousePosition);\r\n    target.addEventListener('mouseenter', handleMouseEnter);\r\n    target.addEventListener('mouseleave', handleMouseLeave);\r\n\r\n    return () => {\r\n      target.removeEventListener('mousemove', updateMousePosition);\r\n      target.removeEventListener('mouseenter', handleMouseEnter);\r\n      target.removeEventListener('mouseleave', handleMouseLeave);\r\n    };\r\n  }, [enabled, target, updateMousePosition, handleMouseEnter, handleMouseLeave]);\r\n\r\n  return {\r\n    position,\r\n    isInside,\r\n    isMoving,\r\n    reset\r\n  };\r\n};\r\n","import { useCallback, useEffect, useRef, useState, RefObject } from 'react';\r\n\r\nexport interface UseFullscreenOptions {\r\n  /** 进入全屏时的回调 */\r\n  onEnter?: () => void;\r\n  /** 退出全屏时的回调 */\r\n  onExit?: () => void;\r\n  /** 全屏时背景颜色 */\r\n  background?: string;\r\n  /** 是否启用全屏功能 */\r\n  enabled?: boolean;\r\n}\r\n\r\nexport interface UseFullscreenReturn<T extends HTMLElement = HTMLDivElement> {\r\n  /** 要全屏显示的元素引用 */\r\n  elementRef: RefObject<T | null>;\r\n  /** 是否处于全屏状态 */\r\n  isFullscreen: boolean;\r\n  /** 进入全屏 */\r\n  enterFullscreen: () => Promise<void>;\r\n  /** 退出全屏 */\r\n  exitFullscreen: () => Promise<void>;\r\n  /** 切换全屏状态 */\r\n  toggleFullscreen: () => Promise<void>;\r\n  /** 是否支持全屏 */\r\n  isSupported: boolean;\r\n  /** 错误信息 */\r\n  error: Error | null;\r\n}\r\n\r\n/**\r\n * 全屏功能 Hook\r\n * 提供进入、退出和切换全屏的功能\r\n * \r\n * @template T - 元素类型\r\n * @param options 配置选项\r\n * @returns 返回全屏操作相关的方法和状态\r\n * \r\n * @example\r\n * ```tsx\r\n * const { elementRef, isFullscreen, enterFullscreen, exitFullscreen, toggleFullscreen } = useFullscreen({\r\n *   onEnter: () => console.log('进入全屏'),\r\n *   onExit: () => console.log('退出全屏'),\r\n *   background: '#000'\r\n * });\r\n * \r\n * return (\r\n *   <div ref={elementRef} className=\"w-64 h-48 bg-blue-500\">\r\n *     <button onClick={enterFullscreen}>进入全屏</button>\r\n *     <button onClick={exitFullscreen}>退出全屏</button>\r\n *     <button onClick={toggleFullscreen}>切换全屏</button>\r\n *     <p>全屏状态: {isFullscreen ? '是' : '否'}</p>\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const useFullscreen = <T extends HTMLElement = HTMLDivElement>(\r\n  options: UseFullscreenOptions = {}\r\n): UseFullscreenReturn<T> => {\r\n  const {\r\n    onEnter,\r\n    onExit,\r\n    background,\r\n    enabled = true\r\n  } = options;\r\n\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  const elementRef = useRef<T>(null);\r\n  const originalStylesRef = useRef<{\r\n    background?: string;\r\n    overflow?: string;\r\n  }>({});\r\n\r\n  // 检查浏览器是否支持全屏\r\n  const isSupported = typeof window !== 'undefined' && !!(\r\n    document.fullscreenEnabled ||\r\n    (document as any).webkitFullscreenEnabled ||\r\n    (document as any).mozFullScreenEnabled ||\r\n    (document as any).msFullscreenEnabled\r\n  );\r\n\r\n  const handleFullscreenChange = useCallback(() => {\r\n    const isFull = !!(\r\n      document.fullscreenElement ||\r\n      (document as any).webkitFullscreenElement ||\r\n      (document as any).mozFullScreenElement ||\r\n      (document as any).msFullscreenElement\r\n    );\r\n    \r\n    setIsFullscreen(isFull);\r\n    \r\n    // 当退出全屏时，恢复原始样式\r\n    if (!isFull) {\r\n      // 恢复元素背景\r\n      if (elementRef.current) {\r\n        const element = elementRef.current;\r\n        if (originalStylesRef.current.background !== undefined) {\r\n          element.style.background = originalStylesRef.current.background;\r\n        } else {\r\n          element.style.removeProperty('background');\r\n        }\r\n      }\r\n      \r\n      // 恢复 body 的 overflow 样式\r\n      if (originalStylesRef.current.overflow !== undefined) {\r\n        document.body.style.overflow = originalStylesRef.current.overflow;\r\n      } else {\r\n        document.body.style.removeProperty('overflow');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // 进入全屏\r\n  const enterFullscreen = useCallback(async (): Promise<void> => {\r\n    if (!enabled || !isSupported || !elementRef.current) {\r\n      throw new Error('Fullscreen not supported or element not available');\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n      const element = elementRef.current;\r\n\r\n      // 保存原始样式\r\n      originalStylesRef.current = {\r\n        background: element.style.background || '',\r\n        overflow: document.body.style.overflow || ''\r\n      };\r\n\r\n      // 设置全屏背景颜色\r\n      if (background) {\r\n        element.style.background = background;\r\n      }\r\n      \r\n      // 隐藏滚动条\r\n      document.body.style.overflow = 'hidden';\r\n\r\n      // 请求全屏\r\n      if (element.requestFullscreen) {\r\n        await element.requestFullscreen();\r\n      } else if ((element as any).webkitRequestFullscreen) {\r\n        await (element as any).webkitRequestFullscreen();\r\n      } else if ((element as any).mozRequestFullScreen) {\r\n        await (element as any).mozRequestFullScreen();\r\n      } else if ((element as any).msRequestFullscreen) {\r\n        await (element as any).msRequestFullscreen();\r\n      } else {\r\n        throw new Error('Fullscreen API not supported');\r\n      }\r\n\r\n      onEnter?.();\r\n    } catch (err) {\r\n      const error = err instanceof Error ? err : new Error(String(err));\r\n      setError(error);\r\n      throw error;\r\n    }\r\n  }, [enabled, isSupported, background, onEnter]);\r\n\r\n  // 退出全屏\r\n  const exitFullscreen = useCallback(async (): Promise<void> => {\r\n    if (!enabled || !isSupported) {\r\n      throw new Error('Fullscreen not supported');\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n\r\n      // 退出全屏\r\n      if (document.exitFullscreen) {\r\n        await document.exitFullscreen();\r\n      } else if ((document as any).webkitExitFullscreen) {\r\n        await (document as any).webkitExitFullscreen();\r\n      } else if ((document as any).mozCancelFullScreen) {\r\n        await (document as any).mozCancelFullScreen();\r\n      } else if ((document as any).msExitFullscreen) {\r\n        await (document as any).msExitFullscreen();\r\n      } else {\r\n        throw new Error('Exit fullscreen API not supported');\r\n      }\r\n\r\n      onExit?.();\r\n    } catch (err) {\r\n      const error = err instanceof Error ? err : new Error(String(err));\r\n      setError(error);\r\n      throw error;\r\n    }\r\n  }, [enabled, isSupported, onExit]);\r\n\r\n  // 切换全屏状态\r\n  const toggleFullscreen = useCallback(async (): Promise<void> => {\r\n    if (isFullscreen) {\r\n      await exitFullscreen();\r\n    } else {\r\n      await enterFullscreen();\r\n    }\r\n  }, [isFullscreen, enterFullscreen, exitFullscreen]);\r\n\r\n  // 监听全屏状态变化\r\n  useEffect(() => {\r\n    if (!enabled || !isSupported) return;\r\n\r\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\r\n    document.addEventListener('webkitfullscreenchange', handleFullscreenChange);\r\n    document.addEventListener('mozfullscreenchange', handleFullscreenChange);\r\n    document.addEventListener('MSFullscreenChange', handleFullscreenChange);\r\n\r\n    return () => {\r\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\r\n      document.removeEventListener('webkitfullscreenchange', handleFullscreenChange);\r\n      document.removeEventListener('mozfullscreenchange', handleFullscreenChange);\r\n      document.removeEventListener('MSFullscreenChange', handleFullscreenChange);\r\n    };\r\n  }, [enabled, isSupported, handleFullscreenChange]);\r\n\r\n  return {\r\n    elementRef,\r\n    isFullscreen,\r\n    enterFullscreen,\r\n    exitFullscreen,\r\n    toggleFullscreen,\r\n    isSupported,\r\n    error\r\n  };\r\n};\r\n","import { useCallback, useRef, useEffect } from 'react';\r\n\r\n// 全局事件映射\r\nconst globalEventsMap = new Map<string, Set<Function>>();\r\n\r\nexport interface UseEventBusOptions {\r\n  /** 是否在组件卸载时自动清理事件监听器 */\r\n  autoCleanup?: boolean;\r\n  /** 事件总线实例（可选，默认使用全局实例） */\r\n  eventBus?: Map<string, Set<Function>>;\r\n}\r\n\r\nexport interface UseEventBusReturn {\r\n  /** 监听事件 */\r\n  on: (callback: Function) => () => void;\r\n  /** 监听事件（只执行一次） */\r\n  once: (callback: Function) => () => void;\r\n  /** 触发事件 */\r\n  emit: (data?: any) => void;\r\n  /** 移除事件监听器 */\r\n  off: (callback: Function) => void;\r\n  /** 清空所有事件监听器 */\r\n  reset: () => void;\r\n  /** 获取当前事件监听器数量 */\r\n  listenerCount: () => number;\r\n}\r\n\r\n/**\r\n * 事件总线 Hook\r\n * 提供组件间的事件通信功能\r\n * \r\n * @param eventName 事件名称\r\n * @param options 配置选项\r\n * @returns 返回事件总线操作方法\r\n * \r\n * @example\r\n * ```tsx\r\n * const { on, emit, off, reset } = useEventBus('user-login');\r\n * \r\n * useEffect(() => {\r\n *   const unsubscribe = on((userData) => {\r\n *     console.log('用户登录:', userData);\r\n *   });\r\n * \r\n *   return unsubscribe; // 自动清理\r\n * }, [on]);\r\n * \r\n * const handleLogin = () => {\r\n *   emit({ id: 1, name: 'John' });\r\n * };\r\n * \r\n * return (\r\n *   <div>\r\n *     <button onClick={handleLogin}>登录</button>\r\n *     <button onClick={reset}>清空所有监听器</button>\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const useEventBus = (\r\n  eventName: string,\r\n  options: UseEventBusOptions = {}\r\n): UseEventBusReturn => {\r\n  const {\r\n    autoCleanup = true,\r\n    eventBus = globalEventsMap\r\n  } = options;\r\n\r\n  const eventsRef = useRef(eventBus);\r\n  const cleanupRefs = useRef<Set<Function>>(new Set());\r\n\r\n  // 获取或创建事件监听器集合\r\n  const getEventListeners = useCallback(() => {\r\n    if (!eventsRef.current.has(eventName)) {\r\n      eventsRef.current.set(eventName, new Set());\r\n    }\r\n    return eventsRef.current.get(eventName)!;\r\n  }, [eventName]);\r\n\r\n  // 监听事件\r\n  const on = useCallback((callback: Function) => {\r\n    const listeners = getEventListeners();\r\n    listeners.add(callback);\r\n    cleanupRefs.current.add(callback);\r\n\r\n    // 返回取消订阅函数\r\n    return () => {\r\n      listeners.delete(callback);\r\n      cleanupRefs.current.delete(callback);\r\n    };\r\n  }, [getEventListeners]);\r\n\r\n  // 监听事件（只执行一次）\r\n  const once = useCallback((callback: Function) => {\r\n    const onceCallback = (data: any) => {\r\n      callback(data);\r\n      off(onceCallback);\r\n    };\r\n    return on(onceCallback);\r\n  }, [on]);\r\n\r\n  // 触发事件\r\n  const emit = useCallback((data?: any) => {\r\n    const listeners = getEventListeners();\r\n    listeners.forEach((callback) => {\r\n      try {\r\n        callback(data);\r\n      } catch (error) {\r\n        console.error('EventBus callback error:', error);\r\n      }\r\n    });\r\n  }, [getEventListeners]);\r\n\r\n  // 移除事件监听器\r\n  const off = useCallback((callback: Function) => {\r\n    const listeners = getEventListeners();\r\n    listeners.delete(callback);\r\n    cleanupRefs.current.delete(callback);\r\n  }, [getEventListeners]);\r\n\r\n  // 清空所有事件监听器\r\n  const reset = useCallback(() => {\r\n    const listeners = getEventListeners();\r\n    listeners.clear();\r\n    cleanupRefs.current.clear();\r\n  }, [getEventListeners]);\r\n\r\n  // 获取当前事件监听器数量\r\n  const listenerCount = useCallback(() => {\r\n    const listeners = getEventListeners();\r\n    return listeners.size;\r\n  }, [getEventListeners]);\r\n\r\n  // 自动清理\r\n  useEffect(() => {\r\n    if (!autoCleanup) return;\r\n\r\n    return () => {\r\n      const listeners = getEventListeners();\r\n      cleanupRefs.current.forEach((callback) => {\r\n        listeners.delete(callback);\r\n      });\r\n      cleanupRefs.current.clear();\r\n    };\r\n  }, [autoCleanup, getEventListeners]);\r\n\r\n  return {\r\n    on,\r\n    once,\r\n    emit,\r\n    off,\r\n    reset,\r\n    listenerCount\r\n  };\r\n};\r\n","import { useEffect, useState, useRef, RefObject, useCallback } from 'react';\r\n\r\nexport interface ElementSize {\r\n  /** 元素宽度 */\r\n  width: number;\r\n  /** 元素高度 */\r\n  height: number;\r\n  /** 元素内容宽度 */\r\n  contentWidth: number;\r\n  /** 元素内容高度 */\r\n  contentHeight: number;\r\n  /** 元素边框宽度 */\r\n  borderWidth: number;\r\n  /** 元素边框高度 */\r\n  borderHeight: number;\r\n  /** 元素内边距宽度 */\r\n  paddingWidth: number;\r\n  /** 元素内边距高度 */\r\n  paddingHeight: number;\r\n}\r\n\r\nexport interface UseElementSizeOptions {\r\n  /** 是否启用尺寸监听 */\r\n  enabled?: boolean;\r\n  /** 是否包含边框 */\r\n  includeBorder?: boolean;\r\n  /** 是否包含内边距 */\r\n  includePadding?: boolean;\r\n  /** 尺寸变化时的回调 */\r\n  onSizeChange?: (size: ElementSize) => void;\r\n  /** 防抖延迟（毫秒） */\r\n  debounceMs?: number;\r\n}\r\n\r\nexport interface UseElementSizeReturn<T extends HTMLElement = HTMLElement> {\r\n  /** 要监听的元素引用 */\r\n  ref: RefObject<T | null>;\r\n  /** 元素尺寸信息 */\r\n  size: ElementSize;\r\n  /** 是否正在监听 */\r\n  isObserving: boolean;\r\n  /** 开始监听 */\r\n  startObserving: () => void;\r\n  /** 停止监听 */\r\n  stopObserving: () => void;\r\n  /** 手动更新尺寸 */\r\n  updateSize: () => void;\r\n}\r\n\r\n/**\r\n * 元素尺寸监听 Hook\r\n * 用于获取和监听元素的尺寸变化\r\n * \r\n * @template T - 元素类型\r\n * @param options 配置选项\r\n * @returns 返回元素引用和尺寸信息\r\n * \r\n * @example\r\n * ```tsx\r\n * const { ref, size, isObserving, startObserving, stopObserving } = useElementSize({\r\n *   includeBorder: true,\r\n *   includePadding: true,\r\n *   onSizeChange: (size) => console.log('尺寸变化:', size),\r\n *   debounceMs: 100\r\n * });\r\n * \r\n * return (\r\n *   <div ref={ref} className=\"w-64 h-48 border p-4\">\r\n *     <p>宽度: {size.width}px</p>\r\n *     <p>高度: {size.height}px</p>\r\n *     <button onClick={startObserving}>开始监听</button>\r\n *     <button onClick={stopObserving}>停止监听</button>\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const useElementSize = <T extends HTMLElement = HTMLElement>(\r\n  options: UseElementSizeOptions = {}\r\n): UseElementSizeReturn<T> => {\r\n  const {\r\n    enabled = false,\r\n    includeBorder = false,\r\n    includePadding = false,\r\n    onSizeChange,\r\n    debounceMs = 0\r\n  } = options;\r\n\r\n  const ref = useRef<T>(null);\r\n  const [size, setSize] = useState<ElementSize>({\r\n    width: 0,\r\n    height: 0,\r\n    contentWidth: 0,\r\n    contentHeight: 0,\r\n    borderWidth: 0,\r\n    borderHeight: 0,\r\n    paddingWidth: 0,\r\n    paddingHeight: 0\r\n  });\r\n\r\n  const [isObserving, setIsObserving] = useState(false);\r\n  const observerRef = useRef<ResizeObserver | null>(null);\r\n  const debounceTimerRef = useRef<NodeJS.Timeout | null>(null);\r\n  const optionsRef = useRef({ includeBorder, includePadding });\r\n\r\n  // 更新选项引用\r\n  useEffect(() => {\r\n    optionsRef.current = { includeBorder, includePadding };\r\n  }, [includeBorder, includePadding]);\r\n\r\n  // 计算元素尺寸\r\n  const calculateSize = useCallback((element: T): ElementSize => {\r\n    const rect = element.getBoundingClientRect();\r\n    const computedStyle = window.getComputedStyle(element);\r\n\r\n    const borderLeft = parseFloat(computedStyle.borderLeftWidth) || 0;\r\n    const borderRight = parseFloat(computedStyle.borderRightWidth) || 0;\r\n    const borderTop = parseFloat(computedStyle.borderTopWidth) || 0;\r\n    const borderBottom = parseFloat(computedStyle.borderBottomWidth) || 0;\r\n\r\n    const paddingLeft = parseFloat(computedStyle.paddingLeft) || 0;\r\n    const paddingRight = parseFloat(computedStyle.paddingRight) || 0;\r\n    const paddingTop = parseFloat(computedStyle.paddingTop) || 0;\r\n    const paddingBottom = parseFloat(computedStyle.paddingBottom) || 0;\r\n\r\n    const borderWidth = borderLeft + borderRight;\r\n    const borderHeight = borderTop + borderBottom;\r\n    const paddingWidth = paddingLeft + paddingRight;\r\n    const paddingHeight = paddingTop + paddingBottom;\r\n\r\n    const contentWidth = rect.width - borderWidth - paddingWidth;\r\n    const contentHeight = rect.height - borderHeight - paddingHeight;\r\n\r\n    return {\r\n      width: optionsRef.current.includeBorder ? rect.width : contentWidth + paddingWidth,\r\n      height: optionsRef.current.includeBorder ? rect.height : contentHeight + paddingHeight,\r\n      contentWidth,\r\n      contentHeight,\r\n      borderWidth,\r\n      borderHeight,\r\n      paddingWidth,\r\n      paddingHeight\r\n    };\r\n  }, []);\r\n\r\n  // 更新尺寸\r\n  const updateSize = useCallback(() => {\r\n    const element = ref.current;\r\n    if (!element) return;\r\n\r\n    const newSize = calculateSize(element);\r\n    setSize(newSize);\r\n    onSizeChange?.(newSize);\r\n  }, [calculateSize, onSizeChange]);\r\n\r\n  // 防抖更新\r\n  const debouncedUpdateSize = useCallback(() => {\r\n    if (debounceTimerRef.current) {\r\n      clearTimeout(debounceTimerRef.current);\r\n    }\r\n\r\n    if (debounceMs > 0) {\r\n      debounceTimerRef.current = setTimeout(updateSize, debounceMs);\r\n    } else {\r\n      updateSize();\r\n    }\r\n  }, [updateSize, debounceMs]);\r\n\r\n  // 开始监听\r\n  const startObserving = useCallback(() => {\r\n    const element = ref.current;\r\n    if (!element || isObserving) return;\r\n\r\n    // 立即计算一次尺寸\r\n    updateSize();\r\n\r\n    // 创建 ResizeObserver\r\n    if (typeof ResizeObserver !== 'undefined') {\r\n      observerRef.current = new ResizeObserver(() => {\r\n        debouncedUpdateSize();\r\n      });\r\n\r\n      observerRef.current.observe(element);\r\n      setIsObserving(true);\r\n    }\r\n  }, [isObserving, updateSize, debouncedUpdateSize]);\r\n\r\n  // 停止监听\r\n  const stopObserving = useCallback(() => {\r\n    if (observerRef.current) {\r\n      observerRef.current.disconnect();\r\n      observerRef.current = null;\r\n    }\r\n    setIsObserving(false);\r\n\r\n    if (debounceTimerRef.current) {\r\n      clearTimeout(debounceTimerRef.current);\r\n      debounceTimerRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  // 只在组件卸载时清理\r\n  useEffect(() => {\r\n    return () => {\r\n      if (observerRef.current) {\r\n        observerRef.current.disconnect();\r\n      }\r\n      if (debounceTimerRef.current) {\r\n        clearTimeout(debounceTimerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    ref,\r\n    size,\r\n    isObserving,\r\n    startObserving,\r\n    stopObserving,\r\n    updateSize\r\n  };\r\n};\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport interface UseClipboardOptions {\r\n  /** 是否显示成功提示 */\r\n  showSuccess?: boolean;\r\n  /** 成功提示消息 */\r\n  successMessage?: string;\r\n  /** 错误提示消息 */\r\n  errorMessage?: string;\r\n  /** 成功提示回调 */\r\n  onSuccess?: (text: string) => void;\r\n  /** 错误提示回调 */\r\n  onError?: (error: Error) => void;\r\n  /** 复制超时时间（毫秒） */\r\n  timeout?: number;\r\n}\r\n\r\nexport interface UseClipboardReturn {\r\n  /** 复制文本到剪贴板 */\r\n  copyToClipboard: (text: string, options?: UseClipboardOptions) => Promise<void>;\r\n  /** 从剪贴板读取文本 */\r\n  readFromClipboard: () => Promise<string>;\r\n  /** 是否正在复制 */\r\n  isCopying: boolean;\r\n  /** 是否已复制 */\r\n  isCopied: boolean;\r\n  /** 复制的文本 */\r\n  copiedText: string | null;\r\n  /** 错误信息 */\r\n  error: Error | null;\r\n  /** 是否支持剪贴板 API */\r\n  canUseClipboardApi: boolean;\r\n  /** 重置状态 */\r\n  reset: () => void;\r\n}\r\n\r\n/**\r\n * 剪贴板功能 Hook\r\n * 提供复制和读取剪贴板的功能\r\n * \r\n * @param options 配置选项\r\n * @returns 返回剪贴板操作相关的方法和状态\r\n * \r\n * @example\r\n * ```tsx\r\n * const { copyToClipboard, readFromClipboard, isCopied, error } = useClipboard({\r\n *   showSuccess: true,\r\n *   successMessage: '复制成功！',\r\n *   onSuccess: (text) => console.log('复制成功:', text)\r\n * });\r\n * \r\n * const handleCopy = async () => {\r\n *   await copyToClipboard('要复制的文本');\r\n * };\r\n * \r\n * const handleRead = async () => {\r\n *   const text = await readFromClipboard();\r\n *   console.log('剪贴板内容:', text);\r\n * };\r\n * \r\n * return (\r\n *   <div>\r\n *     <button onClick={handleCopy} disabled={isCopying}>\r\n *       {isCopying ? '复制中...' : '复制文本'}\r\n *     </button>\r\n *     <button onClick={handleRead}>读取剪贴板</button>\r\n *     {isCopied && <p>已复制: {copiedText}</p>}\r\n *     {error && <p>错误: {error.message}</p>}\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const useClipboard = (options: UseClipboardOptions = {}): UseClipboardReturn => {\r\n  const {\r\n    showSuccess = true,\r\n    successMessage = '已复制到剪贴板',\r\n    errorMessage = '复制失败',\r\n    onSuccess,\r\n    onError,\r\n    timeout = 3000\r\n  } = options;\r\n\r\n  const [isCopying, setIsCopying] = useState(false);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n  const [copiedText, setCopiedText] = useState<string | null>(null);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  // 检查浏览器是否支持 Clipboard API\r\n  const canUseClipboardApi = \r\n    typeof navigator !== 'undefined' && \r\n    navigator.clipboard && \r\n    typeof navigator.clipboard.writeText === 'function';\r\n\r\n  // 复制文本到剪贴板\r\n  const copyToClipboard = useCallback(async (\r\n    text: string, \r\n    copyOptions: UseClipboardOptions = {}\r\n  ): Promise<void> => {\r\n    const {\r\n      showSuccess: showSuccessOverride = showSuccess,\r\n      successMessage: successMessageOverride = successMessage,\r\n      errorMessage: errorMessageOverride = errorMessage,\r\n      onSuccess: onSuccessOverride = onSuccess,\r\n      onError: onErrorOverride = onError,\r\n      timeout: timeoutOverride = timeout\r\n    } = copyOptions;\r\n\r\n    try {\r\n      setIsCopying(true);\r\n      setError(null);\r\n      setIsCopied(false);\r\n\r\n      let copySuccessful = false;\r\n\r\n      // 优先尝试使用 Clipboard API\r\n      if (canUseClipboardApi) {\r\n        try {\r\n          await navigator.clipboard.writeText(text);\r\n          copySuccessful = true;\r\n        } catch (err) {\r\n          console.warn('Clipboard API failed, trying fallback:', err);\r\n        }\r\n      }\r\n\r\n      // 如果 Clipboard API 失败或不可用，使用降级方案\r\n      if (!copySuccessful) {\r\n        // 降级方案：使用 textarea 和 execCommand\r\n        const textarea = document.createElement('textarea');\r\n        textarea.value = text;\r\n        textarea.style.position = 'fixed';\r\n        textarea.style.opacity = '0';\r\n        textarea.style.pointerEvents = 'none';\r\n        textarea.style.left = '-9999px';\r\n        textarea.style.top = '-9999px';\r\n        document.body.appendChild(textarea);\r\n        \r\n        textarea.select();\r\n        textarea.setSelectionRange(0, textarea.value.length);\r\n        const successful = document.execCommand('copy');\r\n        document.body.removeChild(textarea);\r\n\r\n        if (successful) {\r\n          copySuccessful = true;\r\n        } else {\r\n          throw new Error('Failed to copy via execCommand');\r\n        }\r\n      }\r\n\r\n      if (!copySuccessful) {\r\n        throw new Error('All copy methods failed');\r\n      }\r\n\r\n      setCopiedText(text);\r\n      setIsCopied(true);\r\n      \r\n      if (showSuccessOverride) {\r\n        // 使用浏览器原生提示或自定义提示\r\n        if ('Notification' in window && Notification.permission === 'granted') {\r\n          new Notification(successMessageOverride);\r\n        } else {\r\n          console.log(successMessageOverride);\r\n        }\r\n      }\r\n\r\n      onSuccessOverride?.(text);\r\n    } catch (err) {\r\n      const copyError = err instanceof Error ? err : new Error(String(err));\r\n      console.error('Failed to copy text:', copyError);\r\n      setError(copyError);\r\n      \r\n      if (showSuccessOverride) {\r\n        if ('Notification' in window && Notification.permission === 'granted') {\r\n          new Notification(errorMessageOverride);\r\n        } else {\r\n          console.error(errorMessageOverride);\r\n        }\r\n      }\r\n\r\n      onErrorOverride?.(copyError);\r\n    } finally {\r\n      setIsCopying(false);\r\n      \r\n      // 自动重置复制状态\r\n      setTimeout(() => {\r\n        setIsCopied(false);\r\n        setCopiedText(null);\r\n      }, timeoutOverride);\r\n    }\r\n  }, [canUseClipboardApi, showSuccess, successMessage, errorMessage, onSuccess, onError, timeout]);\r\n\r\n  // 从剪贴板读取文本\r\n  const readFromClipboard = useCallback(async (): Promise<string> => {\r\n    try {\r\n      setError(null);\r\n\r\n      if (canUseClipboardApi && navigator.clipboard.readText) {\r\n        return await navigator.clipboard.readText();\r\n      } else {\r\n        throw new Error('Clipboard read API not supported');\r\n      }\r\n    } catch (err) {\r\n      const readError = err instanceof Error ? err : new Error(String(err));\r\n      setError(readError);\r\n      throw readError;\r\n    }\r\n  }, [canUseClipboardApi]);\r\n\r\n  // 重置状态\r\n  const reset = useCallback(() => {\r\n    setIsCopying(false);\r\n    setIsCopied(false);\r\n    setCopiedText(null);\r\n    setError(null);\r\n  }, []);\r\n\r\n  return {\r\n    copyToClipboard,\r\n    readFromClipboard,\r\n    isCopying,\r\n    isCopied,\r\n    copiedText,\r\n    error,\r\n    canUseClipboardApi,\r\n    reset\r\n  };\r\n};\r\n","import { useState, useRef, useCallback, RefObject, useEffect } from 'react';\r\n\r\nexport interface UseHoverOptions {\r\n  /** 鼠标进入时的回调 */\r\n  onEnter?: () => void;\r\n  /** 鼠标离开时的回调 */\r\n  onLeave?: () => void;\r\n  /** 是否启用悬浮监听 */\r\n  enabled?: boolean;\r\n  /** 延迟进入时间（毫秒） */\r\n  delayEnter?: number;\r\n  /** 延迟离开时间（毫秒） */\r\n  delayLeave?: number;\r\n}\r\n\r\nexport interface UseHoverReturn<T extends HTMLElement = HTMLElement> {\r\n  /** 要监听的元素引用 */\r\n  ref: RefObject<T | null>;\r\n  /** 是否正在悬浮 */\r\n  isHovered: boolean;\r\n  /** 手动设置悬浮状态 */\r\n  setHovered: (hovered: boolean) => void;\r\n}\r\n\r\n/**\r\n * 鼠标悬浮监听 Hook\r\n * 用于监听 DOM 元素的鼠标悬浮状态\r\n * \r\n * @template T - 元素类型\r\n * @param options 配置选项\r\n * @returns 返回元素引用和悬浮状态\r\n * \r\n * @example\r\n * ```tsx\r\n * const { ref, isHovered, setHovered } = useHover({\r\n *   onEnter: () => console.log('鼠标进入'),\r\n *   onLeave: () => console.log('鼠标离开'),\r\n *   delayEnter: 100,\r\n *   delayLeave: 200\r\n * });\r\n * \r\n * return (\r\n *   <div \r\n *     ref={ref} \r\n *     className={`p-4 border rounded ${isHovered ? 'bg-blue-100' : 'bg-white'}`}\r\n *   >\r\n *     {isHovered ? '鼠标悬浮中' : '鼠标未悬浮'}\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const useHover = <T extends HTMLElement = HTMLElement>(\r\n  options: UseHoverOptions = {}\r\n): UseHoverReturn<T> => {\r\n  const {\r\n    onEnter,\r\n    onLeave,\r\n    enabled = true,\r\n    delayEnter = 0,\r\n    delayLeave = 0\r\n  } = options;\r\n\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const ref = useRef<T>(null);\r\n  const enterTimerRef = useRef<NodeJS.Timeout | null>(null);\r\n  const leaveTimerRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // 清除定时器\r\n  const clearTimers = useCallback(() => {\r\n    if (enterTimerRef.current) {\r\n      clearTimeout(enterTimerRef.current);\r\n      enterTimerRef.current = null;\r\n    }\r\n    if (leaveTimerRef.current) {\r\n      clearTimeout(leaveTimerRef.current);\r\n      leaveTimerRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  // 处理鼠标进入\r\n  const handleMouseEnter = useCallback(() => {\r\n    if (!enabled) return;\r\n\r\n    clearTimers();\r\n\r\n    if (delayEnter > 0) {\r\n      enterTimerRef.current = setTimeout(() => {\r\n        setIsHovered(true);\r\n        onEnter?.();\r\n      }, delayEnter);\r\n    } else {\r\n      setIsHovered(true);\r\n      onEnter?.();\r\n    }\r\n  }, [enabled, delayEnter, onEnter, clearTimers]);\r\n\r\n  // 处理鼠标离开\r\n  const handleMouseLeave = useCallback(() => {\r\n    if (!enabled) return;\r\n\r\n    clearTimers();\r\n\r\n    if (delayLeave > 0) {\r\n      leaveTimerRef.current = setTimeout(() => {\r\n        setIsHovered(false);\r\n        onLeave?.();\r\n      }, delayLeave);\r\n    } else {\r\n      setIsHovered(false);\r\n      onLeave?.();\r\n    }\r\n  }, [enabled, delayLeave, onLeave, clearTimers]);\r\n\r\n  // 手动设置悬浮状态\r\n  const setHovered = useCallback((hovered: boolean) => {\r\n    clearTimers();\r\n    setIsHovered(hovered);\r\n    if (hovered) {\r\n      onEnter?.();\r\n    } else {\r\n      onLeave?.();\r\n    }\r\n  }, [onEnter, onLeave, clearTimers]);\r\n\r\n  // 当 enabled 状态改变时重新设置事件监听器\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (element) {\r\n      if (enabled) {\r\n        element.addEventListener('mouseenter', handleMouseEnter);\r\n        element.addEventListener('mouseleave', handleMouseLeave);\r\n      } else {\r\n        element.removeEventListener('mouseenter', handleMouseEnter);\r\n        element.removeEventListener('mouseleave', handleMouseLeave);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (element) {\r\n        element.removeEventListener('mouseenter', handleMouseEnter);\r\n        element.removeEventListener('mouseleave', handleMouseLeave);\r\n      }\r\n      clearTimers();\r\n    };\r\n  }, [enabled, handleMouseEnter, handleMouseLeave, clearTimers]);\r\n\r\n  return {\r\n    ref,\r\n    isHovered,\r\n    setHovered\r\n  };\r\n};\r\n","import { useState, useRef, useCallback, RefObject, useEffect } from 'react';\r\n\r\nexport interface UseScrollingOptions {\r\n  /** 滚动开始时的回调 */\r\n  onScrollStart?: () => void;\r\n  /** 滚动结束时的回调 */\r\n  onScrollEnd?: () => void;\r\n  /** 滚动时的回调 */\r\n  onScroll?: (event: Event) => void;\r\n  /** 是否启用滚动监听 */\r\n  enabled?: boolean;\r\n  /** 滚动结束的延迟时间（毫秒） */\r\n  scrollEndDelay?: number;\r\n  /** 是否监听水平滚动 */\r\n  horizontal?: boolean;\r\n  /** 是否监听垂直滚动 */\r\n  vertical?: boolean;\r\n}\r\n\r\nexport interface UseScrollingReturn<T extends HTMLElement = HTMLElement> {\r\n  /** 要监听的元素引用 */\r\n  ref: RefObject<T | null>;\r\n  /** 是否正在滚动 */\r\n  isScrolling: boolean;\r\n  /** 滚动方向 */\r\n  scrollDirection: 'horizontal' | 'vertical' | 'both' | null;\r\n  /** 滚动位置信息 */\r\n  scrollPosition: {\r\n    scrollTop: number;\r\n    scrollLeft: number;\r\n    scrollWidth: number;\r\n    scrollHeight: number;\r\n    clientWidth: number;\r\n    clientHeight: number;\r\n  };\r\n  /** 手动设置滚动状态 */\r\n  setScrolling: (scrolling: boolean) => void;\r\n}\r\n\r\n/**\r\n * 滚动监听 Hook\r\n * 用于监听 DOM 元素的滚动状态\r\n * \r\n * @template T - 元素类型\r\n * @param options 配置选项\r\n * @returns 返回元素引用和滚动状态\r\n * \r\n * @example\r\n * ```tsx\r\n * const { ref, isScrolling, scrollDirection, scrollPosition } = useScrolling({\r\n *   onScrollStart: () => console.log('开始滚动'),\r\n *   onScrollEnd: () => console.log('结束滚动'),\r\n *   scrollEndDelay: 150,\r\n *   horizontal: true,\r\n *   vertical: true\r\n * });\r\n * \r\n * return (\r\n *   <div \r\n *     ref={ref} \r\n *     className={`p-4 border rounded ${isScrolling ? 'bg-blue-100' : 'bg-white'}`}\r\n *     style={{ height: '200px', overflow: 'auto' }}\r\n *   >\r\n *     {isScrolling ? '正在滚动' : '未滚动'}\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const useScrolling = <T extends HTMLElement = HTMLElement>(\r\n  options: UseScrollingOptions = {}\r\n): UseScrollingReturn<T> => {\r\n  const {\r\n    onScrollStart,\r\n    onScrollEnd,\r\n    onScroll,\r\n    enabled = true,\r\n    scrollEndDelay = 150,\r\n    horizontal = true,\r\n    vertical = true\r\n  } = options;\r\n\r\n  const [isScrolling, setIsScrolling] = useState(false);\r\n  const [scrollDirection, setScrollDirection] = useState<'horizontal' | 'vertical' | 'both' | null>(null);\r\n  const [scrollPosition, setScrollPosition] = useState({\r\n    scrollTop: 0,\r\n    scrollLeft: 0,\r\n    scrollWidth: 0,\r\n    scrollHeight: 0,\r\n    clientWidth: 0,\r\n    clientHeight: 0\r\n  });\r\n\r\n  const ref = useRef<T>(null);\r\n  const scrollEndTimerRef = useRef<NodeJS.Timeout | null>(null);\r\n  const lastScrollTopRef = useRef(0);\r\n  const lastScrollLeftRef = useRef(0);\r\n  const isScrollingRef = useRef(false);\r\n  \r\n  // 使用 ref 存储最新的回调函数，避免依赖循环\r\n  const callbacksRef = useRef({\r\n    onScrollStart,\r\n    onScrollEnd,\r\n    onScroll,\r\n    enabled,\r\n    scrollEndDelay,\r\n    horizontal,\r\n    vertical\r\n  });\r\n\r\n  // 更新回调函数引用\r\n  useEffect(() => {\r\n    callbacksRef.current = {\r\n      onScrollStart,\r\n      onScrollEnd,\r\n      onScroll,\r\n      enabled,\r\n      scrollEndDelay,\r\n      horizontal,\r\n      vertical\r\n    };\r\n  });\r\n\r\n  // 清除滚动结束定时器\r\n  const clearScrollEndTimer = useCallback(() => {\r\n    if (scrollEndTimerRef.current) {\r\n      clearTimeout(scrollEndTimerRef.current);\r\n      scrollEndTimerRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  // 处理滚动事件\r\n  const handleScroll = useCallback((event: Event) => {\r\n    const { enabled, onScrollStart, onScrollEnd, onScroll, scrollEndDelay, horizontal, vertical } = callbacksRef.current;\r\n    \r\n    if (!enabled) return;\r\n\r\n    const element = event.target as T;\r\n    if (!element) return;\r\n\r\n    // 更新滚动位置\r\n    const newScrollPosition = {\r\n      scrollTop: element.scrollTop,\r\n      scrollLeft: element.scrollLeft,\r\n      scrollWidth: element.scrollWidth,\r\n      scrollHeight: element.scrollHeight,\r\n      clientWidth: element.clientWidth,\r\n      clientHeight: element.clientHeight\r\n    };\r\n    setScrollPosition(newScrollPosition);\r\n\r\n    // 确定滚动方向\r\n    const currentScrollTop = element.scrollTop;\r\n    const currentScrollLeft = element.scrollLeft;\r\n    const topChanged = currentScrollTop !== lastScrollTopRef.current;\r\n    const leftChanged = currentScrollLeft !== lastScrollLeftRef.current;\r\n\r\n    let direction: 'horizontal' | 'vertical' | 'both' | null = null;\r\n    if (topChanged && leftChanged) {\r\n      direction = 'both';\r\n    } else if (topChanged && vertical) {\r\n      direction = 'vertical';\r\n    } else if (leftChanged && horizontal) {\r\n      direction = 'horizontal';\r\n    }\r\n\r\n    if (direction) {\r\n      setScrollDirection(direction);\r\n    }\r\n\r\n    // 更新最后的滚动位置\r\n    lastScrollTopRef.current = element.scrollTop;\r\n    lastScrollLeftRef.current = element.scrollLeft;\r\n\r\n    // 如果还没有开始滚动，触发开始回调\r\n    if (!isScrollingRef.current) {\r\n      isScrollingRef.current = true;\r\n      setIsScrolling(true);\r\n      onScrollStart?.();\r\n    }\r\n\r\n    // 清除之前的定时器\r\n    clearScrollEndTimer();\r\n\r\n    // 设置滚动结束定时器\r\n    scrollEndTimerRef.current = setTimeout(() => {\r\n      isScrollingRef.current = false;\r\n      setIsScrolling(false);\r\n      setScrollDirection(null);\r\n      onScrollEnd?.();\r\n    }, scrollEndDelay);\r\n\r\n    // 触发滚动回调\r\n    onScroll?.(event);\r\n  }, [clearScrollEndTimer]);\r\n\r\n  // 处理鼠标离开事件\r\n  const handleMouseLeave = useCallback(() => {\r\n    const { enabled, onScrollEnd } = callbacksRef.current;\r\n    \r\n    if (!enabled) return;\r\n\r\n    // 立即停止滚动状态\r\n    clearScrollEndTimer();\r\n    isScrollingRef.current = false;\r\n    setIsScrolling(false);\r\n    setScrollDirection(null);\r\n    onScrollEnd?.();\r\n  }, [clearScrollEndTimer]);\r\n\r\n  // 手动设置滚动状态\r\n  const setScrolling = useCallback((scrolling: boolean) => {\r\n    const { onScrollStart, onScrollEnd } = callbacksRef.current;\r\n    \r\n    clearScrollEndTimer();\r\n    isScrollingRef.current = scrolling;\r\n    setIsScrolling(scrolling);\r\n    if (!scrolling) {\r\n      setScrollDirection(null);\r\n      onScrollEnd?.();\r\n    } else {\r\n      onScrollStart?.();\r\n    }\r\n  }, [clearScrollEndTimer]);\r\n\r\n\r\n\r\n  // 设置事件监听器\r\n  useEffect(() => {\r\n    const element = ref.current;\r\n    if (!element) return;\r\n\r\n    // 初始化滚动位置\r\n    const position = {\r\n      scrollTop: element.scrollTop,\r\n      scrollLeft: element.scrollLeft,\r\n      scrollWidth: element.scrollWidth,\r\n      scrollHeight: element.scrollHeight,\r\n      clientWidth: element.clientWidth,\r\n      clientHeight: element.clientHeight\r\n    };\r\n    setScrollPosition(position);\r\n    lastScrollTopRef.current = position.scrollTop;\r\n    lastScrollLeftRef.current = position.scrollLeft;\r\n\r\n    // 添加事件监听器\r\n    element.addEventListener('scroll', handleScroll, { passive: true });\r\n    element.addEventListener('mouseleave', handleMouseLeave);\r\n\r\n    return () => {\r\n      element.removeEventListener('scroll', handleScroll);\r\n      element.removeEventListener('mouseleave', handleMouseLeave);\r\n      clearScrollEndTimer();\r\n    };\r\n  }, []); // 空依赖数组，只在挂载时执行一次\r\n\r\n  return {\r\n    ref,\r\n    isScrolling,\r\n    scrollDirection,\r\n    scrollPosition,\r\n    setScrolling\r\n  };\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport const useUpdateEffect = (\r\n  effect: React.EffectCallback,\r\n  deps: React.DependencyList = []\r\n) => {\r\n  const isFirstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    return effect();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [effect, ...deps]);\r\n}; ","import { useRef, useEffect, useCallback } from 'react';\r\n\r\nexport interface WatermarkOptions {\r\n  /** 水印文本 */\r\n  text?: string;\r\n  /** 水印图片 URL */\r\n  image?: string;\r\n  /** 水印字体大小 */\r\n  fontSize?: number;\r\n  /** 水印字体颜色 */\r\n  color?: string;\r\n  /** 水印透明度 */\r\n  opacity?: number;\r\n  /** 水印旋转角度 */\r\n  rotate?: number;\r\n  /** 水印间距 */\r\n  gap?: [number, number];\r\n  /** 水印偏移量 */\r\n  offset?: [number, number];\r\n  /** 水印层级 */\r\n  zIndex?: number;\r\n  /** 水印字体 */\r\n  fontFamily?: string;\r\n  /** 水印字体粗细 */\r\n  fontWeight?: string;\r\n  /** 水印宽度 */\r\n  width?: number;\r\n  /** 水印高度 */\r\n  height?: number;\r\n  /** 是否启用水印 */\r\n  enabled?: boolean;\r\n}\r\n\r\nexport interface UseWatermarkReturn {\r\n  /** 要添加水印的元素引用 */\r\n  ref: React.RefObject<HTMLElement | null>;\r\n  /** 设置水印选项 */\r\n  setOptions: (options: Partial<WatermarkOptions>) => void;\r\n  /** 清除水印 */\r\n  clear: () => void;\r\n  /** 当前水印选项 */\r\n  options: WatermarkOptions;\r\n}\r\n\r\n/**\r\n * 水印 Hook\r\n * 用于给 DOM 元素添加水印\r\n * \r\n * @param options 水印配置选项\r\n * @returns 返回元素引用和水印控制方法\r\n * \r\n * @example\r\n * ```tsx\r\n * const { ref, setOptions, clear } = useWatermark({\r\n *   text: '机密文件',\r\n *   fontSize: 16,\r\n *   color: '#999',\r\n *   opacity: 0.3,\r\n *   rotate: -15\r\n * });\r\n * \r\n * return (\r\n *   <div ref={ref} className=\"p-4 border\">\r\n *     <h1>重要文档</h1>\r\n *     <p>这是需要添加水印的内容...</p>\r\n *   </div>\r\n * );\r\n * ```\r\n */\r\nexport const useWatermark = (options: WatermarkOptions = {}): UseWatermarkReturn => {\r\n  const {\r\n    text = '水印',\r\n    image,\r\n    fontSize = 16,\r\n    color = '#999',\r\n    opacity = 0.3,\r\n    rotate = -15,\r\n    gap = [100, 100],\r\n    offset = [0, 0],\r\n    zIndex = 1000,\r\n    fontFamily = 'Arial, sans-serif',\r\n    fontWeight = 'normal',\r\n    width = 200,\r\n    height = 100,\r\n    enabled = true\r\n  } = options;\r\n\r\n  const ref = useRef<HTMLElement>(null);\r\n  const watermarkRef = useRef<HTMLDivElement | null>(null);\r\n  const optionsRef = useRef<WatermarkOptions>(options);\r\n\r\n  // 更新选项引用\r\n  useEffect(() => {\r\n    optionsRef.current = { ...options };\r\n  });\r\n\r\n  // 创建水印元素\r\n  const createWatermark = useCallback(() => {\r\n    if (!ref.current || !enabled) return;\r\n\r\n    // 清除现有水印\r\n    if (watermarkRef.current) {\r\n      watermarkRef.current.remove();\r\n      watermarkRef.current = null;\r\n    }\r\n\r\n    const element = ref.current;\r\n    const rect = element.getBoundingClientRect();\r\n    \r\n    // 创建水印容器\r\n    const watermark = document.createElement('div');\r\n    watermark.style.position = 'absolute';\r\n    watermark.style.top = '0';\r\n    watermark.style.left = '0';\r\n    watermark.style.width = '100%';\r\n    watermark.style.height = '100%';\r\n    watermark.style.pointerEvents = 'none';\r\n    watermark.style.zIndex = zIndex.toString();\r\n    watermark.style.overflow = 'hidden';\r\n    \r\n    // 设置水印背景\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    \r\n    // 设置画布样式\r\n    ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\r\n    ctx.fillStyle = color;\r\n    ctx.globalAlpha = opacity;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    \r\n    // 绘制水印\r\n    if (image) {\r\n      // 绘制图片水印\r\n      const img = new Image();\r\n      img.crossOrigin = 'anonymous';\r\n      img.onload = () => {\r\n        ctx.save();\r\n        ctx.translate(width / 2, height / 2);\r\n        ctx.rotate((rotate * Math.PI) / 180);\r\n        ctx.drawImage(img, -img.width / 2, -img.height / 2);\r\n        ctx.restore();\r\n        createWatermarkPattern();\r\n      };\r\n      img.src = image;\r\n    } else {\r\n      // 绘制文字水印\r\n      ctx.save();\r\n      ctx.translate(width / 2, height / 2);\r\n      ctx.rotate((rotate * Math.PI) / 180);\r\n      ctx.fillText(text, 0, 0);\r\n      ctx.restore();\r\n      createWatermarkPattern();\r\n    }\r\n\r\n    function createWatermarkPattern() {\r\n      const dataURL = canvas.toDataURL();\r\n      const pattern = `url(${dataURL})`;\r\n      \r\n      watermark.style.backgroundImage = pattern;\r\n      watermark.style.backgroundRepeat = 'repeat';\r\n      watermark.style.backgroundSize = `${gap[0]}px ${gap[1]}px`;\r\n      watermark.style.backgroundPosition = `${offset[0]}px ${offset[1]}px`;\r\n      \r\n      element.style.position = 'relative';\r\n      element.appendChild(watermark);\r\n      watermarkRef.current = watermark;\r\n    }\r\n  }, [text, image, fontSize, color, opacity, rotate, gap, offset, zIndex, fontFamily, fontWeight, width, height, enabled]);\r\n\r\n  // 清除水印\r\n  const clear = useCallback(() => {\r\n    if (watermarkRef.current) {\r\n      watermarkRef.current.remove();\r\n      watermarkRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  // 设置水印选项\r\n  const setOptions = useCallback((newOptions: Partial<WatermarkOptions>) => {\r\n    Object.assign(optionsRef.current, newOptions);\r\n    createWatermark();\r\n  }, [createWatermark]);\r\n\r\n  // 监听元素变化\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n\r\n    const element = ref.current;\r\n    \r\n    // 创建水印\r\n    createWatermark();\r\n\r\n    // 监听元素尺寸变化\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      createWatermark();\r\n    });\r\n    \r\n    resizeObserver.observe(element);\r\n\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n      clear();\r\n    };\r\n  }, [createWatermark, clear]);\r\n\r\n  return {\r\n    ref,\r\n    setOptions,\r\n    clear,\r\n    options: optionsRef.current\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nexport interface ButtonProps {\r\n  children: React.ReactNode;\r\n  variant?: 'primary' | 'secondary' | 'outline';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  disabled?: boolean;\r\n  onClick?: () => void;\r\n  className?: string;\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  children,\r\n  variant = 'primary',\r\n  size = 'md',\r\n  disabled = false,\r\n  onClick,\r\n  className = '',\r\n}) => {\r\n  const baseClasses = 'inline-flex items-center justify-center rounded-md font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2';\r\n  \r\n  const variantClasses = {\r\n    primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',\r\n    secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',\r\n    outline: 'border border-gray-300 bg-transparent text-gray-700 hover:bg-gray-50 focus:ring-gray-500',\r\n  };\r\n  \r\n  const sizeClasses = {\r\n    sm: 'px-3 py-1.5 text-sm',\r\n    md: 'px-4 py-2 text-base',\r\n    lg: 'px-6 py-3 text-lg',\r\n  };\r\n  \r\n  const disabledClasses = disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer';\r\n  \r\n  const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${disabledClasses} ${className}`;\r\n  \r\n  return (\r\n    <button\r\n      className={classes}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}; "],"names":["useState","useCallback","useRef","useEffect","useLayoutEffect","date","diffInMs","itemsToAdd","useMemo","error","enabled","onScrollStart","onScrollEnd","onScroll","scrollEndDelay","horizontal","vertical"],"mappings":";;;;AAmBO,MAAM,UAAA,GAAa,CAAC,OAAA,GAA6B,EAAC,KAAwB;AAC/E,EAAA,MAAM;AAAA,IACJ,YAAA,GAAe,CAAA;AAAA,IACf,GAAA,GAAM,CAAA,QAAA;AAAA,IACN,GAAA,GAAM,QAAA;AAAA,IACN,IAAA,GAAO;AAAA,GACT,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,KAAA,EAAO,aAAa,CAAA,GAAIA,eAAS,YAAY,CAAA;AAEpD,EAAA,MAAM,QAAA,GAAWC,iBAAA,CAAY,CAAC,KAAA,KAAkB;AAC9C,IAAA,MAAM,YAAA,GAAe,KAAK,GAAA,CAAI,IAAA,CAAK,IAAI,KAAA,EAAO,GAAG,GAAG,GAAG,CAAA;AACvD,IAAA,aAAA,CAAc,YAAY,CAAA;AAAA,EAC5B,CAAA,EAAG,CAAC,GAAA,EAAK,GAAG,CAAC,CAAA;AAEb,EAAA,MAAM,SAAA,GAAYA,kBAAY,MAAM;AAClC,IAAA,QAAA,CAAS,QAAQ,IAAI,CAAA;AAAA,EACvB,CAAA,EAAG,CAAC,KAAA,EAAO,IAAA,EAAM,QAAQ,CAAC,CAAA;AAE1B,EAAA,MAAM,SAAA,GAAYA,kBAAY,MAAM;AAClC,IAAA,QAAA,CAAS,QAAQ,IAAI,CAAA;AAAA,EACvB,CAAA,EAAG,CAAC,KAAA,EAAO,IAAA,EAAM,QAAQ,CAAC,CAAA;AAE1B,EAAA,MAAM,KAAA,GAAQA,kBAAY,MAAM;AAC9B,IAAA,aAAA,CAAc,YAAY,CAAA;AAAA,EAC5B,CAAA,EAAG,CAAC,YAAY,CAAC,CAAA;AAEjB,EAAA,MAAM,QAAQ,KAAA,IAAS,GAAA;AACvB,EAAA,MAAM,QAAQ,KAAA,IAAS,GAAA;AAEvB,EAAA,OAAO;AAAA,IACL,KAAA;AAAA,IACA,SAAA;AAAA,IACA,SAAA;AAAA,IACA,KAAA;AAAA,IACA,QAAA;AAAA,IACA,KAAA;AAAA,IACA;AAAA,GACF;AACF;;ACxDO,MAAM,WAAA,GAAc,CAAI,KAAA,KAA4B;AACzD,EAAA,MAAM,GAAA,GAAMC,aAAsB,MAAS,CAAA;AAE3C,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,GAAA,CAAI,OAAA,GAAU,KAAA;AAAA,EAChB,CAAC,CAAA;AAED,EAAA,OAAO,GAAA,CAAI,OAAA;AACb;;ACMO,MAAM,SAAA,GAAY,CACvB,OAAA,GAA+B,EAAC,KACT;AACvB,EAAA,MAAM;AAAA,IACJ,YAAA,GAAe,KAAA;AAAA,IACf,SAAA,GAAY,IAAA;AAAA,IACZ,UAAA,GAAa;AAAA,GACf,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIH,eAAY,YAAY,CAAA;AAElD,EAAA,MAAM,MAAA,GAASC,kBAAY,MAAM;AAC/B,IAAA,QAAA,CAAS,CAAA,IAAA,KAAQ,IAAA,KAAS,SAAA,GAAY,UAAA,GAAa,SAAS,CAAA;AAAA,EAC9D,CAAA,EAAG,CAAC,SAAA,EAAW,UAAU,CAAC,CAAA;AAE1B,EAAA,MAAM,OAAA,GAAUA,kBAAY,MAAM;AAChC,IAAA,QAAA,CAAS,SAAS,CAAA;AAAA,EACpB,CAAA,EAAG,CAAC,SAAS,CAAC,CAAA;AAEd,EAAA,MAAM,QAAA,GAAWA,kBAAY,MAAM;AACjC,IAAA,QAAA,CAAS,UAAU,CAAA;AAAA,EACrB,CAAA,EAAG,CAAC,UAAU,CAAC,CAAA;AAEf,EAAA,OAAO;AAAA,IACL,KAAA;AAAA,IACA,MAAA;AAAA,IACA,QAAA;AAAA,IACA,OAAA;AAAA,IACA;AAAA,GACF;AACF;;AClCO,MAAM,aAAA,GAAgB,CAAC,OAAA,GAAgC,EAAC,KAAkB;AAC/E,EAAA,MAAM,EAAE,UAAA,GAAa,GAAA,EAAK,WAAA,GAAc,EAAE,OAAO,CAAA,EAAG,MAAA,EAAQ,CAAA,EAAE,EAAE,GAAI,OAAA;AAEpE,EAAA,MAAM,CAAC,IAAA,EAAM,OAAO,CAAA,GAAID,eAAqB,MAAM;AACjD,IAAA,IAAI,OAAO,WAAW,WAAA,EAAa;AACjC,MAAA,OAAO;AAAA,QACL,OAAO,MAAA,CAAO,UAAA;AAAA,QACd,QAAQ,MAAA,CAAO;AAAA,OACjB;AAAA,IACF;AACA,IAAA,OAAO,WAAA;AAAA,EACT,CAAC,CAAA;AAED,EAAAG,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,OAAO,WAAW,WAAA,EAAa;AACjC,MAAA;AAAA,IACF;AAEA,IAAA,IAAI,SAAA;AAEJ,IAAA,MAAM,eAAe,MAAM;AACzB,MAAA,YAAA,CAAa,SAAS,CAAA;AACtB,MAAA,SAAA,GAAY,WAAW,MAAM;AAC3B,QAAA,OAAA,CAAQ;AAAA,UACN,OAAO,MAAA,CAAO,UAAA;AAAA,UACd,QAAQ,MAAA,CAAO;AAAA,SAChB,CAAA;AAAA,MACH,GAAG,UAAU,CAAA;AAAA,IACf,CAAA;AAGA,IAAA,MAAM,QAAA,GAAW,IAAI,cAAA,CAAe,CAAC,OAAA,KAAY;AAC/C,MAAA,KAAA,MAAW,SAAS,OAAA,EAAS;AAC3B,QAAA,IAAI,KAAA,CAAM,MAAA,KAAW,QAAA,CAAS,eAAA,EAAiB;AAC7C,UAAA,YAAA,EAAa;AACb,UAAA;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC,CAAA;AAGD,IAAA,MAAA,CAAO,gBAAA,CAAiB,UAAU,YAAY,CAAA;AAC9C,IAAA,QAAA,CAAS,OAAA,CAAQ,SAAS,eAAe,CAAA;AAEzC,IAAA,OAAO,MAAM;AACX,MAAA,YAAA,CAAa,SAAS,CAAA;AACtB,MAAA,MAAA,CAAO,mBAAA,CAAoB,UAAU,YAAY,CAAA;AACjD,MAAA,QAAA,CAAS,UAAA,EAAW;AAAA,IACtB,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,UAAU,CAAC,CAAA;AAEf,EAAA,OAAO,IAAA;AACT;;AC7CO,MAAM,kBAAkB,CAC7B,GAAA,EACA,YAAA,EACA,OAAA,GAAqC,EAAC,KACT;AAC7B,EAAA,MAAM;AAAA,IACJ,UAAA,GAAa;AAAA,MACX,WAAW,IAAA,CAAK,SAAA;AAAA,MAChB,OAAO,IAAA,CAAK;AAAA,KACd;AAAA,IACA,UAAU,CAAC,KAAA,KAAU,OAAA,CAAQ,KAAA,CAAM,0BAA0B,KAAK;AAAA,GACpE,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAIH,eAAY,MAAM;AACtD,IAAA,IAAI;AACF,MAAA,IAAI,OAAO,WAAW,WAAA,EAAa;AACjC,QAAA,OAAO,YAAA;AAAA,MACT;AAEA,MAAA,MAAM,IAAA,GAAO,MAAA,CAAO,YAAA,CAAa,OAAA,CAAQ,GAAG,CAAA;AAC5C,MAAA,OAAO,IAAA,GAAO,UAAA,CAAW,KAAA,CAAM,IAAI,CAAA,GAAI,YAAA;AAAA,IACzC,SAAS,KAAA,EAAO;AACd,MAAA,OAAA,CAAQ,KAAc,CAAA;AACtB,MAAA,OAAO,YAAA;AAAA,IACT;AAAA,EACF,CAAC,CAAA;AAED,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAIA,eAAS,MAAM;AAC7C,IAAA,IAAI;AACF,MAAA,IAAI,OAAO,WAAW,WAAA,EAAa;AACjC,QAAA,OAAO,KAAA;AAAA,MACT;AACA,MAAA,OAAO,MAAA,CAAO,YAAA,CAAa,OAAA,CAAQ,GAAG,CAAA,KAAM,IAAA;AAAA,IAC9C,CAAA,CAAA,MAAQ;AACN,MAAA,OAAO,KAAA;AAAA,IACT;AAAA,EACF,CAAC,CAAA;AAED,EAAA,MAAM,QAAA,GAAWC,iBAAA,CAAY,CAAC,KAAA,KAAgC;AAC5D,IAAA,IAAI;AACF,MAAA,MAAM,YAAA,GAAe,KAAA,YAAiB,QAAA,GAAW,KAAA,CAAM,WAAW,CAAA,GAAI,KAAA;AACtE,MAAA,cAAA,CAAe,YAAY,CAAA;AAC3B,MAAA,WAAA,CAAY,IAAI,CAAA;AAEhB,MAAA,IAAI,OAAO,WAAW,WAAA,EAAa;AACjC,QAAA,MAAA,CAAO,aAAa,OAAA,CAAQ,GAAA,EAAK,UAAA,CAAW,SAAA,CAAU,YAAY,CAAC,CAAA;AAAA,MACrE;AAAA,IACF,SAAS,KAAA,EAAO;AACd,MAAA,OAAA,CAAQ,KAAc,CAAA;AAAA,IACxB;AAAA,EACF,GAAG,CAAC,GAAA,EAAK,WAAA,EAAa,UAAA,EAAY,OAAO,CAAC,CAAA;AAE1C,EAAA,MAAM,WAAA,GAAcA,kBAAY,MAAM;AACpC,IAAA,IAAI;AACF,MAAA,cAAA,CAAe,YAAY,CAAA;AAC3B,MAAA,WAAA,CAAY,KAAK,CAAA;AAEjB,MAAA,IAAI,OAAO,WAAW,WAAA,EAAa;AACjC,QAAA,MAAA,CAAO,YAAA,CAAa,WAAW,GAAG,CAAA;AAAA,MACpC;AAAA,IACF,SAAS,KAAA,EAAO;AACd,MAAA,OAAA,CAAQ,KAAc,CAAA;AAAA,IACxB;AAAA,EACF,CAAA,EAAG,CAAC,GAAA,EAAK,YAAA,EAAc,OAAO,CAAC,CAAA;AAE/B,EAAA,OAAO;AAAA,IACL,KAAA,EAAO,WAAA;AAAA,IACP,QAAA;AAAA,IACA,WAAA;AAAA,IACA;AAAA,GACF;AACF;;AC5EO,MAAM,WAAA,GAAc,CACzB,YAAA,EACA,OAAA,GAA8B,EAAC,KACN;AACzB,EAAA,MAAM,EAAE,KAAA,GAAQ,GAAA,EAAK,SAAA,GAAY,OAAM,GAAI,OAAA;AAE3C,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAID,eAAY,YAAY,CAAA;AAClD,EAAA,MAAM,CAAC,cAAA,EAAgB,iBAAiB,CAAA,GAAIA,eAAY,YAAY,CAAA;AACpE,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAIA,eAAS,KAAK,CAAA;AAEhD,EAAAG,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,SAAA,EAAW;AACb,MAAA,iBAAA,CAAkB,KAAK,CAAA;AACvB,MAAA,YAAA,CAAa,KAAK,CAAA;AAClB,MAAA;AAAA,IACF;AAEA,IAAA,YAAA,CAAa,IAAI,CAAA;AACjB,IAAA,MAAM,KAAA,GAAQ,WAAW,MAAM;AAC7B,MAAA,iBAAA,CAAkB,KAAK,CAAA;AACvB,MAAA,YAAA,CAAa,KAAK,CAAA;AAAA,IACpB,GAAG,KAAK,CAAA;AAER,IAAA,OAAO,MAAM;AACX,MAAA,YAAA,CAAa,KAAK,CAAA;AAAA,IACpB,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,KAAA,EAAO,KAAA,EAAO,SAAS,CAAC,CAAA;AAE5B,EAAA,OAAO;AAAA,IACL,KAAA;AAAA,IACA,QAAA;AAAA,IACA,cAAA;AAAA,IACA;AAAA,GACF;AACF;;AClCO,MAAM,cAAc,CACzB,YAAA,EACA,WAAmB,GAAA,EACnB,OAAA,GAA8B,EAAC,KACN;AACzB,EAAA,MAAM,EAAE,OAAA,GAAU,IAAA,EAAM,QAAA,GAAW,MAAK,GAAI,OAAA;AAE5C,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIH,eAAY,YAAY,CAAA;AAClD,EAAA,MAAM,CAAC,cAAA,EAAgB,iBAAiB,CAAA,GAAIA,eAAY,YAAY,CAAA;AACpE,EAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAIA,eAAS,KAAK,CAAA;AAEpD,EAAA,MAAM,WAAA,GAAcE,aAAsB,IAAI,CAAA;AAC9C,EAAA,MAAM,UAAA,GAAaA,aAA8B,IAAI,CAAA;AAErD,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,MAAM,GAAA,GAAM,KAAK,GAAA,EAAI;AAGrB,IAAA,IAAI,OAAA,IAAW,WAAA,CAAY,OAAA,KAAY,IAAA,EAAM;AAC3C,MAAA,WAAA,CAAY,OAAA,GAAU,GAAA;AACtB,MAAA,iBAAA,CAAkB,KAAK,CAAA;AACvB,MAAA,cAAA,CAAe,KAAK,CAAA;AACpB,MAAA;AAAA,IACF;AAGA,IAAA,IAAI,WAAA,CAAY,OAAA,IAAW,GAAA,IAAO,WAAA,CAAY,UAAU,QAAA,EAAU;AAChE,MAAA,WAAA,CAAY,OAAA,GAAU,GAAA;AACtB,MAAA,iBAAA,CAAkB,KAAK,CAAA;AACvB,MAAA,cAAA,CAAe,KAAK,CAAA;AAGpB,MAAA,IAAI,WAAW,OAAA,EAAS;AACtB,QAAA,YAAA,CAAa,WAAW,OAAO,CAAA;AAC/B,QAAA,UAAA,CAAW,OAAA,GAAU,IAAA;AAAA,MACvB;AAAA,IACF,WAAW,QAAA,EAAU;AAEnB,MAAA,cAAA,CAAe,IAAI,CAAA;AAEnB,MAAA,IAAI,WAAW,OAAA,EAAS;AACtB,QAAA,YAAA,CAAa,WAAW,OAAO,CAAA;AAAA,MACjC;AAEA,MAAA,UAAA,CAAW,OAAA,GAAU,WAAW,MAAM;AACpC,QAAA,WAAA,CAAY,OAAA,GAAU,KAAK,GAAA,EAAI;AAC/B,QAAA,iBAAA,CAAkB,KAAK,CAAA;AACvB,QAAA,cAAA,CAAe,KAAK,CAAA;AACpB,QAAA,UAAA,CAAW,OAAA,GAAU,IAAA;AAAA,MACvB,CAAA,EAAG,QAAA,IAAY,GAAA,IAAO,WAAA,CAAY,WAAW,CAAA,CAAA,CAAG,CAAA;AAAA,IAClD;AAAA,EACF,GAAG,CAAC,KAAA,EAAO,QAAA,EAAU,OAAA,EAAS,QAAQ,CAAC,CAAA;AAGvC,EAAAA,eAAA,CAAU,MAAM;AACd,IAAA,OAAO,MAAM;AACX,MAAA,IAAI,WAAW,OAAA,EAAS;AACtB,QAAA,YAAA,CAAa,WAAW,OAAO,CAAA;AAAA,MACjC;AAAA,IACF,CAAA;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,OAAO;AAAA,IACL,KAAA;AAAA,IACA,QAAA;AAAA,IACA,cAAA;AAAA,IACA;AAAA,GACF;AACF;;ACjDO,MAAM,YAAA,GAAe,CAC1B,OAAA,GAA+B,EAAC,KACN;AAC1B,EAAA,MAAM;AAAA,IACJ,OAAA,GAAU,IAAA;AAAA,IACV,MAAA,GAAS,CAAC,WAAA,EAAa,YAAY,CAAA;AAAA,IACnC;AAAA,GACF,GAAI,OAAA;AAEJ,EAAA,MAAM,GAAA,GAAMD,aAAU,IAAI,CAAA;AAC1B,EAAA,MAAM,WAAA,GAAcA,aAAO,WAAW,CAAA;AAEtC,EAAAE,qBAAA,CAAgB,MAAM;AACpB,IAAA,WAAA,CAAY,OAAA,GAAU,WAAA;AAAA,EACxB,CAAA,EAAG,CAAC,WAAW,CAAC,CAAA;AAEhB,EAAAD,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,OAAA,IAAW,CAAC,WAAA,CAAY,OAAA,EAAS;AAEtC,IAAA,MAAM,OAAA,GAAU,CAAC,KAAA,KAAiB;AAChC,MAAA,IAAI,GAAA,CAAI,WAAW,CAAC,GAAA,CAAI,QAAQ,QAAA,CAAS,KAAA,CAAM,MAAc,CAAA,EAAG;AAC9D,QAAA,WAAA,CAAY,UAAU,KAAK,CAAA;AAAA,MAC7B;AAAA,IACF,CAAA;AAEA,IAAA,MAAA,CAAO,QAAQ,CAAA,SAAA,KAAa;AAC1B,MAAA,QAAA,CAAS,gBAAA,CAAiB,WAAW,OAAO,CAAA;AAAA,IAC9C,CAAC,CAAA;AAED,IAAA,OAAO,MAAM;AACX,MAAA,MAAA,CAAO,QAAQ,CAAA,SAAA,KAAa;AAC1B,QAAA,QAAA,CAAS,mBAAA,CAAoB,WAAW,OAAO,CAAA;AAAA,MACjD,CAAC,CAAA;AAAA,IACH,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,OAAA,EAAS,MAAM,CAAC,CAAA;AAEpB,EAAA,OAAO,EAAE,GAAA,EAAI;AACf;;AC7BO,MAAM,SAAA,GAAY,CAAC,OAAA,GAA4B,EAAC,KAAuB;AAC5E,EAAA,MAAM;AAAA,IACJ,SAAA,GAAY,CAAA;AAAA,IACZ,UAAA,GAAa,KAAA;AAAA,IACb,IAAA;AAAA,IACA,WAAA,GAAc,KAAA;AAAA,IACd,OAAA;AAAA,IACA;AAAA,GACF,GAAI,OAAA;AAEJ,EAAA,MAAM,GAAA,GAAMD,aAAgB,IAAI,CAAA;AAChC,EAAA,MAAM,CAAC,MAAA,EAAQ,SAAS,CAAA,GAAIF,eAAS,KAAK,CAAA;AAC1C,EAAA,MAAM,CAAC,UAAA,EAAY,aAAa,CAAA,GAAIA,eAAS,CAAC,CAAA;AAC9C,EAAA,MAAM,CAAC,UAAA,EAAY,aAAa,CAAA,GAAIA,eAAS,KAAK,CAAA;AAElD,EAAAG,eAAA,CAAU,MAAM;AACd,IAAA,MAAM,UAAU,GAAA,CAAI,OAAA;AACpB,IAAA,IAAI,CAAC,OAAA,EAAS;AAEd,IAAA,MAAM,WAAW,IAAI,oBAAA;AAAA,MACnB,CAAC,CAAC,KAAK,CAAA,KAAM;AACX,QAAA,MAAM,iBAAiB,KAAA,CAAM,cAAA;AAE7B,QAAA,IAAI,cAAA,EAAgB;AAClB,UAAA,SAAA,CAAU,IAAI,CAAA;AACd,UAAA,aAAA,CAAc,CAAA,IAAA,KAAQ,OAAO,CAAC,CAAA;AAE9B,UAAA,IAAI,CAAC,UAAA,EAAY;AACf,YAAA,aAAA,CAAc,IAAI,CAAA;AAClB,YAAA,OAAA,IAAU;AAAA,UACZ;AAAA,QACF,CAAA,MAAO;AACL,UAAA,SAAA,CAAU,KAAK,CAAA;AACf,UAAA,IAAI,CAAC,WAAA,EAAa;AAChB,YAAA,OAAA,IAAU;AAAA,UACZ;AAAA,QACF;AAAA,MACF,CAAA;AAAA,MACA;AAAA,QACE,SAAA;AAAA,QACA,UAAA;AAAA,QACA;AAAA;AACF,KACF;AAEA,IAAA,QAAA,CAAS,QAAQ,OAAO,CAAA;AAExB,IAAA,OAAO,MAAM;AACX,MAAA,QAAA,CAAS,UAAU,OAAO,CAAA;AAC1B,MAAA,QAAA,CAAS,UAAA,EAAW;AAAA,IACtB,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,SAAA,EAAW,UAAA,EAAY,MAAM,WAAA,EAAa,OAAA,EAAS,OAAA,EAAS,UAAU,CAAC,CAAA;AAE3E,EAAA,OAAO;AAAA,IACL,GAAA;AAAA,IACA,MAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,GACF;AACF;;ACtEA,MAAM,aAAA,GAA0C;AAAA,EAC9C,MAAA,EAAQ,QAAA;AAAA,EACR,MAAA,EAAQ,cAAA;AAAA,EACR,IAAA,EAAM,cAAA;AAAA,EACN,GAAA,EAAK,QAAA;AAAA,EACL,IAAA,EAAM,QAAA;AAAA,EACN,KAAA,EAAO,cAAA;AAAA,EACP,IAAA,EAAM;AACR,CAAA;AAGA,MAAM,aAAA,GAA0C;AAAA,EAC9C,MAAA,EAAQ,QAAA;AAAA,EACR,MAAA,EAAQ,QAAA;AAAA,EACR,IAAA,EAAM,MAAA;AAAA,EACN,GAAA,EAAK,KAAA;AAAA,EACL,IAAA,EAAM,MAAA;AAAA,EACN,KAAA,EAAO,OAAA;AAAA,EACP,IAAA,EAAM;AACR,CAAA;AAqBO,MAAM,UAAA,GAAa,CACxB,SAAA,EACA,OAAA,GAA6B,EAAC,KACT;AACrB,EAAA,MAAM;AAAA,IACJ,QAAA,GAAW,GAAA;AAAA,IACX,MAAA,GAAS,IAAA;AAAA,IACT,QAAA,GAAW,IAAA;AAAA,IACX,OAAA,GAAU,QAAA;AAAA,IACV,UAAA,GAAa;AAAA,GACf,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,OAAA,EAAS,UAAU,CAAA,GAAIH,eAAiB,EAAE,CAAA;AACjD,EAAA,MAAM,CAAC,UAAA,EAAY,aAAa,CAAA,GAAIA,eAAS,KAAK,CAAA;AAElD,EAAA,MAAM,gBAAA,GAAmBC,kBAAY,MAAM;AACzC,IAAA,MAAM,GAAA,GAAM,KAAK,GAAA,EAAI;AACrB,IAAA,MAAMI,QAAO,SAAA,YAAqB,IAAA,GAAO,SAAA,GAAY,IAAI,KAAK,SAAS,CAAA;AACvE,IAAA,MAAMC,SAAAA,GAAW,GAAA,GAAMD,KAAAA,CAAK,OAAA,EAAQ;AAGpC,IAAA,MAAM,aAAA,GAAgB,IAAA,CAAK,KAAA,CAAMC,SAAAA,GAAW,GAAI,CAAA;AAChD,IAAA,MAAM,aAAA,GAAgB,IAAA,CAAK,KAAA,CAAM,aAAA,GAAgB,EAAE,CAAA;AACnD,IAAA,MAAM,WAAA,GAAc,IAAA,CAAK,KAAA,CAAM,aAAA,GAAgB,EAAE,CAAA;AACjD,IAAA,MAAM,UAAA,GAAa,IAAA,CAAK,KAAA,CAAM,WAAA,GAAc,EAAE,CAAA;AAC9C,IAAA,MAAM,WAAA,GAAc,IAAA,CAAK,KAAA,CAAM,UAAA,GAAa,CAAC,CAAA;AAC7C,IAAA,MAAM,YAAA,GAAe,IAAA,CAAK,KAAA,CAAM,UAAA,GAAa,EAAE,CAAA;AAC/C,IAAA,MAAM,WAAA,GAAc,IAAA,CAAK,KAAA,CAAM,UAAA,GAAa,GAAG,CAAA;AAG/C,IAAA,MAAM,YAAA,GAAe,CAAC,KAAA,EAAe,IAAA,KAA2B;AAC9D,MAAA,MAAM,KAAA,GAAQ,MAAA,KAAW,IAAA,GAAO,aAAA,GAAgB,aAAA;AAGhD,MAAA,IAAI,WAAW,IAAA,EAAM;AACnB,QAAA,IAAI,IAAA,KAAS,QAAA,IAAY,KAAA,KAAU,CAAA,EAAG,OAAO,cAAA;AAC7C,QAAA,IAAI,IAAA,KAAS,QAAA,EAAU,OAAO,CAAA,EAAG,KAAK,CAAA,YAAA,CAAA;AACtC,QAAA,IAAI,IAAA,KAAS,QAAA,EAAU,OAAO,CAAA,EAAG,KAAK,CAAA,kBAAA,CAAA;AACtC,QAAA,IAAI,IAAA,KAAS,MAAA,EAAQ,OAAO,CAAA,EAAG,KAAK,CAAA,kBAAA,CAAA;AACpC,QAAA,IAAI,IAAA,KAAS,KAAA,EAAO,OAAO,CAAA,EAAG,KAAK,CAAA,YAAA,CAAA;AACnC,QAAA,IAAI,IAAA,KAAS,MAAA,EAAQ,OAAO,CAAA,EAAG,KAAK,CAAA,YAAA,CAAA;AACpC,QAAA,IAAI,IAAA,KAAS,OAAA,EAAS,OAAO,CAAA,EAAG,KAAK,CAAA,kBAAA,CAAA;AACrC,QAAA,IAAI,IAAA,KAAS,MAAA,EAAQ,OAAO,CAAA,EAAG,KAAK,CAAA,YAAA,CAAA;AAAA,MACtC;AAGA,MAAA,IAAI,WAAW,IAAA,EAAM;AACnB,QAAA,IAAI,UAAU,CAAA,EAAG,OAAO,CAAA,EAAA,EAAK,KAAA,CAAM,IAAI,CAAC,CAAA,IAAA,CAAA;AACxC,QAAA,OAAO,CAAA,EAAG,KAAK,CAAA,CAAA,EAAI,KAAA,CAAM,IAAI,CAAC,CAAA,KAAA,CAAA;AAAA,MAChC;AAEA,MAAA,OAAO,CAAA,EAAG,KAAK,CAAA,CAAA,EAAI,KAAA,CAAM,IAAI,CAAC,CAAA,EAAG,MAAA,KAAW,IAAA,GAAO,QAAA,GAAM,OAAO,CAAA,CAAA;AAAA,IAClE,CAAA;AAGA,IAAA,MAAM,cAAA,GAAiB,CAAC,KAAA,EAAe,IAAA,KAA2B;AAChE,MAAA,IAAI;AACF,QAAA,MAAM,GAAA,GAAM,IAAI,IAAA,CAAK,kBAAA,CAAmB,QAAQ,EAAE,OAAA,EAAS,QAAQ,CAAA;AACnE,QAAA,OAAO,GAAA,CAAI,MAAA,CAAO,CAAC,KAAA,EAAO,IAAI,CAAA;AAAA,MAChC,SAAS,CAAA,EAAG;AACV,QAAA,OAAO,YAAA,CAAa,OAAO,IAAI,CAAA;AAAA,MACjC;AAAA,IACF,CAAA;AAGA,IAAA,IAAI,OAAA,KAAY,MAAA,IAAW,WAAA,GAAc,CAAA,IAAK,YAAY,QAAA,EAAW;AACnE,MAAA,OAAO,WACH,cAAA,CAAe,WAAA,EAAa,MAAM,CAAA,GAClC,YAAA,CAAa,aAAa,MAAM,CAAA;AAAA,IACtC,CAAA,MAAA,IAAW,YAAY,OAAA,IAAY,YAAA,GAAe,KAAK,OAAA,KAAY,QAAA,IAAY,YAAY,QAAA,EAAW;AACpG,MAAA,OAAO,WACH,cAAA,CAAe,YAAA,EAAc,OAAO,CAAA,GACpC,YAAA,CAAa,cAAc,OAAO,CAAA;AAAA,IACxC,CAAA,MAAA,IAAW,OAAA,KAAY,MAAA,IAAW,WAAA,GAAc,CAAA,IAAK,YAAY,QAAA,IAAY,OAAA,KAAY,QAAA,IAAY,OAAA,KAAY,MAAA,EAAS;AACxH,MAAA,OAAO,WACH,cAAA,CAAe,WAAA,EAAa,MAAM,CAAA,GAClC,YAAA,CAAa,aAAa,MAAM,CAAA;AAAA,IACtC,CAAA,MAAA,IAAW,YAAY,KAAA,IAAU,UAAA,GAAa,KAAK,OAAA,KAAY,QAAA,IAAY,YAAY,QAAA,EAAW;AAChG,MAAA,OAAO,WACH,cAAA,CAAe,UAAA,EAAY,KAAK,CAAA,GAChC,YAAA,CAAa,YAAY,KAAK,CAAA;AAAA,IACpC,WAAW,OAAA,KAAY,MAAA,IAAW,WAAA,GAAc,CAAA,IAAK,YAAY,QAAA,EAAW;AAC1E,MAAA,OAAO,WACH,cAAA,CAAe,WAAA,EAAa,MAAM,CAAA,GAClC,YAAA,CAAa,aAAa,MAAM,CAAA;AAAA,IACtC,CAAA,MAAA,IAAW,OAAA,KAAY,QAAA,IAAY,aAAA,GAAgB,CAAA,EAAG;AACpD,MAAA,OAAO,WACH,cAAA,CAAe,aAAA,EAAe,QAAQ,CAAA,GACtC,YAAA,CAAa,eAAe,QAAQ,CAAA;AAAA,IAC1C,CAAA,MAAO;AACL,MAAA,OAAO,WACH,cAAA,CAAe,aAAA,EAAe,QAAQ,CAAA,GACtC,YAAA,CAAa,eAAe,QAAQ,CAAA;AAAA,IAC1C;AAAA,EACF,GAAG,CAAC,SAAA,EAAW,MAAA,EAAQ,QAAA,EAAU,OAAO,CAAC,CAAA;AAGzC,EAAAH,eAAA,CAAU,MAAM;AACd,IAAA,UAAA,CAAW,kBAAkB,CAAA;AAAA,EAC/B,CAAA,EAAG,CAAC,gBAAgB,CAAC,CAAA;AAGrB,EAAAA,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,UAAA,EAAY;AAEjB,IAAA,MAAM,UAAA,GAAa,YAAY,MAAM;AACnC,MAAA,aAAA,CAAc,IAAI,CAAA;AAClB,MAAA,UAAA,CAAW,kBAAkB,CAAA;AAC7B,MAAA,aAAA,CAAc,KAAK,CAAA;AAAA,IACrB,GAAG,QAAQ,CAAA;AAEX,IAAA,OAAO,MAAM;AACX,MAAA,aAAA,CAAc,UAAU,CAAA;AAAA,IAC1B,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,QAAA,EAAU,gBAAA,EAAkB,UAAU,CAAC,CAAA;AAE3C,EAAA,MAAM,OAAO,SAAA,YAAqB,IAAA,GAAO,SAAA,GAAY,IAAI,KAAK,SAAS,CAAA;AACvE,EAAA,MAAM,QAAA,GAAW,IAAA,CAAK,GAAA,EAAI,GAAI,KAAK,OAAA,EAAQ;AAE3C,EAAA,OAAO;AAAA,IACL,OAAA;AAAA,IACA,SAAA,EAAW,IAAA;AAAA,IACX,QAAA;AAAA,IACA;AAAA,GACF;AACF;;ACjIO,MAAM,QAAA,GAAW,CACtB,OAAA,GAA8B,EAAC,KACT;AACtB,EAAA,MAAM;AAAA,IACJ,eAAe,EAAC;AAAA,IAChB,OAAA;AAAA,IACA,gBAAA,GAAmB;AAAA,GACrB,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIH,eAAc,YAAY,CAAA;AAGpD,EAAA,MAAM,OAAA,GAAUC,iBAAA,CAAY,CAAC,IAAA,KAAY;AACvC,IAAA,QAAA,CAAS,CAAA,SAAA,KAAa;AACpB,MAAA,IAAI,OAAA,IAAW,SAAA,CAAU,MAAA,IAAU,OAAA,EAAS;AAC1C,QAAA,QAAQ,gBAAA;AAAkB,UACxB,KAAK,OAAA;AACH,YAAA,MAAM,IAAI,MAAM,eAAe,CAAA;AAAA,UACjC,KAAK,OAAA;AACH,YAAA,OAAO,CAAC,GAAG,SAAA,CAAU,KAAA,CAAM,CAAC,GAAG,IAAI,CAAA;AAAA,UACrC,KAAK,MAAA;AAAA,UACL;AACE,YAAA,OAAO,SAAA;AAAA;AACX,MACF;AACA,MAAA,OAAO,CAAC,GAAG,SAAA,EAAW,IAAI,CAAA;AAAA,IAC5B,CAAC,CAAA;AAAA,EACH,CAAA,EAAG,CAAC,OAAA,EAAS,gBAAgB,CAAC,CAAA;AAG9B,EAAA,MAAM,WAAA,GAAcA,iBAAA,CAAY,CAAC,KAAA,KAAe;AAC9C,IAAA,QAAA,CAAS,CAAA,SAAA,KAAa;AACpB,MAAA,IAAI,CAAC,OAAA,EAAS;AACZ,QAAA,OAAO,CAAC,GAAG,SAAA,EAAW,GAAG,KAAK,CAAA;AAAA,MAChC;AAEA,MAAA,MAAM,cAAA,GAAiB,UAAU,SAAA,CAAU,MAAA;AAC3C,MAAA,IAAI,kBAAkB,CAAA,EAAG;AACvB,QAAA,QAAQ,gBAAA;AAAkB,UACxB,KAAK,OAAA;AACH,YAAA,MAAM,IAAI,MAAM,eAAe,CAAA;AAAA,UACjC,KAAK,OAAA;AACH,YAAA,MAAMM,WAAAA,GAAa,KAAA,CAAM,KAAA,CAAM,CAAC,OAAO,CAAA;AACvC,YAAA,OAAO,CAAC,GAAG,SAAA,CAAU,KAAA,CAAM,MAAM,MAAM,CAAA,EAAG,GAAGA,WAAU,CAAA;AAAA,UACzD,KAAK,MAAA;AAAA,UACL;AACE,YAAA,OAAO,SAAA;AAAA;AACX,MACF;AAEA,MAAA,MAAM,UAAA,GAAa,KAAA,CAAM,KAAA,CAAM,CAAA,EAAG,cAAc,CAAA;AAChD,MAAA,OAAO,CAAC,GAAG,SAAA,EAAW,GAAG,UAAU,CAAA;AAAA,IACrC,CAAC,CAAA;AAAA,EACH,CAAA,EAAG,CAAC,OAAA,EAAS,gBAAgB,CAAC,CAAA;AAG9B,EAAA,MAAM,OAAA,GAAUN,kBAAY,MAAqB;AAC/C,IAAA,IAAI,YAAA;AACJ,IAAA,QAAA,CAAS,CAAA,SAAA,KAAa;AACpB,MAAA,IAAI,SAAA,CAAU,MAAA,KAAW,CAAA,EAAG,OAAO,SAAA;AACnC,MAAA,YAAA,GAAe,UAAU,CAAC,CAAA;AAC1B,MAAA,OAAO,SAAA,CAAU,MAAM,CAAC,CAAA;AAAA,IAC1B,CAAC,CAAA;AACD,IAAA,OAAO,YAAA;AAAA,EACT,CAAA,EAAG,EAAE,CAAA;AAGL,EAAA,MAAM,IAAA,GAAOA,kBAAY,MAAqB;AAC5C,IAAA,OAAO,MAAM,CAAC,CAAA;AAAA,EAChB,CAAA,EAAG,CAAC,KAAK,CAAC,CAAA;AAGV,EAAA,MAAM,QAAA,GAAWA,kBAAY,MAAqB;AAChD,IAAA,OAAO,KAAA,CAAM,KAAA,CAAM,MAAA,GAAS,CAAC,CAAA;AAAA,EAC/B,CAAA,EAAG,CAAC,KAAK,CAAC,CAAA;AAGV,EAAA,MAAM,KAAA,GAAQA,kBAAY,MAAM;AAC9B,IAAA,QAAA,CAAS,EAAE,CAAA;AAAA,EACb,CAAA,EAAG,EAAE,CAAA;AAGL,EAAA,MAAM,OAAA,GAAUA,kBAAY,MAAe;AACzC,IAAA,OAAO,MAAM,MAAA,KAAW,CAAA;AAAA,EAC1B,CAAA,EAAG,CAAC,KAAK,CAAC,CAAA;AAGV,EAAA,MAAM,IAAA,GAAOA,kBAAY,MAAc;AACrC,IAAA,OAAO,KAAA,CAAM,MAAA;AAAA,EACf,CAAA,EAAG,CAAC,KAAK,CAAC,CAAA;AAGV,EAAA,MAAM,MAAA,GAASA,kBAAY,MAAe;AACxC,IAAA,OAAO,OAAA,GAAU,KAAA,CAAM,MAAA,IAAU,OAAA,GAAU,KAAA;AAAA,EAC7C,CAAA,EAAG,CAAC,KAAA,EAAO,OAAO,CAAC,CAAA;AAGnB,EAAA,MAAM,WAAA,GAAcO,cAAQ,MAAM;AAChC,IAAA,OAAO,IAAA,CAAK,UAAU,KAAK,CAAA;AAAA,EAC7B,CAAA,EAAG,CAAC,KAAK,CAAC,CAAA;AAEV,EAAA,OAAO;AAAA,IACL,KAAA;AAAA,IACA,OAAA;AAAA,IACA,WAAA;AAAA,IACA,OAAA;AAAA,IACA,IAAA;AAAA,IACA,QAAA;AAAA,IACA,KAAA;AAAA,IACA,OAAA;AAAA,IACA,IAAA;AAAA,IACA,MAAA;AAAA,IACA,WAAA;AAAA,IACA,MAAM,MAAA,EAAO;AAAA,IACb,QAAQ,KAAA,CAAM;AAAA,GAChB;AACF;;AClHO,MAAM,UAAA,GAAa,CACxB,QAAA,EACA,OAAA,KACqB;AACrB,EAAA,MAAM;AAAA,IACJ,QAAA;AAAA,IACA,SAAA,GAAY,KAAA;AAAA,IACZ,OAAA,GAAU,IAAA;AAAA,IACV,UAAA,GAAa,EAAA;AAAA,IACb,OAAA;AAAA,IACA;AAAA,GACF,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAIR,eAAS,KAAK,CAAA;AAChD,EAAA,MAAM,CAAC,UAAA,EAAY,aAAa,CAAA,GAAIA,eAAS,CAAC,CAAA;AAC9C,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIA,eAAuB,IAAI,CAAA;AACrD,EAAA,MAAM,CAAC,IAAA,EAAM,OAAO,CAAA,GAAIA,eAAc,IAAI,CAAA;AAE1C,EAAA,MAAM,WAAA,GAAcE,aAA8B,IAAI,CAAA;AACtD,EAAA,MAAM,WAAA,GAAcA,aAAO,QAAQ,CAAA;AACnC,EAAA,MAAM,aAAaA,YAAA,CAAO,EAAE,UAAA,EAAY,OAAA,EAAS,WAAW,CAAA;AAC5D,EAAA,MAAM,YAAA,GAAeA,aAAO,KAAK,CAAA;AAGjC,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,WAAA,CAAY,OAAA,GAAU,QAAA;AACtB,IAAA,UAAA,CAAW,OAAA,GAAU,EAAE,UAAA,EAAY,OAAA,EAAS,SAAA,EAAU;AAAA,EACxD,GAAG,CAAC,QAAA,EAAU,UAAA,EAAY,OAAA,EAAS,SAAS,CAAC,CAAA;AAG7C,EAAA,MAAM,eAAA,GAAkBF,kBAAY,YAAY;AAC9C,IAAA,IAAI,CAAC,aAAa,OAAA,EAAS;AAE3B,IAAA,IAAI;AACF,MAAA,QAAA,CAAS,IAAI,CAAA;AACb,MAAA,MAAM,MAAA,GAAS,MAAM,WAAA,CAAY,OAAA,EAAQ;AACzC,MAAA,OAAA,CAAQ,MAAM,CAAA;AACd,MAAA,aAAA,CAAc,CAAC,CAAA;AACf,MAAA,UAAA,CAAW,OAAA,CAAQ,YAAY,MAAM,CAAA;AAAA,IACvC,SAAS,GAAA,EAAK;AACZ,MAAA,MAAMQ,MAAAA,GAAQ,eAAe,KAAA,GAAQ,GAAA,GAAM,IAAI,KAAA,CAAM,MAAA,CAAO,GAAG,CAAC,CAAA;AAChE,MAAA,QAAA,CAASA,MAAK,CAAA;AACd,MAAA,aAAA,CAAc,CAAA,IAAA,KAAQ;AACpB,QAAA,MAAM,WAAW,IAAA,GAAO,CAAA;AAExB,QAAA,IAAI,WAAW,OAAA,CAAQ,UAAA,GAAa,KAAK,QAAA,IAAY,UAAA,CAAW,QAAQ,UAAA,EAAY;AAElF,UAAA,IAAI,YAAY,OAAA,EAAS;AACvB,YAAA,aAAA,CAAc,YAAY,OAAO,CAAA;AACjC,YAAA,WAAA,CAAY,OAAA,GAAU,IAAA;AAAA,UACxB;AACA,UAAA,YAAA,CAAa,KAAK,CAAA;AAClB,UAAA,YAAA,CAAa,OAAA,GAAU,KAAA;AAAA,QACzB;AACA,QAAA,OAAO,QAAA;AAAA,MACT,CAAC,CAAA;AACD,MAAA,UAAA,CAAW,OAAA,CAAQ,UAAUA,MAAK,CAAA;AAAA,IACpC;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAGL,EAAA,MAAM,IAAA,GAAOR,kBAAY,MAAM;AAC7B,IAAA,IAAI,YAAY,OAAA,EAAS;AACvB,MAAA,aAAA,CAAc,YAAY,OAAO,CAAA;AACjC,MAAA,WAAA,CAAY,OAAA,GAAU,IAAA;AAAA,IACxB;AACA,IAAA,YAAA,CAAa,KAAK,CAAA;AAClB,IAAA,YAAA,CAAa,OAAA,GAAU,KAAA;AAAA,EACzB,CAAA,EAAG,EAAE,CAAA;AAGL,EAAA,MAAM,KAAA,GAAQA,kBAAY,MAAM;AAC9B,IAAA,IAAI,aAAa,OAAA,EAAS;AAE1B,IAAA,YAAA,CAAa,IAAI,CAAA;AACjB,IAAA,YAAA,CAAa,OAAA,GAAU,IAAA;AACvB,IAAA,aAAA,CAAc,CAAC,CAAA;AACf,IAAA,QAAA,CAAS,IAAI,CAAA;AAGb,IAAA,eAAA,EAAgB;AAGhB,IAAA,WAAA,CAAY,OAAA,GAAU,YAAY,MAAM;AACtC,MAAA,eAAA,EAAgB;AAAA,IAClB,GAAG,QAAQ,CAAA;AAAA,EACb,CAAA,EAAG,CAAC,QAAA,EAAU,eAAe,CAAC,CAAA;AAG9B,EAAA,MAAM,OAAA,GAAUA,kBAAY,MAAM;AAChC,IAAA,IAAA,EAAK;AACL,IAAA,UAAA,CAAW,MAAM,KAAA,EAAM,EAAG,CAAC,CAAA;AAAA,EAC7B,CAAA,EAAG,CAAC,IAAA,EAAM,KAAK,CAAC,CAAA;AAGhB,EAAAE,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,aAAa,OAAA,EAAS;AACxB,MAAA,KAAA,EAAM;AAAA,IACR;AAEA,IAAA,OAAO,MAAM;AACX,MAAA,IAAI,YAAY,OAAA,EAAS;AACvB,QAAA,aAAA,CAAc,YAAY,OAAO,CAAA;AAAA,MACnC;AAAA,IACF,CAAA;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAGL,EAAAA,eAAA,CAAU,MAAM;AACd,IAAA,OAAO,MAAM;AACX,MAAA,IAAI,YAAY,OAAA,EAAS;AACvB,QAAA,aAAA,CAAc,YAAY,OAAO,CAAA;AAAA,MACnC;AAAA,IACF,CAAA;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,OAAO;AAAA,IACL,SAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,OAAA;AAAA,IACA,UAAA;AAAA,IACA,KAAA;AAAA,IACA;AAAA,GACF;AACF;;AC3HO,MAAM,QAAA,GAAW,CAAC,OAAA,GAA2B,EAAC,KAAsB;AACzE,EAAA,MAAM;AAAA,IACJ,OAAA,GAAU,IAAA;AAAA,IACV,MAAA,GAAS,OAAO,MAAA,KAAW,WAAA,GAAc,MAAA,GAAS,IAAA;AAAA,IAClD,WAAA;AAAA,IACA,YAAA;AAAA,IACA;AAAA,GACF,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAIH,cAAA,CAAwB;AAAA,IACtD,CAAA,EAAG,CAAA;AAAA,IACH,CAAA,EAAG,CAAA;AAAA,IACH,KAAA,EAAO,CAAA;AAAA,IACP,KAAA,EAAO,CAAA;AAAA,IACP,OAAA,EAAS,CAAA;AAAA,IACT,OAAA,EAAS,CAAA;AAAA,IACT,OAAA,EAAS,CAAA;AAAA,IACT,OAAA,EAAS;AAAA,GACV,CAAA;AAED,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAIA,eAAS,KAAK,CAAA;AAC9C,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAIA,eAAS,KAAK,CAAA;AAE9C,EAAA,MAAM,mBAAA,GAAsBC,iBAAA,CAAY,CAAC,KAAA,KAAiB;AACxD,IAAA,MAAM,UAAA,GAAa,KAAA;AACnB,IAAA,MAAM,WAAA,GAA6B;AAAA,MACjC,GAAG,UAAA,CAAW,OAAA;AAAA,MACd,GAAG,UAAA,CAAW,OAAA;AAAA,MACd,OAAO,UAAA,CAAW,KAAA;AAAA,MAClB,OAAO,UAAA,CAAW,KAAA;AAAA,MAClB,SAAS,UAAA,CAAW,OAAA;AAAA,MACpB,SAAS,UAAA,CAAW,OAAA;AAAA,MACpB,SAAS,UAAA,CAAW,OAAA;AAAA,MACpB,SAAS,UAAA,CAAW;AAAA,KACtB;AAEA,IAAA,WAAA,CAAY,WAAW,CAAA;AACvB,IAAA,WAAA,CAAY,IAAI,CAAA;AAChB,IAAA,WAAA,GAAc,WAAW,CAAA;AAGzB,IAAA,UAAA,CAAW,MAAM,WAAA,CAAY,KAAK,CAAA,EAAG,GAAG,CAAA;AAAA,EAC1C,CAAA,EAAG,CAAC,WAAW,CAAC,CAAA;AAEhB,EAAA,MAAM,gBAAA,GAAmBA,iBAAA,CAAY,CAAC,KAAA,KAAiB;AACrD,IAAA,MAAM,UAAA,GAAa,KAAA;AACnB,IAAA,WAAA,CAAY,IAAI,CAAA;AAChB,IAAA,MAAM,WAAA,GAA6B;AAAA,MACjC,GAAG,UAAA,CAAW,OAAA;AAAA,MACd,GAAG,UAAA,CAAW,OAAA;AAAA,MACd,OAAO,UAAA,CAAW,KAAA;AAAA,MAClB,OAAO,UAAA,CAAW,KAAA;AAAA,MAClB,SAAS,UAAA,CAAW,OAAA;AAAA,MACpB,SAAS,UAAA,CAAW,OAAA;AAAA,MACpB,SAAS,UAAA,CAAW,OAAA;AAAA,MACpB,SAAS,UAAA,CAAW;AAAA,KACtB;AACA,IAAA,YAAA,GAAe,WAAW,CAAA;AAAA,EAC5B,CAAA,EAAG,CAAC,YAAY,CAAC,CAAA;AAEjB,EAAA,MAAM,gBAAA,GAAmBA,iBAAA,CAAY,CAAC,KAAA,KAAiB;AACrD,IAAA,MAAM,UAAA,GAAa,KAAA;AACnB,IAAA,WAAA,CAAY,KAAK,CAAA;AACjB,IAAA,MAAM,WAAA,GAA6B;AAAA,MACjC,GAAG,UAAA,CAAW,OAAA;AAAA,MACd,GAAG,UAAA,CAAW,OAAA;AAAA,MACd,OAAO,UAAA,CAAW,KAAA;AAAA,MAClB,OAAO,UAAA,CAAW,KAAA;AAAA,MAClB,SAAS,UAAA,CAAW,OAAA;AAAA,MACpB,SAAS,UAAA,CAAW,OAAA;AAAA,MACpB,SAAS,UAAA,CAAW,OAAA;AAAA,MACpB,SAAS,UAAA,CAAW;AAAA,KACtB;AACA,IAAA,YAAA,GAAe,WAAW,CAAA;AAAA,EAC5B,CAAA,EAAG,CAAC,YAAY,CAAC,CAAA;AAEjB,EAAA,MAAM,KAAA,GAAQA,kBAAY,MAAM;AAC9B,IAAA,WAAA,CAAY;AAAA,MACV,CAAA,EAAG,CAAA;AAAA,MACH,CAAA,EAAG,CAAA;AAAA,MACH,KAAA,EAAO,CAAA;AAAA,MACP,KAAA,EAAO,CAAA;AAAA,MACP,OAAA,EAAS,CAAA;AAAA,MACT,OAAA,EAAS,CAAA;AAAA,MACT,OAAA,EAAS,CAAA;AAAA,MACT,OAAA,EAAS;AAAA,KACV,CAAA;AACD,IAAA,WAAA,CAAY,KAAK,CAAA;AACjB,IAAA,WAAA,CAAY,KAAK,CAAA;AAAA,EACnB,CAAA,EAAG,EAAE,CAAA;AAEL,EAAAE,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,OAAA,IAAW,CAAC,MAAA,EAAQ;AAEzB,IAAA,MAAA,CAAO,gBAAA,CAAiB,aAAa,mBAAmB,CAAA;AACxD,IAAA,MAAA,CAAO,gBAAA,CAAiB,cAAc,gBAAgB,CAAA;AACtD,IAAA,MAAA,CAAO,gBAAA,CAAiB,cAAc,gBAAgB,CAAA;AAEtD,IAAA,OAAO,MAAM;AACX,MAAA,MAAA,CAAO,mBAAA,CAAoB,aAAa,mBAAmB,CAAA;AAC3D,MAAA,MAAA,CAAO,mBAAA,CAAoB,cAAc,gBAAgB,CAAA;AACzD,MAAA,MAAA,CAAO,mBAAA,CAAoB,cAAc,gBAAgB,CAAA;AAAA,IAC3D,CAAA;AAAA,EACF,GAAG,CAAC,OAAA,EAAS,QAAQ,mBAAA,EAAqB,gBAAA,EAAkB,gBAAgB,CAAC,CAAA;AAE7E,EAAA,OAAO;AAAA,IACL,QAAA;AAAA,IACA,QAAA;AAAA,IACA,QAAA;AAAA,IACA;AAAA,GACF;AACF;;AC7HO,MAAM,aAAA,GAAgB,CAC3B,OAAA,GAAgC,EAAC,KACN;AAC3B,EAAA,MAAM;AAAA,IACJ,OAAA;AAAA,IACA,MAAA;AAAA,IACA,UAAA;AAAA,IACA,OAAA,GAAU;AAAA,GACZ,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAIH,eAAS,KAAK,CAAA;AACtD,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIA,eAAuB,IAAI,CAAA;AACrD,EAAA,MAAM,UAAA,GAAaE,aAAU,IAAI,CAAA;AACjC,EAAA,MAAM,iBAAA,GAAoBA,YAAA,CAGvB,EAAE,CAAA;AAGL,EAAA,MAAM,WAAA,GAAc,OAAO,MAAA,KAAW,WAAA,IAAe,CAAC,EACpD,QAAA,CAAS,iBAAA,IACR,QAAA,CAAiB,uBAAA,IACjB,QAAA,CAAiB,oBAAA,IACjB,QAAA,CAAiB,mBAAA,CAAA;AAGpB,EAAA,MAAM,sBAAA,GAAyBD,kBAAY,MAAM;AAC/C,IAAA,MAAM,MAAA,GAAS,CAAC,EACd,QAAA,CAAS,qBACR,QAAA,CAAiB,uBAAA,IACjB,QAAA,CAAiB,oBAAA,IACjB,QAAA,CAAiB,mBAAA,CAAA;AAGpB,IAAA,eAAA,CAAgB,MAAM,CAAA;AAGtB,IAAA,IAAI,CAAC,MAAA,EAAQ;AAEX,MAAA,IAAI,WAAW,OAAA,EAAS;AACtB,QAAA,MAAM,UAAU,UAAA,CAAW,OAAA;AAC3B,QAAA,IAAI,iBAAA,CAAkB,OAAA,CAAQ,UAAA,KAAe,MAAA,EAAW;AACtD,UAAA,OAAA,CAAQ,KAAA,CAAM,UAAA,GAAa,iBAAA,CAAkB,OAAA,CAAQ,UAAA;AAAA,QACvD,CAAA,MAAO;AACL,UAAA,OAAA,CAAQ,KAAA,CAAM,eAAe,YAAY,CAAA;AAAA,QAC3C;AAAA,MACF;AAGA,MAAA,IAAI,iBAAA,CAAkB,OAAA,CAAQ,QAAA,KAAa,MAAA,EAAW;AACpD,QAAA,QAAA,CAAS,IAAA,CAAK,KAAA,CAAM,QAAA,GAAW,iBAAA,CAAkB,OAAA,CAAQ,QAAA;AAAA,MAC3D,CAAA,MAAO;AACL,QAAA,QAAA,CAAS,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe,UAAU,CAAA;AAAA,MAC/C;AAAA,IACF;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAGL,EAAA,MAAM,eAAA,GAAkBA,kBAAY,YAA2B;AAC7D,IAAA,IAAI,CAAC,OAAA,IAAW,CAAC,WAAA,IAAe,CAAC,WAAW,OAAA,EAAS;AACnD,MAAA,MAAM,IAAI,MAAM,mDAAmD,CAAA;AAAA,IACrE;AAEA,IAAA,IAAI;AACF,MAAA,QAAA,CAAS,IAAI,CAAA;AACb,MAAA,MAAM,UAAU,UAAA,CAAW,OAAA;AAG3B,MAAA,iBAAA,CAAkB,OAAA,GAAU;AAAA,QAC1B,UAAA,EAAY,OAAA,CAAQ,KAAA,CAAM,UAAA,IAAc,EAAA;AAAA,QACxC,QAAA,EAAU,QAAA,CAAS,IAAA,CAAK,KAAA,CAAM,QAAA,IAAY;AAAA,OAC5C;AAGA,MAAA,IAAI,UAAA,EAAY;AACd,QAAA,OAAA,CAAQ,MAAM,UAAA,GAAa,UAAA;AAAA,MAC7B;AAGA,MAAA,QAAA,CAAS,IAAA,CAAK,MAAM,QAAA,GAAW,QAAA;AAG/B,MAAA,IAAI,QAAQ,iBAAA,EAAmB;AAC7B,QAAA,MAAM,QAAQ,iBAAA,EAAkB;AAAA,MAClC,CAAA,MAAA,IAAY,QAAgB,uBAAA,EAAyB;AACnD,QAAA,MAAO,QAAgB,uBAAA,EAAwB;AAAA,MACjD,CAAA,MAAA,IAAY,QAAgB,oBAAA,EAAsB;AAChD,QAAA,MAAO,QAAgB,oBAAA,EAAqB;AAAA,MAC9C,CAAA,MAAA,IAAY,QAAgB,mBAAA,EAAqB;AAC/C,QAAA,MAAO,QAAgB,mBAAA,EAAoB;AAAA,MAC7C,CAAA,MAAO;AACL,QAAA,MAAM,IAAI,MAAM,8BAA8B,CAAA;AAAA,MAChD;AAEA,MAAA,OAAA,IAAU;AAAA,IACZ,SAAS,GAAA,EAAK;AACZ,MAAA,MAAMQ,MAAAA,GAAQ,eAAe,KAAA,GAAQ,GAAA,GAAM,IAAI,KAAA,CAAM,MAAA,CAAO,GAAG,CAAC,CAAA;AAChE,MAAA,QAAA,CAASA,MAAK,CAAA;AACd,MAAA,MAAMA,MAAAA;AAAA,IACR;AAAA,EACF,GAAG,CAAC,OAAA,EAAS,WAAA,EAAa,UAAA,EAAY,OAAO,CAAC,CAAA;AAG9C,EAAA,MAAM,cAAA,GAAiBR,kBAAY,YAA2B;AAC5D,IAAA,IAAI,CAAC,OAAA,IAAW,CAAC,WAAA,EAAa;AAC5B,MAAA,MAAM,IAAI,MAAM,0BAA0B,CAAA;AAAA,IAC5C;AAEA,IAAA,IAAI;AACF,MAAA,QAAA,CAAS,IAAI,CAAA;AAGb,MAAA,IAAI,SAAS,cAAA,EAAgB;AAC3B,QAAA,MAAM,SAAS,cAAA,EAAe;AAAA,MAChC,CAAA,MAAA,IAAY,SAAiB,oBAAA,EAAsB;AACjD,QAAA,MAAO,SAAiB,oBAAA,EAAqB;AAAA,MAC/C,CAAA,MAAA,IAAY,SAAiB,mBAAA,EAAqB;AAChD,QAAA,MAAO,SAAiB,mBAAA,EAAoB;AAAA,MAC9C,CAAA,MAAA,IAAY,SAAiB,gBAAA,EAAkB;AAC7C,QAAA,MAAO,SAAiB,gBAAA,EAAiB;AAAA,MAC3C,CAAA,MAAO;AACL,QAAA,MAAM,IAAI,MAAM,mCAAmC,CAAA;AAAA,MACrD;AAEA,MAAA,MAAA,IAAS;AAAA,IACX,SAAS,GAAA,EAAK;AACZ,MAAA,MAAMQ,MAAAA,GAAQ,eAAe,KAAA,GAAQ,GAAA,GAAM,IAAI,KAAA,CAAM,MAAA,CAAO,GAAG,CAAC,CAAA;AAChE,MAAA,QAAA,CAASA,MAAK,CAAA;AACd,MAAA,MAAMA,MAAAA;AAAA,IACR;AAAA,EACF,CAAA,EAAG,CAAC,OAAA,EAAS,WAAA,EAAa,MAAM,CAAC,CAAA;AAGjC,EAAA,MAAM,gBAAA,GAAmBR,kBAAY,YAA2B;AAC9D,IAAA,IAAI,YAAA,EAAc;AAChB,MAAA,MAAM,cAAA,EAAe;AAAA,IACvB,CAAA,MAAO;AACL,MAAA,MAAM,eAAA,EAAgB;AAAA,IACxB;AAAA,EACF,CAAA,EAAG,CAAC,YAAA,EAAc,eAAA,EAAiB,cAAc,CAAC,CAAA;AAGlD,EAAAE,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,OAAA,IAAW,CAAC,WAAA,EAAa;AAE9B,IAAA,QAAA,CAAS,gBAAA,CAAiB,oBAAoB,sBAAsB,CAAA;AACpE,IAAA,QAAA,CAAS,gBAAA,CAAiB,0BAA0B,sBAAsB,CAAA;AAC1E,IAAA,QAAA,CAAS,gBAAA,CAAiB,uBAAuB,sBAAsB,CAAA;AACvE,IAAA,QAAA,CAAS,gBAAA,CAAiB,sBAAsB,sBAAsB,CAAA;AAEtE,IAAA,OAAO,MAAM;AACX,MAAA,QAAA,CAAS,mBAAA,CAAoB,oBAAoB,sBAAsB,CAAA;AACvE,MAAA,QAAA,CAAS,mBAAA,CAAoB,0BAA0B,sBAAsB,CAAA;AAC7E,MAAA,QAAA,CAAS,mBAAA,CAAoB,uBAAuB,sBAAsB,CAAA;AAC1E,MAAA,QAAA,CAAS,mBAAA,CAAoB,sBAAsB,sBAAsB,CAAA;AAAA,IAC3E,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,OAAA,EAAS,WAAA,EAAa,sBAAsB,CAAC,CAAA;AAEjD,EAAA,OAAO;AAAA,IACL,UAAA;AAAA,IACA,YAAA;AAAA,IACA,eAAA;AAAA,IACA,cAAA;AAAA,IACA,gBAAA;AAAA,IACA,WAAA;AAAA,IACA;AAAA,GACF;AACF;;AC5NA,MAAM,eAAA,uBAAsB,GAAA,EAA2B;AAwDhD,MAAM,WAAA,GAAc,CACzB,SAAA,EACA,OAAA,GAA8B,EAAC,KACT;AACtB,EAAA,MAAM;AAAA,IACJ,WAAA,GAAc,IAAA;AAAA,IACd,QAAA,GAAW;AAAA,GACb,GAAI,OAAA;AAEJ,EAAA,MAAM,SAAA,GAAYD,aAAO,QAAQ,CAAA;AACjC,EAAA,MAAM,WAAA,GAAcA,YAAA,iBAAsB,IAAI,GAAA,EAAK,CAAA;AAGnD,EAAA,MAAM,iBAAA,GAAoBD,kBAAY,MAAM;AAC1C,IAAA,IAAI,CAAC,SAAA,CAAU,OAAA,CAAQ,GAAA,CAAI,SAAS,CAAA,EAAG;AACrC,MAAA,SAAA,CAAU,OAAA,CAAQ,GAAA,CAAI,SAAA,kBAAW,IAAI,KAAK,CAAA;AAAA,IAC5C;AACA,IAAA,OAAO,SAAA,CAAU,OAAA,CAAQ,GAAA,CAAI,SAAS,CAAA;AAAA,EACxC,CAAA,EAAG,CAAC,SAAS,CAAC,CAAA;AAGd,EAAA,MAAM,EAAA,GAAKA,iBAAA,CAAY,CAAC,QAAA,KAAuB;AAC7C,IAAA,MAAM,YAAY,iBAAA,EAAkB;AACpC,IAAA,SAAA,CAAU,IAAI,QAAQ,CAAA;AACtB,IAAA,WAAA,CAAY,OAAA,CAAQ,IAAI,QAAQ,CAAA;AAGhC,IAAA,OAAO,MAAM;AACX,MAAA,SAAA,CAAU,OAAO,QAAQ,CAAA;AACzB,MAAA,WAAA,CAAY,OAAA,CAAQ,OAAO,QAAQ,CAAA;AAAA,IACrC,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,iBAAiB,CAAC,CAAA;AAGtB,EAAA,MAAM,IAAA,GAAOA,iBAAA,CAAY,CAAC,QAAA,KAAuB;AAC/C,IAAA,MAAM,YAAA,GAAe,CAAC,IAAA,KAAc;AAClC,MAAA,QAAA,CAAS,IAAI,CAAA;AACb,MAAA,GAAA,CAAI,YAAY,CAAA;AAAA,IAClB,CAAA;AACA,IAAA,OAAO,GAAG,YAAY,CAAA;AAAA,EACxB,CAAA,EAAG,CAAC,EAAE,CAAC,CAAA;AAGP,EAAA,MAAM,IAAA,GAAOA,iBAAA,CAAY,CAAC,IAAA,KAAe;AACvC,IAAA,MAAM,YAAY,iBAAA,EAAkB;AACpC,IAAA,SAAA,CAAU,OAAA,CAAQ,CAAC,QAAA,KAAa;AAC9B,MAAA,IAAI;AACF,QAAA,QAAA,CAAS,IAAI,CAAA;AAAA,MACf,SAAS,KAAA,EAAO;AACd,QAAA,OAAA,CAAQ,KAAA,CAAM,4BAA4B,KAAK,CAAA;AAAA,MACjD;AAAA,IACF,CAAC,CAAA;AAAA,EACH,CAAA,EAAG,CAAC,iBAAiB,CAAC,CAAA;AAGtB,EAAA,MAAM,GAAA,GAAMA,iBAAA,CAAY,CAAC,QAAA,KAAuB;AAC9C,IAAA,MAAM,YAAY,iBAAA,EAAkB;AACpC,IAAA,SAAA,CAAU,OAAO,QAAQ,CAAA;AACzB,IAAA,WAAA,CAAY,OAAA,CAAQ,OAAO,QAAQ,CAAA;AAAA,EACrC,CAAA,EAAG,CAAC,iBAAiB,CAAC,CAAA;AAGtB,EAAA,MAAM,KAAA,GAAQA,kBAAY,MAAM;AAC9B,IAAA,MAAM,YAAY,iBAAA,EAAkB;AACpC,IAAA,SAAA,CAAU,KAAA,EAAM;AAChB,IAAA,WAAA,CAAY,QAAQ,KAAA,EAAM;AAAA,EAC5B,CAAA,EAAG,CAAC,iBAAiB,CAAC,CAAA;AAGtB,EAAA,MAAM,aAAA,GAAgBA,kBAAY,MAAM;AACtC,IAAA,MAAM,YAAY,iBAAA,EAAkB;AACpC,IAAA,OAAO,SAAA,CAAU,IAAA;AAAA,EACnB,CAAA,EAAG,CAAC,iBAAiB,CAAC,CAAA;AAGtB,EAAAE,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,WAAA,EAAa;AAElB,IAAA,OAAO,MAAM;AACX,MAAA,MAAM,YAAY,iBAAA,EAAkB;AACpC,MAAA,WAAA,CAAY,OAAA,CAAQ,OAAA,CAAQ,CAAC,QAAA,KAAa;AACxC,QAAA,SAAA,CAAU,OAAO,QAAQ,CAAA;AAAA,MAC3B,CAAC,CAAA;AACD,MAAA,WAAA,CAAY,QAAQ,KAAA,EAAM;AAAA,IAC5B,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,WAAA,EAAa,iBAAiB,CAAC,CAAA;AAEnC,EAAA,OAAO;AAAA,IACL,EAAA;AAAA,IACA,IAAA;AAAA,IACA,IAAA;AAAA,IACA,GAAA;AAAA,IACA,KAAA;AAAA,IACA;AAAA,GACF;AACF;;AC9EO,MAAM,cAAA,GAAiB,CAC5B,OAAA,GAAiC,EAAC,KACN;AAC5B,EAAA,MAAM;AAAA,IACJ,OAAA,GAAU,KAAA;AAAA,IACV,aAAA,GAAgB,KAAA;AAAA,IAChB,cAAA,GAAiB,KAAA;AAAA,IACjB,YAAA;AAAA,IACA,UAAA,GAAa;AAAA,GACf,GAAI,OAAA;AAEJ,EAAA,MAAM,GAAA,GAAMD,aAAU,IAAI,CAAA;AAC1B,EAAA,MAAM,CAAC,IAAA,EAAM,OAAO,CAAA,GAAIF,cAAA,CAAsB;AAAA,IAC5C,KAAA,EAAO,CAAA;AAAA,IACP,MAAA,EAAQ,CAAA;AAAA,IACR,YAAA,EAAc,CAAA;AAAA,IACd,aAAA,EAAe,CAAA;AAAA,IACf,WAAA,EAAa,CAAA;AAAA,IACb,YAAA,EAAc,CAAA;AAAA,IACd,YAAA,EAAc,CAAA;AAAA,IACd,aAAA,EAAe;AAAA,GAChB,CAAA;AAED,EAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAIA,eAAS,KAAK,CAAA;AACpD,EAAA,MAAM,WAAA,GAAcE,aAA8B,IAAI,CAAA;AACtD,EAAA,MAAM,gBAAA,GAAmBA,aAA8B,IAAI,CAAA;AAC3D,EAAA,MAAM,UAAA,GAAaA,YAAA,CAAO,EAAE,aAAA,EAAe,gBAAgB,CAAA;AAG3D,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,UAAA,CAAW,OAAA,GAAU,EAAE,aAAA,EAAe,cAAA,EAAe;AAAA,EACvD,CAAA,EAAG,CAAC,aAAA,EAAe,cAAc,CAAC,CAAA;AAGlC,EAAA,MAAM,aAAA,GAAgBF,iBAAA,CAAY,CAAC,OAAA,KAA4B;AAC7D,IAAA,MAAM,IAAA,GAAO,QAAQ,qBAAA,EAAsB;AAC3C,IAAA,MAAM,aAAA,GAAgB,MAAA,CAAO,gBAAA,CAAiB,OAAO,CAAA;AAErD,IAAA,MAAM,UAAA,GAAa,UAAA,CAAW,aAAA,CAAc,eAAe,CAAA,IAAK,CAAA;AAChE,IAAA,MAAM,WAAA,GAAc,UAAA,CAAW,aAAA,CAAc,gBAAgB,CAAA,IAAK,CAAA;AAClE,IAAA,MAAM,SAAA,GAAY,UAAA,CAAW,aAAA,CAAc,cAAc,CAAA,IAAK,CAAA;AAC9D,IAAA,MAAM,YAAA,GAAe,UAAA,CAAW,aAAA,CAAc,iBAAiB,CAAA,IAAK,CAAA;AAEpE,IAAA,MAAM,WAAA,GAAc,UAAA,CAAW,aAAA,CAAc,WAAW,CAAA,IAAK,CAAA;AAC7D,IAAA,MAAM,YAAA,GAAe,UAAA,CAAW,aAAA,CAAc,YAAY,CAAA,IAAK,CAAA;AAC/D,IAAA,MAAM,UAAA,GAAa,UAAA,CAAW,aAAA,CAAc,UAAU,CAAA,IAAK,CAAA;AAC3D,IAAA,MAAM,aAAA,GAAgB,UAAA,CAAW,aAAA,CAAc,aAAa,CAAA,IAAK,CAAA;AAEjE,IAAA,MAAM,cAAc,UAAA,GAAa,WAAA;AACjC,IAAA,MAAM,eAAe,SAAA,GAAY,YAAA;AACjC,IAAA,MAAM,eAAe,WAAA,GAAc,YAAA;AACnC,IAAA,MAAM,gBAAgB,UAAA,GAAa,aAAA;AAEnC,IAAA,MAAM,YAAA,GAAe,IAAA,CAAK,KAAA,GAAQ,WAAA,GAAc,YAAA;AAChD,IAAA,MAAM,aAAA,GAAgB,IAAA,CAAK,MAAA,GAAS,YAAA,GAAe,aAAA;AAEnD,IAAA,OAAO;AAAA,MACL,OAAO,UAAA,CAAW,OAAA,CAAQ,aAAA,GAAgB,IAAA,CAAK,QAAQ,YAAA,GAAe,YAAA;AAAA,MACtE,QAAQ,UAAA,CAAW,OAAA,CAAQ,aAAA,GAAgB,IAAA,CAAK,SAAS,aAAA,GAAgB,aAAA;AAAA,MACzE,YAAA;AAAA,MACA,aAAA;AAAA,MACA,WAAA;AAAA,MACA,YAAA;AAAA,MACA,YAAA;AAAA,MACA;AAAA,KACF;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAGL,EAAA,MAAM,UAAA,GAAaA,kBAAY,MAAM;AACnC,IAAA,MAAM,UAAU,GAAA,CAAI,OAAA;AACpB,IAAA,IAAI,CAAC,OAAA,EAAS;AAEd,IAAA,MAAM,OAAA,GAAU,cAAc,OAAO,CAAA;AACrC,IAAA,OAAA,CAAQ,OAAO,CAAA;AACf,IAAA,YAAA,GAAe,OAAO,CAAA;AAAA,EACxB,CAAA,EAAG,CAAC,aAAA,EAAe,YAAY,CAAC,CAAA;AAGhC,EAAA,MAAM,mBAAA,GAAsBA,kBAAY,MAAM;AAC5C,IAAA,IAAI,iBAAiB,OAAA,EAAS;AAC5B,MAAA,YAAA,CAAa,iBAAiB,OAAO,CAAA;AAAA,IACvC;AAEA,IAAA,IAAI,aAAa,CAAA,EAAG;AAClB,MAAA,gBAAA,CAAiB,OAAA,GAAU,UAAA,CAAW,UAAA,EAAY,UAAU,CAAA;AAAA,IAC9D,CAAA,MAAO;AACL,MAAA,UAAA,EAAW;AAAA,IACb;AAAA,EACF,CAAA,EAAG,CAAC,UAAA,EAAY,UAAU,CAAC,CAAA;AAG3B,EAAA,MAAM,cAAA,GAAiBA,kBAAY,MAAM;AACvC,IAAA,MAAM,UAAU,GAAA,CAAI,OAAA;AACpB,IAAA,IAAI,CAAC,WAAW,WAAA,EAAa;AAG7B,IAAA,UAAA,EAAW;AAGX,IAAA,IAAI,OAAO,mBAAmB,WAAA,EAAa;AACzC,MAAA,WAAA,CAAY,OAAA,GAAU,IAAI,cAAA,CAAe,MAAM;AAC7C,QAAA,mBAAA,EAAoB;AAAA,MACtB,CAAC,CAAA;AAED,MAAA,WAAA,CAAY,OAAA,CAAQ,QAAQ,OAAO,CAAA;AACnC,MAAA,cAAA,CAAe,IAAI,CAAA;AAAA,IACrB;AAAA,EACF,CAAA,EAAG,CAAC,WAAA,EAAa,UAAA,EAAY,mBAAmB,CAAC,CAAA;AAGjD,EAAA,MAAM,aAAA,GAAgBA,kBAAY,MAAM;AACtC,IAAA,IAAI,YAAY,OAAA,EAAS;AACvB,MAAA,WAAA,CAAY,QAAQ,UAAA,EAAW;AAC/B,MAAA,WAAA,CAAY,OAAA,GAAU,IAAA;AAAA,IACxB;AACA,IAAA,cAAA,CAAe,KAAK,CAAA;AAEpB,IAAA,IAAI,iBAAiB,OAAA,EAAS;AAC5B,MAAA,YAAA,CAAa,iBAAiB,OAAO,CAAA;AACrC,MAAA,gBAAA,CAAiB,OAAA,GAAU,IAAA;AAAA,IAC7B;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAGL,EAAAE,eAAA,CAAU,MAAM;AACd,IAAA,OAAO,MAAM;AACX,MAAA,IAAI,YAAY,OAAA,EAAS;AACvB,QAAA,WAAA,CAAY,QAAQ,UAAA,EAAW;AAAA,MACjC;AACA,MAAA,IAAI,iBAAiB,OAAA,EAAS;AAC5B,QAAA,YAAA,CAAa,iBAAiB,OAAO,CAAA;AAAA,MACvC;AAAA,IACF,CAAA;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,OAAO;AAAA,IACL,GAAA;AAAA,IACA,IAAA;AAAA,IACA,WAAA;AAAA,IACA,cAAA;AAAA,IACA,aAAA;AAAA,IACA;AAAA,GACF;AACF;;ACpJO,MAAM,YAAA,GAAe,CAAC,OAAA,GAA+B,EAAC,KAA0B;AACrF,EAAA,MAAM;AAAA,IACJ,WAAA,GAAc,IAAA;AAAA,IACd,cAAA,GAAiB,4CAAA;AAAA,IACjB,YAAA,GAAe,0BAAA;AAAA,IACf,SAAA;AAAA,IACA,OAAA;AAAA,IACA,OAAA,GAAU;AAAA,GACZ,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAIH,eAAS,KAAK,CAAA;AAChD,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAIA,eAAS,KAAK,CAAA;AAC9C,EAAA,MAAM,CAAC,UAAA,EAAY,aAAa,CAAA,GAAIA,eAAwB,IAAI,CAAA;AAChE,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIA,eAAuB,IAAI,CAAA;AAGrD,EAAA,MAAM,kBAAA,GACJ,OAAO,SAAA,KAAc,WAAA,IACrB,UAAU,SAAA,IACV,OAAO,SAAA,CAAU,SAAA,CAAU,SAAA,KAAc,UAAA;AAG3C,EAAA,MAAM,kBAAkBC,iBAAA,CAAY,OAClC,IAAA,EACA,WAAA,GAAmC,EAAC,KAClB;AAClB,IAAA,MAAM;AAAA,MACJ,aAAa,mBAAA,GAAsB,WAAA;AAAA,MACnC,gBAAgB,sBAAA,GAAyB,cAAA;AAAA,MACzC,cAAc,oBAAA,GAAuB,YAAA;AAAA,MACrC,WAAW,iBAAA,GAAoB,SAAA;AAAA,MAC/B,SAAS,eAAA,GAAkB,OAAA;AAAA,MAC3B,SAAS,eAAA,GAAkB;AAAA,KAC7B,GAAI,WAAA;AAEJ,IAAA,IAAI;AACF,MAAA,YAAA,CAAa,IAAI,CAAA;AACjB,MAAA,QAAA,CAAS,IAAI,CAAA;AACb,MAAA,WAAA,CAAY,KAAK,CAAA;AAEjB,MAAA,IAAI,cAAA,GAAiB,KAAA;AAGrB,MAAA,IAAI,kBAAA,EAAoB;AACtB,QAAA,IAAI;AACF,UAAA,MAAM,SAAA,CAAU,SAAA,CAAU,SAAA,CAAU,IAAI,CAAA;AACxC,UAAA,cAAA,GAAiB,IAAA;AAAA,QACnB,SAAS,GAAA,EAAK;AACZ,UAAA,OAAA,CAAQ,IAAA,CAAK,0CAA0C,GAAG,CAAA;AAAA,QAC5D;AAAA,MACF;AAGA,MAAA,IAAI,CAAC,cAAA,EAAgB;AAEnB,QAAA,MAAM,QAAA,GAAW,QAAA,CAAS,aAAA,CAAc,UAAU,CAAA;AAClD,QAAA,QAAA,CAAS,KAAA,GAAQ,IAAA;AACjB,QAAA,QAAA,CAAS,MAAM,QAAA,GAAW,OAAA;AAC1B,QAAA,QAAA,CAAS,MAAM,OAAA,GAAU,GAAA;AACzB,QAAA,QAAA,CAAS,MAAM,aAAA,GAAgB,MAAA;AAC/B,QAAA,QAAA,CAAS,MAAM,IAAA,GAAO,SAAA;AACtB,QAAA,QAAA,CAAS,MAAM,GAAA,GAAM,SAAA;AACrB,QAAA,QAAA,CAAS,IAAA,CAAK,YAAY,QAAQ,CAAA;AAElC,QAAA,QAAA,CAAS,MAAA,EAAO;AAChB,QAAA,QAAA,CAAS,iBAAA,CAAkB,CAAA,EAAG,QAAA,CAAS,KAAA,CAAM,MAAM,CAAA;AACnD,QAAA,MAAM,UAAA,GAAa,QAAA,CAAS,WAAA,CAAY,MAAM,CAAA;AAC9C,QAAA,QAAA,CAAS,IAAA,CAAK,YAAY,QAAQ,CAAA;AAElC,QAAA,IAAI,UAAA,EAAY;AACd,UAAA,cAAA,GAAiB,IAAA;AAAA,QACnB,CAAA,MAAO;AACL,UAAA,MAAM,IAAI,MAAM,gCAAgC,CAAA;AAAA,QAClD;AAAA,MACF;AAEA,MAAA,IAAI,CAAC,cAAA,EAAgB;AACnB,QAAA,MAAM,IAAI,MAAM,yBAAyB,CAAA;AAAA,MAC3C;AAEA,MAAA,aAAA,CAAc,IAAI,CAAA;AAClB,MAAA,WAAA,CAAY,IAAI,CAAA;AAEhB,MAAA,IAAI,mBAAA,EAAqB;AAEvB,QAAA,IAAI,cAAA,IAAkB,MAAA,IAAU,YAAA,CAAa,UAAA,KAAe,SAAA,EAAW;AACrE,UAAA,IAAI,aAAa,sBAAsB,CAAA;AAAA,QACzC,CAAA,MAAO;AACL,UAAA,OAAA,CAAQ,IAAI,sBAAsB,CAAA;AAAA,QACpC;AAAA,MACF;AAEA,MAAA,iBAAA,GAAoB,IAAI,CAAA;AAAA,IAC1B,SAAS,GAAA,EAAK;AACZ,MAAA,MAAM,SAAA,GAAY,eAAe,KAAA,GAAQ,GAAA,GAAM,IAAI,KAAA,CAAM,MAAA,CAAO,GAAG,CAAC,CAAA;AACpE,MAAA,OAAA,CAAQ,KAAA,CAAM,wBAAwB,SAAS,CAAA;AAC/C,MAAA,QAAA,CAAS,SAAS,CAAA;AAElB,MAAA,IAAI,mBAAA,EAAqB;AACvB,QAAA,IAAI,cAAA,IAAkB,MAAA,IAAU,YAAA,CAAa,UAAA,KAAe,SAAA,EAAW;AACrE,UAAA,IAAI,aAAa,oBAAoB,CAAA;AAAA,QACvC,CAAA,MAAO;AACL,UAAA,OAAA,CAAQ,MAAM,oBAAoB,CAAA;AAAA,QACpC;AAAA,MACF;AAEA,MAAA,eAAA,GAAkB,SAAS,CAAA;AAAA,IAC7B,CAAA,SAAE;AACA,MAAA,YAAA,CAAa,KAAK,CAAA;AAGlB,MAAA,UAAA,CAAW,MAAM;AACf,QAAA,WAAA,CAAY,KAAK,CAAA;AACjB,QAAA,aAAA,CAAc,IAAI,CAAA;AAAA,MACpB,GAAG,eAAe,CAAA;AAAA,IACpB;AAAA,EACF,CAAA,EAAG,CAAC,kBAAA,EAAoB,WAAA,EAAa,gBAAgB,YAAA,EAAc,SAAA,EAAW,OAAA,EAAS,OAAO,CAAC,CAAA;AAG/F,EAAA,MAAM,iBAAA,GAAoBA,kBAAY,YAA6B;AACjE,IAAA,IAAI;AACF,MAAA,QAAA,CAAS,IAAI,CAAA;AAEb,MAAA,IAAI,kBAAA,IAAsB,SAAA,CAAU,SAAA,CAAU,QAAA,EAAU;AACtD,QAAA,OAAO,MAAM,SAAA,CAAU,SAAA,CAAU,QAAA,EAAS;AAAA,MAC5C,CAAA,MAAO;AACL,QAAA,MAAM,IAAI,MAAM,kCAAkC,CAAA;AAAA,MACpD;AAAA,IACF,SAAS,GAAA,EAAK;AACZ,MAAA,MAAM,SAAA,GAAY,eAAe,KAAA,GAAQ,GAAA,GAAM,IAAI,KAAA,CAAM,MAAA,CAAO,GAAG,CAAC,CAAA;AACpE,MAAA,QAAA,CAAS,SAAS,CAAA;AAClB,MAAA,MAAM,SAAA;AAAA,IACR;AAAA,EACF,CAAA,EAAG,CAAC,kBAAkB,CAAC,CAAA;AAGvB,EAAA,MAAM,KAAA,GAAQA,kBAAY,MAAM;AAC9B,IAAA,YAAA,CAAa,KAAK,CAAA;AAClB,IAAA,WAAA,CAAY,KAAK,CAAA;AACjB,IAAA,aAAA,CAAc,IAAI,CAAA;AAClB,IAAA,QAAA,CAAS,IAAI,CAAA;AAAA,EACf,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,OAAO;AAAA,IACL,eAAA;AAAA,IACA,iBAAA;AAAA,IACA,SAAA;AAAA,IACA,QAAA;AAAA,IACA,UAAA;AAAA,IACA,KAAA;AAAA,IACA,kBAAA;AAAA,IACA;AAAA,GACF;AACF;;AC9KO,MAAM,QAAA,GAAW,CACtB,OAAA,GAA2B,EAAC,KACN;AACtB,EAAA,MAAM;AAAA,IACJ,OAAA;AAAA,IACA,OAAA;AAAA,IACA,OAAA,GAAU,IAAA;AAAA,IACV,UAAA,GAAa,CAAA;AAAA,IACb,UAAA,GAAa;AAAA,GACf,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAID,eAAS,KAAK,CAAA;AAChD,EAAA,MAAM,GAAA,GAAME,aAAU,IAAI,CAAA;AAC1B,EAAA,MAAM,aAAA,GAAgBA,aAA8B,IAAI,CAAA;AACxD,EAAA,MAAM,aAAA,GAAgBA,aAA8B,IAAI,CAAA;AAGxD,EAAA,MAAM,WAAA,GAAcD,kBAAY,MAAM;AACpC,IAAA,IAAI,cAAc,OAAA,EAAS;AACzB,MAAA,YAAA,CAAa,cAAc,OAAO,CAAA;AAClC,MAAA,aAAA,CAAc,OAAA,GAAU,IAAA;AAAA,IAC1B;AACA,IAAA,IAAI,cAAc,OAAA,EAAS;AACzB,MAAA,YAAA,CAAa,cAAc,OAAO,CAAA;AAClC,MAAA,aAAA,CAAc,OAAA,GAAU,IAAA;AAAA,IAC1B;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAGL,EAAA,MAAM,gBAAA,GAAmBA,kBAAY,MAAM;AACzC,IAAA,IAAI,CAAC,OAAA,EAAS;AAEd,IAAA,WAAA,EAAY;AAEZ,IAAA,IAAI,aAAa,CAAA,EAAG;AAClB,MAAA,aAAA,CAAc,OAAA,GAAU,WAAW,MAAM;AACvC,QAAA,YAAA,CAAa,IAAI,CAAA;AACjB,QAAA,OAAA,IAAU;AAAA,MACZ,GAAG,UAAU,CAAA;AAAA,IACf,CAAA,MAAO;AACL,MAAA,YAAA,CAAa,IAAI,CAAA;AACjB,MAAA,OAAA,IAAU;AAAA,IACZ;AAAA,EACF,GAAG,CAAC,OAAA,EAAS,UAAA,EAAY,OAAA,EAAS,WAAW,CAAC,CAAA;AAG9C,EAAA,MAAM,gBAAA,GAAmBA,kBAAY,MAAM;AACzC,IAAA,IAAI,CAAC,OAAA,EAAS;AAEd,IAAA,WAAA,EAAY;AAEZ,IAAA,IAAI,aAAa,CAAA,EAAG;AAClB,MAAA,aAAA,CAAc,OAAA,GAAU,WAAW,MAAM;AACvC,QAAA,YAAA,CAAa,KAAK,CAAA;AAClB,QAAA,OAAA,IAAU;AAAA,MACZ,GAAG,UAAU,CAAA;AAAA,IACf,CAAA,MAAO;AACL,MAAA,YAAA,CAAa,KAAK,CAAA;AAClB,MAAA,OAAA,IAAU;AAAA,IACZ;AAAA,EACF,GAAG,CAAC,OAAA,EAAS,UAAA,EAAY,OAAA,EAAS,WAAW,CAAC,CAAA;AAG9C,EAAA,MAAM,UAAA,GAAaA,iBAAA,CAAY,CAAC,OAAA,KAAqB;AACnD,IAAA,WAAA,EAAY;AACZ,IAAA,YAAA,CAAa,OAAO,CAAA;AACpB,IAAA,IAAI,OAAA,EAAS;AACX,MAAA,OAAA,IAAU;AAAA,IACZ,CAAA,MAAO;AACL,MAAA,OAAA,IAAU;AAAA,IACZ;AAAA,EACF,CAAA,EAAG,CAAC,OAAA,EAAS,OAAA,EAAS,WAAW,CAAC,CAAA;AAGlC,EAAAE,eAAA,CAAU,MAAM;AACd,IAAA,MAAM,UAAU,GAAA,CAAI,OAAA;AACpB,IAAA,IAAI,OAAA,EAAS;AACX,MAAA,IAAI,OAAA,EAAS;AACX,QAAA,OAAA,CAAQ,gBAAA,CAAiB,cAAc,gBAAgB,CAAA;AACvD,QAAA,OAAA,CAAQ,gBAAA,CAAiB,cAAc,gBAAgB,CAAA;AAAA,MACzD,CAAA,MAAO;AACL,QAAA,OAAA,CAAQ,mBAAA,CAAoB,cAAc,gBAAgB,CAAA;AAC1D,QAAA,OAAA,CAAQ,mBAAA,CAAoB,cAAc,gBAAgB,CAAA;AAAA,MAC5D;AAAA,IACF;AAEA,IAAA,OAAO,MAAM;AACX,MAAA,IAAI,OAAA,EAAS;AACX,QAAA,OAAA,CAAQ,mBAAA,CAAoB,cAAc,gBAAgB,CAAA;AAC1D,QAAA,OAAA,CAAQ,mBAAA,CAAoB,cAAc,gBAAgB,CAAA;AAAA,MAC5D;AACA,MAAA,WAAA,EAAY;AAAA,IACd,CAAA;AAAA,EACF,GAAG,CAAC,OAAA,EAAS,gBAAA,EAAkB,gBAAA,EAAkB,WAAW,CAAC,CAAA;AAE7D,EAAA,OAAO;AAAA,IACL,GAAA;AAAA,IACA,SAAA;AAAA,IACA;AAAA,GACF;AACF;;ACnFO,MAAM,YAAA,GAAe,CAC1B,OAAA,GAA+B,EAAC,KACN;AAC1B,EAAA,MAAM;AAAA,IACJ,aAAA;AAAA,IACA,WAAA;AAAA,IACA,QAAA;AAAA,IACA,OAAA,GAAU,IAAA;AAAA,IACV,cAAA,GAAiB,GAAA;AAAA,IACjB,UAAA,GAAa,IAAA;AAAA,IACb,QAAA,GAAW;AAAA,GACb,GAAI,OAAA;AAEJ,EAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAIH,eAAS,KAAK,CAAA;AACpD,EAAA,MAAM,CAAC,eAAA,EAAiB,kBAAkB,CAAA,GAAIA,eAAoD,IAAI,CAAA;AACtG,EAAA,MAAM,CAAC,cAAA,EAAgB,iBAAiB,CAAA,GAAIA,cAAA,CAAS;AAAA,IACnD,SAAA,EAAW,CAAA;AAAA,IACX,UAAA,EAAY,CAAA;AAAA,IACZ,WAAA,EAAa,CAAA;AAAA,IACb,YAAA,EAAc,CAAA;AAAA,IACd,WAAA,EAAa,CAAA;AAAA,IACb,YAAA,EAAc;AAAA,GACf,CAAA;AAED,EAAA,MAAM,GAAA,GAAME,aAAU,IAAI,CAAA;AAC1B,EAAA,MAAM,iBAAA,GAAoBA,aAA8B,IAAI,CAAA;AAC5D,EAAA,MAAM,gBAAA,GAAmBA,aAAO,CAAC,CAAA;AACjC,EAAA,MAAM,iBAAA,GAAoBA,aAAO,CAAC,CAAA;AAClC,EAAA,MAAM,cAAA,GAAiBA,aAAO,KAAK,CAAA;AAGnC,EAAA,MAAM,eAAeA,YAAA,CAAO;AAAA,IAC1B,aAAA;AAAA,IACA,WAAA;AAAA,IACA,QAAA;AAAA,IACA,OAAA;AAAA,IACA,cAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,GACD,CAAA;AAGD,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,YAAA,CAAa,OAAA,GAAU;AAAA,MACrB,aAAA;AAAA,MACA,WAAA;AAAA,MACA,QAAA;AAAA,MACA,OAAA;AAAA,MACA,cAAA;AAAA,MACA,UAAA;AAAA,MACA;AAAA,KACF;AAAA,EACF,CAAC,CAAA;AAGD,EAAA,MAAM,mBAAA,GAAsBF,kBAAY,MAAM;AAC5C,IAAA,IAAI,kBAAkB,OAAA,EAAS;AAC7B,MAAA,YAAA,CAAa,kBAAkB,OAAO,CAAA;AACtC,MAAA,iBAAA,CAAkB,OAAA,GAAU,IAAA;AAAA,IAC9B;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAKL,EAAA,MAAM,YAAA,GAAeA,iBAAA,CAAY,CAAC,KAAA,KAAiB;AACjD,IAAA,MAAM,EAAE,OAAA,EAAAS,QAAAA,EAAS,aAAA,EAAAC,cAAAA,EAAe,aAAAC,YAAAA,EAAa,QAAA,EAAAC,SAAAA,EAAU,cAAA,EAAAC,iBAAgB,UAAA,EAAAC,WAAAA,EAAY,QAAA,EAAAC,SAAAA,KAAa,YAAA,CAAa,OAAA;AAE7G,IAAA,IAAI,CAACN,QAAAA,EAAS;AAEd,IAAA,MAAM,UAAU,KAAA,CAAM,MAAA;AACtB,IAAA,IAAI,CAAC,OAAA,EAAS;AAGd,IAAA,MAAM,iBAAA,GAAoB;AAAA,MACxB,WAAW,OAAA,CAAQ,SAAA;AAAA,MACnB,YAAY,OAAA,CAAQ,UAAA;AAAA,MACpB,aAAa,OAAA,CAAQ,WAAA;AAAA,MACrB,cAAc,OAAA,CAAQ,YAAA;AAAA,MACtB,aAAa,OAAA,CAAQ,WAAA;AAAA,MACrB,cAAc,OAAA,CAAQ;AAAA,KACxB;AACA,IAAA,iBAAA,CAAkB,iBAAiB,CAAA;AAGnC,IAAA,MAAM,mBAAmB,OAAA,CAAQ,SAAA;AACjC,IAAA,MAAM,oBAAoB,OAAA,CAAQ,UAAA;AAClC,IAAA,MAAM,UAAA,GAAa,qBAAqB,gBAAA,CAAiB,OAAA;AACzD,IAAA,MAAM,WAAA,GAAc,sBAAsB,iBAAA,CAAkB,OAAA;AAE5D,IAAA,IAAI,SAAA,GAAuD,IAAA;AAC3D,IAAA,IAAI,cAAc,WAAA,EAAa;AAC7B,MAAA,SAAA,GAAY,MAAA;AAAA,IACd,CAAA,MAAA,IAAW,cAAcM,SAAAA,EAAU;AACjC,MAAA,SAAA,GAAY,UAAA;AAAA,IACd,CAAA,MAAA,IAAW,eAAeD,WAAAA,EAAY;AACpC,MAAA,SAAA,GAAY,YAAA;AAAA,IACd;AAEA,IAAA,IAAI,SAAA,EAAW;AACb,MAAA,kBAAA,CAAmB,SAAS,CAAA;AAAA,IAC9B;AAGA,IAAA,gBAAA,CAAiB,UAAU,OAAA,CAAQ,SAAA;AACnC,IAAA,iBAAA,CAAkB,UAAU,OAAA,CAAQ,UAAA;AAGpC,IAAA,IAAI,CAAC,eAAe,OAAA,EAAS;AAC3B,MAAA,cAAA,CAAe,OAAA,GAAU,IAAA;AACzB,MAAA,cAAA,CAAe,IAAI,CAAA;AACnB,MAAAJ,cAAAA,IAAgB;AAAA,IAClB;AAGA,IAAA,mBAAA,EAAoB;AAGpB,IAAA,iBAAA,CAAkB,OAAA,GAAU,WAAW,MAAM;AAC3C,MAAA,cAAA,CAAe,OAAA,GAAU,KAAA;AACzB,MAAA,cAAA,CAAe,KAAK,CAAA;AACpB,MAAA,kBAAA,CAAmB,IAAI,CAAA;AACvB,MAAAC,YAAAA,IAAc;AAAA,IAChB,GAAGE,eAAc,CAAA;AAGjB,IAAAD,YAAW,KAAK,CAAA;AAAA,EAClB,CAAA,EAAG,CAAC,mBAAmB,CAAC,CAAA;AAGxB,EAAA,MAAM,gBAAA,GAAmBZ,kBAAY,MAAM;AACzC,IAAA,MAAM,EAAE,OAAA,EAAAS,QAAAA,EAAS,WAAA,EAAAE,YAAAA,KAAgB,YAAA,CAAa,OAAA;AAE9C,IAAA,IAAI,CAACF,QAAAA,EAAS;AAGd,IAAA,mBAAA,EAAoB;AACpB,IAAA,cAAA,CAAe,OAAA,GAAU,KAAA;AACzB,IAAA,cAAA,CAAe,KAAK,CAAA;AACpB,IAAA,kBAAA,CAAmB,IAAI,CAAA;AACvB,IAAAE,YAAAA,IAAc;AAAA,EAChB,CAAA,EAAG,CAAC,mBAAmB,CAAC,CAAA;AAGxB,EAAA,MAAM,YAAA,GAAeX,iBAAA,CAAY,CAAC,SAAA,KAAuB;AACvD,IAAA,MAAM,EAAE,aAAA,EAAAU,cAAAA,EAAe,WAAA,EAAAC,YAAAA,KAAgB,YAAA,CAAa,OAAA;AAEpD,IAAA,mBAAA,EAAoB;AACpB,IAAA,cAAA,CAAe,OAAA,GAAU,SAAA;AACzB,IAAA,cAAA,CAAe,SAAS,CAAA;AACxB,IAAA,IAAI,CAAC,SAAA,EAAW;AACd,MAAA,kBAAA,CAAmB,IAAI,CAAA;AACvB,MAAAA,YAAAA,IAAc;AAAA,IAChB,CAAA,MAAO;AACL,MAAAD,cAAAA,IAAgB;AAAA,IAClB;AAAA,EACF,CAAA,EAAG,CAAC,mBAAmB,CAAC,CAAA;AAKxB,EAAAR,eAAA,CAAU,MAAM;AACd,IAAA,MAAM,UAAU,GAAA,CAAI,OAAA;AACpB,IAAA,IAAI,CAAC,OAAA,EAAS;AAGd,IAAA,MAAM,QAAA,GAAW;AAAA,MACf,WAAW,OAAA,CAAQ,SAAA;AAAA,MACnB,YAAY,OAAA,CAAQ,UAAA;AAAA,MACpB,aAAa,OAAA,CAAQ,WAAA;AAAA,MACrB,cAAc,OAAA,CAAQ,YAAA;AAAA,MACtB,aAAa,OAAA,CAAQ,WAAA;AAAA,MACrB,cAAc,OAAA,CAAQ;AAAA,KACxB;AACA,IAAA,iBAAA,CAAkB,QAAQ,CAAA;AAC1B,IAAA,gBAAA,CAAiB,UAAU,QAAA,CAAS,SAAA;AACpC,IAAA,iBAAA,CAAkB,UAAU,QAAA,CAAS,UAAA;AAGrC,IAAA,OAAA,CAAQ,iBAAiB,QAAA,EAAU,YAAA,EAAc,EAAE,OAAA,EAAS,MAAM,CAAA;AAClE,IAAA,OAAA,CAAQ,gBAAA,CAAiB,cAAc,gBAAgB,CAAA;AAEvD,IAAA,OAAO,MAAM;AACX,MAAA,OAAA,CAAQ,mBAAA,CAAoB,UAAU,YAAY,CAAA;AAClD,MAAA,OAAA,CAAQ,mBAAA,CAAoB,cAAc,gBAAgB,CAAA;AAC1D,MAAA,mBAAA,EAAoB;AAAA,IACtB,CAAA;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,OAAO;AAAA,IACL,GAAA;AAAA,IACA,WAAA;AAAA,IACA,eAAA;AAAA,IACA,cAAA;AAAA,IACA;AAAA,GACF;AACF;;ACtQO,MAAM,eAAA,GAAkB,CAC7B,MAAA,EACA,IAAA,GAA6B,EAAC,KAC3B;AACH,EAAA,MAAM,aAAA,GAAgBD,aAAO,IAAI,CAAA;AAEjC,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,cAAc,OAAA,EAAS;AACzB,MAAA,aAAA,CAAc,OAAA,GAAU,KAAA;AACxB,MAAA;AAAA,IACF;AACA,IAAA,OAAO,MAAA,EAAO;AAAA,EAEhB,CAAA,EAAG,CAAC,MAAA,EAAQ,GAAG,IAAI,CAAC,CAAA;AACtB;;ACqDO,MAAM,YAAA,GAAe,CAAC,OAAA,GAA4B,EAAC,KAA0B;AAClF,EAAA,MAAM;AAAA,IACJ,IAAA,GAAO,cAAA;AAAA,IACP,KAAA;AAAA,IACA,QAAA,GAAW,EAAA;AAAA,IACX,KAAA,GAAQ,MAAA;AAAA,IACR,OAAA,GAAU,GAAA;AAAA,IACV,MAAA,GAAS,GAAA;AAAA,IACT,GAAA,GAAM,CAAC,GAAA,EAAK,GAAG,CAAA;AAAA,IACf,MAAA,GAAS,CAAC,CAAA,EAAG,CAAC,CAAA;AAAA,IACd,MAAA,GAAS,GAAA;AAAA,IACT,UAAA,GAAa,mBAAA;AAAA,IACb,UAAA,GAAa,QAAA;AAAA,IACb,KAAA,GAAQ,GAAA;AAAA,IACR,MAAA,GAAS,GAAA;AAAA,IACT,OAAA,GAAU;AAAA,GACZ,GAAI,OAAA;AAEJ,EAAA,MAAM,GAAA,GAAMD,aAAoB,IAAI,CAAA;AACpC,EAAA,MAAM,YAAA,GAAeA,aAA8B,IAAI,CAAA;AACvD,EAAA,MAAM,UAAA,GAAaA,aAAyB,OAAO,CAAA;AAGnD,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,UAAA,CAAW,OAAA,GAAU,EAAE,GAAG,OAAA,EAAQ;AAAA,EACpC,CAAC,CAAA;AAGD,EAAA,MAAM,eAAA,GAAkBF,kBAAY,MAAM;AACxC,IAAA,IAAI,CAAC,GAAA,CAAI,OAAA,IAAW,CAAC,OAAA,EAAS;AAG9B,IAAA,IAAI,aAAa,OAAA,EAAS;AACxB,MAAA,YAAA,CAAa,QAAQ,MAAA,EAAO;AAC5B,MAAA,YAAA,CAAa,OAAA,GAAU,IAAA;AAAA,IACzB;AAEA,IAAA,MAAM,UAAU,GAAA,CAAI,OAAA;AACpB,IAAa,QAAQ,qBAAA;AAGrB,IAAA,MAAM,SAAA,GAAY,QAAA,CAAS,aAAA,CAAc,KAAK,CAAA;AAC9C,IAAA,SAAA,CAAU,MAAM,QAAA,GAAW,UAAA;AAC3B,IAAA,SAAA,CAAU,MAAM,GAAA,GAAM,GAAA;AACtB,IAAA,SAAA,CAAU,MAAM,IAAA,GAAO,GAAA;AACvB,IAAA,SAAA,CAAU,MAAM,KAAA,GAAQ,MAAA;AACxB,IAAA,SAAA,CAAU,MAAM,MAAA,GAAS,MAAA;AACzB,IAAA,SAAA,CAAU,MAAM,aAAA,GAAgB,MAAA;AAChC,IAAA,SAAA,CAAU,KAAA,CAAM,MAAA,GAAS,MAAA,CAAO,QAAA,EAAS;AACzC,IAAA,SAAA,CAAU,MAAM,QAAA,GAAW,QAAA;AAG3B,IAAA,MAAM,MAAA,GAAS,QAAA,CAAS,aAAA,CAAc,QAAQ,CAAA;AAC9C,IAAA,MAAM,GAAA,GAAM,MAAA,CAAO,UAAA,CAAW,IAAI,CAAA;AAClC,IAAA,IAAI,CAAC,GAAA,EAAK;AAEV,IAAA,MAAA,CAAO,KAAA,GAAQ,KAAA;AACf,IAAA,MAAA,CAAO,MAAA,GAAS,MAAA;AAGhB,IAAA,GAAA,CAAI,OAAO,CAAA,EAAG,UAAU,CAAA,CAAA,EAAI,QAAQ,MAAM,UAAU,CAAA,CAAA;AACpD,IAAA,GAAA,CAAI,SAAA,GAAY,KAAA;AAChB,IAAA,GAAA,CAAI,WAAA,GAAc,OAAA;AAClB,IAAA,GAAA,CAAI,SAAA,GAAY,QAAA;AAChB,IAAA,GAAA,CAAI,YAAA,GAAe,QAAA;AAGnB,IAAA,IAAI,KAAA,EAAO;AAET,MAAA,MAAM,GAAA,GAAM,IAAI,KAAA,EAAM;AACtB,MAAA,GAAA,CAAI,WAAA,GAAc,WAAA;AAClB,MAAA,GAAA,CAAI,SAAS,MAAM;AACjB,QAAA,GAAA,CAAI,IAAA,EAAK;AACT,QAAA,GAAA,CAAI,SAAA,CAAU,KAAA,GAAQ,CAAA,EAAG,MAAA,GAAS,CAAC,CAAA;AACnC,QAAA,GAAA,CAAI,MAAA,CAAQ,MAAA,GAAS,IAAA,CAAK,EAAA,GAAM,GAAG,CAAA;AACnC,QAAA,GAAA,CAAI,SAAA,CAAU,KAAK,CAAC,GAAA,CAAI,QAAQ,CAAA,EAAG,CAAC,GAAA,CAAI,MAAA,GAAS,CAAC,CAAA;AAClD,QAAA,GAAA,CAAI,OAAA,EAAQ;AACZ,QAAA,sBAAA,EAAuB;AAAA,MACzB,CAAA;AACA,MAAA,GAAA,CAAI,GAAA,GAAM,KAAA;AAAA,IACZ,CAAA,MAAO;AAEL,MAAA,GAAA,CAAI,IAAA,EAAK;AACT,MAAA,GAAA,CAAI,SAAA,CAAU,KAAA,GAAQ,CAAA,EAAG,MAAA,GAAS,CAAC,CAAA;AACnC,MAAA,GAAA,CAAI,MAAA,CAAQ,MAAA,GAAS,IAAA,CAAK,EAAA,GAAM,GAAG,CAAA;AACnC,MAAA,GAAA,CAAI,QAAA,CAAS,IAAA,EAAM,CAAA,EAAG,CAAC,CAAA;AACvB,MAAA,GAAA,CAAI,OAAA,EAAQ;AACZ,MAAA,sBAAA,EAAuB;AAAA,IACzB;AAEA,IAAA,SAAS,sBAAA,GAAyB;AAChC,MAAA,MAAM,OAAA,GAAU,OAAO,SAAA,EAAU;AACjC,MAAA,MAAM,OAAA,GAAU,OAAO,OAAO,CAAA,CAAA,CAAA;AAE9B,MAAA,SAAA,CAAU,MAAM,eAAA,GAAkB,OAAA;AAClC,MAAA,SAAA,CAAU,MAAM,gBAAA,GAAmB,QAAA;AACnC,MAAA,SAAA,CAAU,KAAA,CAAM,iBAAiB,CAAA,EAAG,GAAA,CAAI,CAAC,CAAC,CAAA,GAAA,EAAM,GAAA,CAAI,CAAC,CAAC,CAAA,EAAA,CAAA;AACtD,MAAA,SAAA,CAAU,KAAA,CAAM,qBAAqB,CAAA,EAAG,MAAA,CAAO,CAAC,CAAC,CAAA,GAAA,EAAM,MAAA,CAAO,CAAC,CAAC,CAAA,EAAA,CAAA;AAEhE,MAAA,OAAA,CAAQ,MAAM,QAAA,GAAW,UAAA;AACzB,MAAA,OAAA,CAAQ,YAAY,SAAS,CAAA;AAC7B,MAAA,YAAA,CAAa,OAAA,GAAU,SAAA;AAAA,IACzB;AAAA,EACF,GAAG,CAAC,IAAA,EAAM,KAAA,EAAO,QAAA,EAAU,OAAO,OAAA,EAAS,MAAA,EAAQ,GAAA,EAAK,MAAA,EAAQ,QAAQ,UAAA,EAAY,UAAA,EAAY,KAAA,EAAO,MAAA,EAAQ,OAAO,CAAC,CAAA;AAGvH,EAAA,MAAM,KAAA,GAAQA,kBAAY,MAAM;AAC9B,IAAA,IAAI,aAAa,OAAA,EAAS;AACxB,MAAA,YAAA,CAAa,QAAQ,MAAA,EAAO;AAC5B,MAAA,YAAA,CAAa,OAAA,GAAU,IAAA;AAAA,IACzB;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAGL,EAAA,MAAM,UAAA,GAAaA,iBAAA,CAAY,CAAC,UAAA,KAA0C;AACxE,IAAA,MAAA,CAAO,MAAA,CAAO,UAAA,CAAW,OAAA,EAAS,UAAU,CAAA;AAC5C,IAAA,eAAA,EAAgB;AAAA,EAClB,CAAA,EAAG,CAAC,eAAe,CAAC,CAAA;AAGpB,EAAAE,eAAA,CAAU,MAAM;AACd,IAAA,IAAI,CAAC,IAAI,OAAA,EAAS;AAElB,IAAA,MAAM,UAAU,GAAA,CAAI,OAAA;AAGpB,IAAA,eAAA,EAAgB;AAGhB,IAAA,MAAM,cAAA,GAAiB,IAAI,cAAA,CAAe,MAAM;AAC9C,MAAA,eAAA,EAAgB;AAAA,IAClB,CAAC,CAAA;AAED,IAAA,cAAA,CAAe,QAAQ,OAAO,CAAA;AAE9B,IAAA,OAAO,MAAM;AACX,MAAA,cAAA,CAAe,UAAA,EAAW;AAC1B,MAAA,KAAA,EAAM;AAAA,IACR,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,eAAA,EAAiB,KAAK,CAAC,CAAA;AAE3B,EAAA,OAAO;AAAA,IACL,GAAA;AAAA,IACA,UAAA;AAAA,IACA,KAAA;AAAA,IACA,SAAS,UAAA,CAAW;AAAA,GACtB;AACF;;AC7MO,MAAM,SAAgC,CAAC;AAAA,EAC5C,QAAA;AAAA,EACA,OAAA,GAAU,SAAA;AAAA,EACV,IAAA,GAAO,IAAA;AAAA,EACP,QAAA,GAAW,KAAA;AAAA,EACX,OAAA;AAAA,EACA,SAAA,GAAY;AACd,CAAA,KAAM;AACJ,EAAA,MAAM,WAAA,GAAc,sIAAA;AAEpB,EAAA,MAAM,cAAA,GAAiB;AAAA,IACrB,OAAA,EAAS,8DAAA;AAAA,IACT,SAAA,EAAW,8DAAA;AAAA,IACX,OAAA,EAAS;AAAA,GACX;AAEA,EAAA,MAAM,WAAA,GAAc;AAAA,IAClB,EAAA,EAAI,qBAAA;AAAA,IACJ,EAAA,EAAI,qBAAA;AAAA,IACJ,EAAA,EAAI;AAAA,GACN;AAEA,EAAA,MAAM,eAAA,GAAkB,WAAW,+BAAA,GAAkC,gBAAA;AAErE,EAAA,MAAM,OAAA,GAAU,CAAA,EAAG,WAAW,CAAA,CAAA,EAAI,eAAe,OAAO,CAAC,CAAA,CAAA,EAAI,WAAA,CAAY,IAAI,CAAC,CAAA,CAAA,EAAI,eAAe,IAAI,SAAS,CAAA,CAAA;AAE9G,EAAA,uBACE,KAAA,CAAA,aAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,OAAA;AAAA,MACX,QAAA;AAAA,MACA;AAAA,KAAA;AAAA,IAEC;AAAA,GACH;AAEJ;;;;;;;;;;;;;;;;;;;;;;;;;"}